package com.sandata.lab.rules.schedules;
import com.sandata.lab.rules.call.model.VisitFact;
import com.sandata.lab.rules.call.model.State;
import java.util.Date;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory
import java.util.Calendar;
//import function com.sandata.lab.rules.call.matching.drools.HelperFunctions.diffDates
function Calendar DateToCalendar(Date date) {
         		Calendar cal = Calendar.getInstance();
         		cal.setTime(date);
         		return cal;
}

function Date CreateDateWithOffset(Date startDate, int i) {
         		Calendar calendar = DateToCalendar(startDate);
         		calendar.add(Calendar.HOUR_OF_DAY, i);
         		return calendar.getTime();
}

function long diffDates(Date d1, Date d2) {
    long retResult = 0L;
    LoggerFactory.getLogger("RulesCallMatching.diffDates").info(String.format("First Date d1 = %s, Second Date d2 = %s", d1.toString(), d2.toString()));
    LoggerFactory.getLogger("RulesCallMatching.diffDates").info(String.format("getTime method results d1.getTime() = %d, d2.getTime() = %d", d1.getTime(), d2.getTime()));

    if(d1.after(d2)) {
        retResult = d1.getTime() - d2.getTime();
        LoggerFactory.getLogger("RulesCallMatching.diffDates").info(String.format("First Date is After Second Date (d1.getTime() - d2.getTime() = %d", retResult));
    }
    else
    {
        retResult = d2.getTime() - d1.getTime();
        LoggerFactory.getLogger("RulesCallMatching.diffDates").info(String.format("First Date is Equal To or Before Second Date (d2.getTime() - d1.getTime() = %d", retResult));

    }

    return retResult;
}

global com.sandata.lab.rules.call.model.CallPreferences callPreferences;//callPreferences

declare Threshold
  value : Long @key
end

declare DeviationThreshold
    value : Long @key
end

declare MinVisitDuration
    value : Long @key
end

rule "cep-engine-init-check-global-callPreferences-000"
    salience 1000
    agenda-group "pick-schedule"
    when
        eval(true)
    then
        LoggerFactory.getLogger("RulesCallMatching").info("Initialized rules checking global");
        LoggerFactory.getLogger("RulesCallMatching").info(String.format("callPreferences.getDeviationThresholdMinutes() returned : %d", callPreferences.getDeviationThresholdMinutes()));
        insert( new DeviationThreshold(Long.valueOf(callPreferences.getDeviationThresholdMinutes() * 60 * 1000)));
        LoggerFactory.getLogger("RulesCallMatching").info(String.format("callPreferences.getMinVisitDurationMS() returned : %d", callPreferences.getMinVisitDurationMS()));
        insert( new MinVisitDuration(Long.valueOf(callPreferences.getMinVisitDurationMS())));
        LoggerFactory.getLogger("RulesCallMatching").info(String.format("callPreferences.getStaffIdMatchLength() returned : %d", callPreferences.getStaffIdMatchLength()));

end

rule "cep-engine-schedules-matched-02 closer to start time callin null, callout null"
    salience 999
    agenda-group "pick-schedule"
    when
        $inserted : VisitFact(state == State.POSSIBLE_MATCH_WAITING_FOR_RESPONSE )
        $scheduled : VisitFact(state == State.POSSIBLE_MATCH_FROM_RESPONSE, $inserted.insertedPatientMatchesScheduled(ani, patientId),
        callIn == null, callOut == null, diffDates($inserted.getCallIn(), scheduledFrom) < diffDates($inserted.getCallIn, scheduledTo))
    then
        $inserted.setState(State.MATCHED);
        $scheduled.setState(State.MATCHED);
        $scheduled.setCallCallIn($inserted.getCallCallIn());
        $scheduled.addTaskList($inserted.getTaskList());
    retract($inserted);
    update($scheduled);
    LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-matched-02 closer to start time callin null, callout null : call inserted was closer to scheduledFrom");
end

rule "cep-engine-schedules-matched-03 closer to start time callin not null callout null > min duration (Ex:5 minutes)"
    salience 999
    agenda-group "pick-schedule"
    when
    $minVisit : MinVisitDuration()
    $inserted : VisitFact(state == State.POSSIBLE_MATCH_WAITING_FOR_RESPONSE )
    $scheduled : VisitFact(state == State.IN_PROGRESS || state == State.POSSIBLE_MATCH_FROM_RESPONSE,
    $inserted.insertedPatientMatchesScheduled(ani, visit.getPatientID()), callIn != null, callOut == null,
     diffDates($inserted.getCallIn(), scheduledFrom) < diffDates($inserted.getCallIn, scheduledTo),
     diffDates(callIn, $inserted.getCallIn()) > $minVisit.getValue())

    then
        $inserted.setState(State.MATCHED);
        $scheduled.setState(State.MATCHED);
        $scheduled.setCallCallOut($inserted.getCallCallIn());
        $scheduled.addTaskList($inserted.getTaskList());
        retract($inserted);
        update($scheduled);
    LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-matched-03 closer to start time callin not null callout null > min duration (Ex:5 minutes) : call inserted was closer to scheduledTo and > getMinVisitDurationMS()");
end

rule "cep-engine-schedules-matched-04 closer to start time callin not null callout not null > min duration (Ex:5 minutes) inbetween -MVV"
    salience 999
    agenda-group "pick-schedule"
    when
    $minVisit : MinVisitDuration()
    $inserted : VisitFact(state == State.POSSIBLE_MATCH_WAITING_FOR_RESPONSE )
    $scheduled : VisitFact(state == State.IN_PROGRESS || state == State.POSSIBLE_MATCH_FROM_RESPONSE, $inserted.insertedPatientMatchesScheduled(ani, visit.getPatientID()), callIn != null, callOut != null,
     diffDates($inserted.getCallIn(), scheduledFrom) < diffDates($inserted.getCallIn, scheduledTo),
     diffDates(callIn, $inserted.getCallIn()) > $minVisit.getValue(),
     diffDates(callOut, $inserted.getCallIn()) > $minVisit.getValue(), callOut.after($inserted.callIn))

    then
        $inserted.setState(State.MATCHED);
        $scheduled.setState(State.MATCHED);
        $scheduled.addTaskList($inserted.getTaskList());
        $scheduled.getVisit().getVisitEvent().add($inserted.getCallCallIn());
        retract($inserted);
        update($scheduled);
    LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-matched-04 closer to start time callin not null callout not null > min duration (Ex:5 minutes) inbetween -MVV");
end

rule "cep-engine-schedules-matched-05 callin not null callout not null > min duration (Ex:5 minutes) call recieved after callout"
    salience 999
    agenda-group "pick-schedule"
    when
    $minVisit : MinVisitDuration()
    $inserted : VisitFact(state == State.POSSIBLE_MATCH_WAITING_FOR_RESPONSE )
    $scheduled : VisitFact(state == State.IN_PROGRESS || state == State.POSSIBLE_MATCH_FROM_RESPONSE, $inserted.insertedPatientMatchesScheduled(ani, visit.getPatientID()), callIn != null, callOut != null,
     diffDates(callOut, $inserted.getCallIn()) > $minVisit.getValue(), callOut.before($inserted.callIn))

    then
        $inserted.setState(State.MATCHED);
        $scheduled.setState(State.MATCHED);
        $scheduled.addTaskList($inserted.getTaskList());
        $scheduled.setCallCallOut($inserted.getCallCallIn());
        retract($inserted);
        update($scheduled);
    LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-matched-05 callin not null callout not null > min duration (Ex:5 minutes) call recieved after callout");
end

rule "cep-engine-schedules-matched-06 closer to end time callin null callout null"
    salience 999
    agenda-group "pick-schedule"
    when
    $inserted : VisitFact(state == State.POSSIBLE_MATCH_WAITING_FOR_RESPONSE )
    $scheduled : VisitFact(state == State.POSSIBLE_MATCH_FROM_RESPONSE,  $inserted.insertedPatientMatchesScheduled(ani, visit.getPatientID()), callIn == null, callOut == null, diffDates($inserted.getCallIn(), scheduledTo) < diffDates($inserted.getCallIn, scheduledFrom))

    then
        $inserted.setState(State.MATCHED);
        $scheduled.setState(State.MATCHED);
        $scheduled.setCallCallOut($inserted.getCallCallIn());
        $scheduled.addTaskList($inserted.getTaskList());
        retract($inserted);
        update($scheduled);
    LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-matched-06 closer to end time callin null callout null : call inserted was closer to scheduledTo, No CallIn no CallOut");
end

rule "cep-engine-schedules-matched-07 callin not null callout null call after callin"
    salience 999
    agenda-group "pick-schedule"
    when
    $minVisit : MinVisitDuration()
    $inserted : VisitFact(state == State.POSSIBLE_MATCH_WAITING_FOR_RESPONSE )
    $scheduled : VisitFact(state == State.POSSIBLE_MATCH_FROM_RESPONSE, $inserted.insertedPatientMatchesScheduled(ani, visit.getPatientID()), callIn != null, callOut == null,
    diffDates(callIn, $inserted.getCallIn()) > $minVisit.getValue(), callIn.before($inserted.getCallIn()))
    then
        $inserted.setState(State.MATCHED);
        $scheduled.setState(State.MATCHED);
        $scheduled.setCallCallOut($inserted.getCallCallIn());
        $scheduled.addTaskList($inserted.getTaskList());
        retract($inserted);
        update($scheduled);
        LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-matched-07 callin not null callout null call after callin : call after CallIn no CallOut");
end

rule "cep-engine-schedules-matched-08 callin not null callout not null call after callout"
    salience 999
    agenda-group "pick-schedule"
    when
    $minVisit : MinVisitDuration()
    $inserted : VisitFact(state == State.POSSIBLE_MATCH_WAITING_FOR_RESPONSE )
    $scheduled : VisitFact(state == State.POSSIBLE_MATCH_FROM_RESPONSE, $inserted.insertedPatientMatchesScheduled(ani, visit.getPatientID()), callIn != null, callOut != null,
    callOut.before($inserted.getCallIn()),
    diffDates(callOut, $inserted.getCallIn()) > $minVisit.getValue())

    then
        $inserted.setState(State.MATCHED);
        $scheduled.setState(State.MATCHED);
        $scheduled.setCallCallOut($inserted.getCallCallIn());
        $scheduled.addTaskList($inserted.getTaskList());
        retract($inserted);
        update($scheduled);
        LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-matched-08 callin not null callout not null call after callout : call after callout");
end

rule "cep-engine-schedules-matched-09 callin null callout not null call after callout"
    salience 999
    agenda-group "pick-schedule"
    when
    $minVisit : MinVisitDuration()
    $inserted : VisitFact(state == State.POSSIBLE_MATCH_WAITING_FOR_RESPONSE )
    $scheduled : VisitFact(state == State.POSSIBLE_MATCH_FROM_RESPONSE, $inserted.insertedPatientMatchesScheduled(ani, visit.getPatientID()), callIn == null, callOut != null,
    callOut.before($inserted.getCallIn()),
    diffDates(callOut, $inserted.getCallIn()) > $minVisit.getValue())

    then
        $inserted.setState(State.MATCHED);
        $scheduled.setState(State.MATCHED);
        //remove from visitEventList first.
        $scheduled.setCallIn($scheduled.getCallOut());

        $scheduled.setCallCallOut($inserted.getCallCallIn());

        $scheduled.addTaskList($inserted.getTaskList());
        update($scheduled);
        retract($inserted);

        LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-matched-09 callin null callout not null call after callout : call after callout, no callin, move old callout to callin.");
end



rule "cep-engine-schedules-0 in between from and to possible match"
    salience 100
    agenda-group "pick-schedule"
    when
    $inserted : VisitFact(state == State.AGG_WAITING_FOR_RESPONSE)
    $scheduled : VisitFact(state == State.AGG_INSERTED_FROM_RESPONSE, $inserted.insertedPatientMatchesScheduled(ani, visit.getPatientID()), scheduledFrom.before($inserted.getCallIn()),
    scheduledTo.after($inserted.getCallIn()))
    then
    $inserted.setState(State.POSSIBLE_MATCH_WAITING_FOR_RESPONSE);
    $scheduled.setState(State.POSSIBLE_MATCH_FROM_RESPONSE);
    update($inserted);
    update($scheduled);
    LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-0 in between from and to possible match : In between From and To");
end

rule "cep-engine-schedules-1 outside schedule-00 callIn null"
    salience 98
    agenda-group "pick-schedule"
    when
    $deviation : DeviationThreshold()
    $inserted : VisitFact(state == State.AGG_WAITING_FOR_RESPONSE)
    $scheduled : VisitFact(state == State.AGG_INSERTED_FROM_RESPONSE, $inserted.insertedPatientMatchesScheduled(ani, visit.getPatientID()), callIn == null, callOut == null,
    diffDates(scheduledFrom, $inserted.getCallIn()) <=  $deviation.getValue())
    then
    $scheduled.setState(State.CONTENDER_FROM);
    update($scheduled);
    LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-1 outside schedule-00 callIn null : Setting Contender From!");
end

rule "cep-engine-schedules-1 outside schedule-01 callIn not null schedule before"
    salience 98
    agenda-group "pick-schedule"
    when
    $deviation : DeviationThreshold()
    $inserted : VisitFact(state == State.AGG_WAITING_FOR_RESPONSE)
    $scheduled : VisitFact(state == State.AGG_INSERTED_FROM_RESPONSE, $inserted.insertedPatientMatchesScheduled(ani, visit.getPatientID()), callIn != null,
    scheduledFrom.before($inserted.getCallIn()),
    diffDates(scheduledTo,$inserted.getCallIn()) <= $deviation.getValue())
    then
    $scheduled.setState(State.CONTENDER_TO);
    update($scheduled);
    LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-1 outside schedule-01 callIn not null : Setting Contender To!");

end

rule "cep-engine-schedules-1 outside schedule-01 callIn not null schedule after"
    salience 98
    agenda-group "pick-schedule"
    when
    $deviation : DeviationThreshold()
    $inserted : VisitFact(state == State.AGG_WAITING_FOR_RESPONSE)
    $scheduled : VisitFact(state == State.AGG_INSERTED_FROM_RESPONSE, $inserted.insertedPatientMatchesScheduled(ani, visit.getPatientID()), callIn != null,
    scheduledFrom.after($inserted.getCallIn()),
    diffDates(scheduledFrom,$inserted.getCallIn()) <= $deviation.getValue())
    then
    $scheduled.setState(State.CONTENDER_TO);
    update($scheduled);
    LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-1 outside schedule-01 callIn not null : Setting Contender To!");

end


rule "cep-engine-schedules-1 outside schedule-02 callIn null callOut not null schedule before"
    salience 98
    agenda-group "pick-schedule"
    when
    $deviation : DeviationThreshold()
    $inserted : VisitFact(state == State.AGG_WAITING_FOR_RESPONSE)
    $scheduled : VisitFact(state == State.AGG_INSERTED_FROM_RESPONSE, $inserted.insertedPatientMatchesScheduled(ani, visit.getPatientID()), callIn == null, callOut != null,
    scheduledFrom.before($inserted.getCallIn()),
    diffDates(scheduledTo,$inserted.getCallIn()) <= $deviation.getValue())
    then
    $scheduled.setState(State.CONTENDER_TO);
    update($scheduled);
    LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-1 outside schedule-02 callIn null callOut not null : Setting Contender To!");
end

rule "cep-engine-schedules-1 outside schedule-02 callIn null callOut not null"
    salience 98
    agenda-group "pick-schedule"
    when
    $deviation : DeviationThreshold()
    $inserted : VisitFact(state == State.AGG_WAITING_FOR_RESPONSE)
    $scheduled : VisitFact(state == State.AGG_INSERTED_FROM_RESPONSE, $inserted.insertedPatientMatchesScheduled(ani, visit.getPatientID()), callIn == null, callOut != null,
    scheduledFrom.after($inserted.getCallIn()),
    diffDates(scheduledFrom,$inserted.getCallIn()) <= $deviation.getValue())
    then
    $scheduled.setState(State.CONTENDER_TO);
    update($scheduled);
    LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedules-1 outside schedule-02 callIn null callOut not null : Setting Contender To!");
end


rule "cep-engine-schedule-10 no matches inside schedules so set new agenda-group"
    salience 95
    agenda-group "pick-schedule"
    when
        $scheduled : VisitFact(state==State.CONTENDER_FROM || state == State.CONTENDER_TO)
    then
        drools.setFocus("closest-schedule");
        insert( new Threshold(Long.valueOf(callPreferences.getDeviationThresholdMinutes() * 60 * 1000)));
        LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedule-10 no matches inside schedules so set new agenda-group : This rule should have set a new agenda group closest-schedule!");
end

rule "cep-engine-schedule-11 no matches inside schedules no contenders"
    salience 60
    agenda-group "pick-schedule"
    when
        $inserted : VisitFact(state == State.AGG_WAITING_FOR_RESPONSE)
    then
        $inserted.setState(State.CREATE_UNPLANNED_VISIT);
        $inserted.setScheduledFrom($inserted.getCallIn());
        $inserted.setScheduledTo(CreateDateWithOffset($inserted.getCallIn(), 1));
        update($inserted);
        LoggerFactory.getLogger("RulesCallMatching").info("cep-engine-schedule-11-Rev no matches inside schedules no contenders Salience 60  : Create Unplanned Visit!");

end

