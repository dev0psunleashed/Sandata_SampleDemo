package com.sandata.lab.rules.vv.log.utils;

/**
 * Created by thanhxle on 11/22/2016.
 */
public class App {

    private final static String ROUTE_PREFIX = "SANDATA_";
    public enum ID {

        //route ids from vv-call-import
        EVV_CALLS_TRANSFORM_ROUTE (ROUTE_PREFIX + "EVV_CALLS_TRANSFORM_ROUTE"),
        CALLS_IMPORT_QUARTZ_ROUTE (ROUTE_PREFIX + "EVV_CALLS_IMPORT_QUARTZ_ROUTE"),
        PROCESSED_VV_CALLS_IMPORT_ROUTE(ROUTE_PREFIX + "PROCESSED_VV_CALLS_IMPORT_ROUTE"),
        PROCESSED_CALLS (ROUTE_PREFIX + "PROCESSED_CALLS"),

        CALL_MATCHING_PROCESS_VISIT_EVENT_GROUPS(ROUTE_PREFIX + "CALL_MATCHING_PROCESS_VISIT_EVENT_GROUPS"),
        CALL_MATCHING_SERVICE_RULES(ROUTE_PREFIX + "CALL_MATCHING_SERVICE_RULES"),
        CALL_MATCHING_VISIT_EVENT_SCHEDULE_MATCHING_AGGREGATOR(ROUTE_PREFIX + "CALL_MATCHING_VISIT_EVENT_SCHEDULE_MATCHING_AGGREGATOR"),
        CALL_MATCHING_VISIT_EVENT_STAFF_AGGREGATOR(ROUTE_PREFIX + "CALL_MATCHING_VISIT_EVENT_STAFF_AGGREGATOR"),
        CALL_MATCHING_VISIT_EVENT_PATIENT_AGGREGATOR(ROUTE_PREFIX +"CALL_MATCHING_VISIT_EVENT_PATIENT_AGGREGATOR"),
        CALL_MATCHING_CALL_VALIDATOR(ROUTE_PREFIX + "CALL_MATCHING_CALL_VALIDATOR"),
        CALL_MATCHING_MATCHED_VISIT_EVENT_AGGREGATOR(ROUTE_PREFIX + "CALL_MATCHING_MATCHED_VISIT_EVENT_AGGREGATOR"),

        //route ids for vv-visit-exception-service
        VISIT_EXCEPTION_CALCULATE_AGGREGATOR(ROUTE_PREFIX + "VISIT_EXCEPTION_CALCULATE_AGGREGATOR"),
        VISIT_EXCEPTION_SCHEDULED_ROUTE(ROUTE_PREFIX + "VISIT_EXCEPTION_SCHEDULED_ROUTE"),
        VISIT_EXCEPTION_SERVICE_RULES(ROUTE_PREFIX + "VISIT_EXCEPTION_SERVICE_RULES"),
        VISIT_TASK_EXCEPTION_ROUTE(ROUTE_PREFIX + "VISIT_TASK_EXCEPTION_ROUTE"),
        VISIT_GPS_EXCEPTION_ROUTE(ROUTE_PREFIX + "VISIT_GPS_EXCEPTION_ROUTE"),
        SANDATA_REST_VV_EXCEPTIONS(ROUTE_PREFIX + "SANDATA_REST_VV_EXCEPTIONS"),
        MANUAL_VISIT_EXCEPTION_ROUTE(ROUTE_PREFIX + "MANUAL_VISIT_EXCEPTION_ROUTE"),

        //route ids from vv-data-service
        REST_VV_DATA_SERVICE_ROUTE_ENDPOINT (ROUTE_PREFIX + "SANDATA-REST-VV-DATA-SERVICE"),
        GET_BUSINESS_ENTITY_DNIS_MAPPING_ROUTE(ROUTE_PREFIX + "GET_BUSINESS_ENTITY_DNIS_MAPPING_ROUTE"),
        GET_SCHEDULE_EVENTS_ROUTE(ROUTE_PREFIX + "GET_SCHEDULE_EVENTS_ROUTE"),
        GET_BUSINESS_ENTITY_CALL_PREFERENCES(ROUTE_PREFIX + "GET_BUSINESS_ENTITY_CALL_PREFERENCES"),
        GET_BUSINESS_ENTITY_ID_LIST_ROUTE(ROUTE_PREFIX + "GET_BUSINESS_ENTITY_ID_LIST_ROUTE"),
        GET_BUSINESS_ENTITY_VISIT_VERIFICATION_SETTINGS_ROUTE(ROUTE_PREFIX + "GET_BUSINESS_ENTITY_VISIT_VERIFICATION_SETTINGS_ROUTE"),
        GET_BUSINESS_ENTITY_VISITS_FOR_EXCEPTIONS_ROUTE(ROUTE_PREFIX + "GET_BUSINESS_ENTITY_VISITS_FOR_EXCEPTIONS_ROUTE"),
        GET_STAFFS_ROUTE(ROUTE_PREFIX + "GET_STAFFS_ROUTE"),
        GET_PATIENTS_ROUTE(ROUTE_PREFIX + "GET_PATIENTS_ROUTE"),
        GET_VISIT_VERIFICATION_EXCEPTIONS_ROUTE(ROUTE_PREFIX + "GET_VISIT_VERIFICATION_EXCEPTIONS_ROUTE"),
        POST_PLANNED_VISIT_EVENT_ROUTE(ROUTE_PREFIX + "POST_PLANNED_VISIT_EVENT_ROUTE"),
        POST_UNPLANNED_VISIT_EVENT_ROUTE(ROUTE_PREFIX + "POST_UNPLANNED_VISIT_EVENT_ROUTE"),
        CREATE_VISIT_AUTH_ROUTE(ROUTE_PREFIX + "CREATE_VISIT_AUTH_ROUTE"),
        INSERT_VISIT_EXCEPTION_AGGREGATOR(ROUTE_PREFIX + "INSERT_VISIT_EXCEPTION_AGGREGATOR"),
        GET_SCHEDULE_TASK_LIST_ROUTE(ROUTE_PREFIX + "GET_SCHEDULE_TASK_LIST_ROUTE"),
        PROCESSED_CALL_ROUTE(ROUTE_PREFIX + "PROCESSED_CALL_ROUTE"),
        GET_PATIENT_COORDINATOR_ROUTE(ROUTE_PREFIX + "GET_PATIENT_COORDINATOR_ROUTE"),
        GET_AGENCY_GPS_DISTANCE_THRESHOLD_ROUTE(ROUTE_PREFIX + "GET_AGENCY_GPS_DISTANCE_THRESHOLD_ROUTE"),
        GET_SCHED_EVENT_BY_SK_ROUTE(ROUTE_PREFIX + "GET_SCHED_EVENT_BY_SK_ROUTE"),
        GET_STAFF_BY_ID_ROUTE(ROUTE_PREFIX + "GET_STAFF_BY_ID_ROUTE"),
        GET_PATIENT_BY_ID_ROUTE(ROUTE_PREFIX + "GET_PATIENT_BY_ID_ROUTE"),
        CLEAR_VISIT_EXCP_FOR_VISIT(ROUTE_PREFIX + "CLEAR_VISIT_EXCP_FOR_VISIT"),
        GET_PHONE_NUMBERS_BY_PATIENT_ID_ROUTE(ROUTE_PREFIX + "GET_PHONE_NUMBERS_BY_PATIENT_ID_ROUTE"),
        GET_VISIT_SERVICE_BY_VISIT_SK_ROUTE(ROUTE_PREFIX + "GET_VISIT_SERVICE_BY_VISIT_SK_ROUTE"),
        
        // ---------------- new defined route id ---------
        GET_CONTRACT_LEVEL_EXCP_LIST_ROUTE(ROUTE_PREFIX + "GET_CONTRACT_LVEL_EXCP_LIST_ROUTE"),
        GET_AGENCY_LEVEL_EXCP_LIST_ROUTE(ROUTE_PREFIX + "GET_AGENCY_LVEL_EXCP_LIST_ROUTE"),
        GET_VISIT_INFO_BY_SK_ROUTE(ROUTE_PREFIX + "GET_VISIT_INFO_BY_SK_ROUTE"),
        VISIT_EXCEPTION_ENTRY_ROUTE(ROUTE_PREFIX + "VISIT_EXCEPTION_ENTRY_ROUTE"),
        UNKNOWN_PATIENT_EXCEPTION_ROUTE(ROUTE_PREFIX + "UNKNOWN_PATIENT_EXCEPTION_ROUTE"),
        UNKNOWN_STAFF_EXCEPTION_ROUTE(ROUTE_PREFIX + "UNKNOWN_STAFF_EXCEPTION_ROUTE"),
        GET_SCHED_EVENT_FACT_BY_VISIT_ROUTE(ROUTE_PREFIX + "GET_SCHED_EVENT_FACT_BY_VISIT_ROUTE"),
        GET_VISIT_EVENT_FACT_BY_VISIT_ROUTE(ROUTE_PREFIX + "GET_VISIT_EVENT_FACT_BY_VISIT_ROUTE"),
        SANDATA_VALIDATION_AGGREGATOR(ROUTE_PREFIX + "VALIDATION_AGGREGATOR"),
        ;

        private final String id;

        private ID(final String id) {
            this.id = id;
        }

        @Override
        public String toString() {
            return this.id;
        }
    }
}
