package com.sandata.lab.rest.payer.utils;

/**
 * Created by khangle on 09/14/2016.
 */
public class PayerUtil {

    /**
     * Constructor
     */
    private PayerUtil() {
        // nothing
    }

    /**
     * Get all columns in COREDATA.PAYER table for using in SELECT * query
     *
     * @return
     */
    public static final String getAllPayerColumnsForSelect() {
        StringBuilder sb = new StringBuilder()
                .append(" ")
                .append("PAYER_SK, REC_CREATE_TMSTP, REC_UPDATE_TMSTP, REC_EFF_TMSTP, REC_TERM_TMSTP, REC_CREATED_BY, REC_UPDATED_BY, ")
                .append("CHANGE_REASON_MEMO, CURR_REC_IND, CHANGE_VERSION_ID, BE_ID, TZ_NAME, PAYER_ID, PAYER_NAME, PAYER_TYP_QLFR, PAYER_SUB_TYP_CODE, ")
                .append("PAYER_EFF_DATE, PAYER_TERM_DATE, PAYER_CONT_FIRST_NAME, PAYER_CONT_LAST_NAME, PAYER_CONT_TITLE, PAYER_CONT_PHONE, ")
                .append("PAYER_CONT_EMAIL, PAYER_CONT_EMAIL_QLFR, PAYER_ADDR1, PAYER_ADDR2, PAYER_CITY, PAYER_COUNTY, PAYER_STATE, PAYER_PSTL_CODE, ")
                .append("PAYER_ZIP4, PAYER_PHONE, PAYER_PHONE_EXT, PAYER_PHONE_QLFR, PAYER_PHONE_1, PAYER_PHONE_1_EXT, PAYER_PHONE_1_QLFR, ")
                .append("PAYER_FAX, PAYER_FAX_QLFR, PAYER_FAX_1, PAYER_FAX_1_QLFR, PAYER_EMAIL, PAYER_EMAIL_QLFR, PAYER_BILL_TO_CONT_NAME, ")
                .append("PAYER_BILL_TO_CONT_TITLE, PAYER_BILL_TO_ADDR1, PAYER_BILL_TO_ADDR2, PAYER_BILL_TO_CITY, PAYER_BILL_TO_STATE, ")
                .append("PAYER_BILL_TO_PSTL_CODE, PAYER_BILL_TO_ZIP4, PAYER_BILL_TO_PHONE, PAYER_BILL_TO_PHONE_EXT, PAYER_REMIT_TO_CONT_NAME, ")
                .append("PAYER_REMIT_TO_CONT_TITLE, PAYER_REMIT_TO_ADDR1, PAYER_REMIT_TO_ADDR2, PAYER_REMIT_TO_CITY, PAYER_REMIT_TO_STATE, ")
                .append("PAYER_REMIT_TO_PSTL_CODE, PAYER_REMIT_TO_ZIP4, PAYER_REMIT_TO_PHONE, PAYER_REMIT_TO_PHONE_EXT, PAYER_EIN, ")
                .append("PAYER_WEEK_END_DAY, NVL(PAYER_ACTIVE_IND, 0) AS PAYER_ACTIVE_IND, ") // Default PAYER_ACTIVE_IND to 0 when null
                .append("PAYER_BILL_CODE, PAYER_INV_FMT_TYP_NAME, PAYER_RSBMT_INV_FMT_TYP_NAME, ")
                .append("PAYER_CLAIM_SUBM_FREQ_TYP_NAME, PAYER_WEEKEND_START_DAY, PAYER_WEEKEND_START_TIME, PAYER_WEEKEND_END_DAY, PAYER_WEEKEND_END_TIME, ")
                .append("PAYER_EDI_ROUTING_ID, PAYER_SVC_UNIT_EQUIV, PAYER_LI_EQUIV, PAYER_EDI_SUBMITTABLE_IND, PAYER_HOLD_BILLING_IND, ")
                .append("PAYER_SPLIT_BILLING_ALWD_IND, PAYER_NO_HOLIDAY_PAY_IND, PAYER_ELIG_CHECK_RQD_IND, PAYER_CDS_IND, PAYER_BILLING_UNIT_ROUND_IND, ")
                .append("PAYER_SIG_RQD_IND, PAYER_PT_INS_ID_RQD_IND, PAYER_APPROVAL_TYP, PAYER_EDI_SUBMITTER_ID, PAYER_EDI_SUBMITTER_NAME, ")
                .append("PAYER_EDI_RECEIVER_ID, PAYER_EDI_RECEIVER_NAME, PAYER_EDI_RECEIVER_ID_QLFR, PAYER_EDI_GRP_SUBMITTER_ID, PAYER_EDI_PROVIDER_COMML_ID, ")
                .append("PAYER_BILL_TYP_CODE, PT_DISCHARGE_STATUS_CODE, PT_ADM_SRC_CODE, PT_ADM_TYP_CODE, PCP_CODE")
                .append(" ");

        return sb.toString();
    }
}
