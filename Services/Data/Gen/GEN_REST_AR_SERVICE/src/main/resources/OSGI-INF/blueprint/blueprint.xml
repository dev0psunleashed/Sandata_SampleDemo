<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:camel="http://camel.apache.org/schema/blueprint"
           xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.2.0"
           xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
           xsi:schemaLocation="
                http://www.osgi.org/xmlns/blueprint/v1.0.0
                http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
                http://camel.apache.org/schema/blueprint
                http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
                http://cxf.apache.org/blueprint/jaxrs
                http://cxf.apache.org/schemas/blueprint/jaxrs.xsd">

    <cm:property-placeholder id="restOracleApp.blueprint.placeholder" persistent-id="com.sandata.lab.rest.ar" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="activeMQ.uri" value="tcp://localhost:61616" />
            <cm:property name="activeMQ.username" value="admin" />
            <cm:property name="activeMQ.password" value="admin" />
            <cm:property name="thread.pool.size" value="20" />
            <cm:property name="thread.pool.max.size" value="100" />
            <cm:property name="thread.pool.max.queue.size" value="-1" />
            <cm:property name="activeMQ.concurrentConsumers" value="100" />
            <cm:property name="rest.concurrentConsumers" value="20" />
            <cm:property name="webservice.url" value="/data/service/ar" />
        </cm:default-properties>
    </cm:property-placeholder>

    <bean id="cxfRouteHandler" class="com.sandata.lab.rest.ar.services.CxfRouteHandler" depends-on="appCamelContext" />

    <bean id="formatTransformer" class="com.sandata.lab.common.utils.data.transformer.FormatTransformer" depends-on="appCamelContext" />

    <bean id="oracleDataServiceApi" class="com.sandata.lab.rest.ar.impl.OracleDataService"  depends-on="appCamelContext" activation="eager">
        <property name="connectionPoolDataService">
            <reference
                    interface="com.sandata.lab.dl.db.pool.api.ConnectionPoolDataService"
                    availability="mandatory" />
        </property>
    </bean>

    <bean id="restDataService" class="com.sandata.lab.rest.ar.impl.RestDataService" depends-on="oracleDataServiceApi">
        <property name="oracleDataService" ref="oracleDataServiceApi" />
    </bean>

    <bean id="arDataService" class="com.sandata.lab.rest.ar.impl.ARDataService" depends-on="restDataService">
        <property name="oracleDataService" ref="oracleDataServiceApi" />
    </bean>

    <bean id="postDataService" class="com.sandata.lab.rest.ar.impl.PostDataService" depends-on="restDataService">
        <property name="oracleDataService" ref="oracleDataServiceApi" />
    </bean>

    <bean id="restUnappliedDataService" class="com.sandata.lab.rest.ar.impl.RestUnappliedDataService" depends-on="oracleDataServiceApi" >
        <property name="oracleDataService" ref="oracleDataServiceApi" />
    </bean>

    <bean id="restManualPostsDataService" class="com.sandata.lab.rest.ar.impl.RestManualPostsDataService" depends-on="restDataService" >
        <property name="oracleDataService" ref="oracleDataServiceApi" />
    </bean>

    <bean id="appContext" class="com.sandata.lab.rest.ar.app.AppContext"
          factory-method="initCamelContext" depends-on="appCamelContext">
        <argument ref="appCamelContext" />
    </bean>

    <bean id="authenticationInterceptor" class="org.apache.cxf.jaxrs.security.JAASAuthenticationFilter">
        <property name="contextName" value="karaf"/>
    </bean>

    <bean id="gsonProvider" class="com.sandata.lab.common.utils.data.provider.CustomEnumGSONProvider"/>

    <!-- connect to the local ActiveMQ broker -->
    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="brokerURL" value="${activeMQ.uri}" />
        <property name="userName" value="${activeMQ.username}" />
        <property name="password" value="${activeMQ.password}" />
        <property name="concurrentConsumers" value="${activeMQ.concurrentConsumers}"/>
    </bean>

    <cxf:rsServer id="rsServer" address="${webservice.url}"
                  serviceClass="com.sandata.lab.rest.ar.RestfulServices"
                  loggingFeatureEnabled="true"
                  loggingSizeLimit="20">
        <cxf:providers>
            <ref component-id="authenticationInterceptor"/>
            <ref component-id="gsonProvider" />
        </cxf:providers>
    </cxf:rsServer>

    <camelContext id="appCamelContext" trace="true" streamCache="true" useBlueprintPropertyResolver="true" xmlns="http://camel.apache.org/schema/blueprint">
        <!-- using Camel properties component and refer to the OSGI-INF.blueprint property placeholder by its id -->
        <!-- http://camel.apache.org/properties.html : inside camelContext {{}} : outside camelContext ${} -->
        <!-- <propertyPlaceholder id="properties" location="OSGI-INF.blueprint:dhs.OSGI-INF.blueprint.placeholder"/>-->
        <propertyPlaceholder id="properties" location="blueprint:restOracleApp.blueprint.placeholder"/>
        <package>com.sandata.lab.rest.ar.routes</package>

        <threadPoolProfile id="arRestThreadPool" poolSize="{{thread.pool.size}}" maxPoolSize="{{thread.pool.max.size}}" maxQueueSize="{{thread.pool.max.queue.size}}"/>
    </camelContext>
</blueprint>
