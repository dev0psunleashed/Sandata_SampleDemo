CREATE OR REPLACE PACKAGE PKG_AM IS

TYPE REF_CURSOR IS REF CURSOR;
FUNCTION getBeRaceEthnicityLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeRaceEthnicityLst(BERACEETHNICITYLST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeRaceEthnicityLst(BERACEETHNICITYLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeRaceEthnicityLst(BE_RACE_ETHNICITY_LST_VAR BE_RACE_ETHNICITY_LST_T) RETURN NUMBER;
FUNCTION updateBeRaceEthnicityLst(BE_RACE_ETHNICITY_LST_VAR BE_RACE_ETHNICITY_LST_T) RETURN NUMBER;
FUNCTION deleteBeRaceEthnicityLst(BE_RACE_ETHNICITY_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeReligionLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeReligionLst(BERELIGIONLST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeReligionLst(BERELIGIONLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeReligionLst(BE_RELIGION_LST_VAR BE_RELIGION_LST_T) RETURN NUMBER;
FUNCTION updateBeReligionLst(BE_RELIGION_LST_VAR BE_RELIGION_LST_T) RETURN NUMBER;
FUNCTION deleteBeReligionLst(BE_RELIGION_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeStaffTrngCtgyLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeStaffTrngCtgyLst(BESTAFFTRNGCTGYLST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeStaffTrngCtgyLst(BESTAFFTRNGCTGYLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeStaffTrngCtgyLst(BE_STAFF_TRNG_CTGY_LST_VAR BE_STAFF_TRNG_CTGY_LST_T) RETURN NUMBER;
FUNCTION updateBeStaffTrngCtgyLst(BE_STAFF_TRNG_CTGY_LST_VAR BE_STAFF_TRNG_CTGY_LST_T) RETURN NUMBER;
FUNCTION deleteBeStaffTrngCtgyLst(BE_STAFF_TRNG_CTGY_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getPayerLobLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getPayerLobLst(PAYERLOBLST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getPayerLobLst(PAYERLOBLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertPayerLobLst(PAYER_LOB_LST_VAR PAYER_LOB_LST_T) RETURN NUMBER;
FUNCTION updatePayerLobLst(PAYER_LOB_LST_VAR PAYER_LOB_LST_T) RETURN NUMBER;
FUNCTION deletePayerLobLst(PAYER_LOB_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getPayerRateTypLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getPayerRateTypLst(PAYERRATETYPLST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getPayerRateTypLst(PAYERRATETYPLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertPayerRateTypLst(PAYER_RATE_TYP_LST_VAR PAYER_RATE_TYP_LST_T) RETURN NUMBER;
FUNCTION updatePayerRateTypLst(PAYER_RATE_TYP_LST_VAR PAYER_RATE_TYP_LST_T) RETURN NUMBER;
FUNCTION deletePayerRateTypLst(PAYER_RATE_TYP_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getPayerRevCodeLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getPayerRevCodeLst(PAYERREVCODELST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getPayerRevCodeLst(PAYERREVCODELST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertPayerRevCodeLst(PAYER_REV_CODE_LST_VAR PAYER_REV_CODE_LST_T) RETURN NUMBER;
FUNCTION updatePayerRevCodeLst(PAYER_REV_CODE_LST_VAR PAYER_REV_CODE_LST_T) RETURN NUMBER;
FUNCTION deletePayerRevCodeLst(PAYER_REV_CODE_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getPayerSvcLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getPayerSvcLst(PAYERSVCLST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getPayerSvcLst(PAYERSVCLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertPayerSvcLst(PAYER_SVC_LST_VAR PAYER_SVC_LST_T) RETURN NUMBER;
FUNCTION updatePayerSvcLst(PAYER_SVC_LST_VAR PAYER_SVC_LST_T) RETURN NUMBER;
FUNCTION deletePayerSvcLst(PAYER_SVC_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getContrBillingCodeLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getContrBillingCodeLst(CONTRBILLINGCODELST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getContrBillingCodeLst(CONTRBILLINGCODELST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertContrBillingCodeLst(CONTR_BILLING_CODE_LST_VAR CONTR_BILLING_CODE_LST_T) RETURN NUMBER;
FUNCTION updateContrBillingCodeLst(CONTR_BILLING_CODE_LST_VAR CONTR_BILLING_CODE_LST_T) RETURN NUMBER;
FUNCTION deleteContrBillingCodeLst(CONTR_BILLING_CODE_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getContrMdfrLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getContrMdfrLst(CONTRMDFRLST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getContrMdfrLst(CONTRMDFRLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertContrMdfrLst(CONTR_MDFR_LST_VAR CONTR_MDFR_LST_T) RETURN NUMBER;
FUNCTION updateContrMdfrLst(CONTR_MDFR_LST_VAR CONTR_MDFR_LST_T) RETURN NUMBER;
FUNCTION deleteContrMdfrLst(CONTR_MDFR_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getContrRateTypLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getContrRateTypLst(CONTRRATETYPLST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getContrRateTypLst(CONTRRATETYPLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertContrRateTypLst(CONTR_RATE_TYP_LST_VAR CONTR_RATE_TYP_LST_T) RETURN NUMBER;
FUNCTION updateContrRateTypLst(CONTR_RATE_TYP_LST_VAR CONTR_RATE_TYP_LST_T) RETURN NUMBER;
FUNCTION deleteContrRateTypLst(CONTR_RATE_TYP_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getContrSvcLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getContrSvcLst(CONTRSVCLST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getContrSvcLst(CONTRSVCLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertContrSvcLst(CONTR_SVC_LST_VAR CONTR_SVC_LST_T) RETURN NUMBER;
FUNCTION updateContrSvcLst(CONTR_SVC_LST_VAR CONTR_SVC_LST_T) RETURN NUMBER;
FUNCTION deleteContrSvcLst(CONTR_SVC_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getContrExcpLst RETURN REF_CURSOR;
FUNCTION getContrExcpLst(CONTREXCPLST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getContrExcpLst(CONTREXCPLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertContrExcpLst(CONTR_EXCP_LST_VAR CONTR_EXCP_LST_T) RETURN NUMBER;
FUNCTION updateContrExcpLst(CONTR_EXCP_LST_VAR CONTR_EXCP_LST_T) RETURN NUMBER;
FUNCTION deleteContrExcpLst(CONTR_EXCP_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeExcpLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeExcpLst(BEEXCPLST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeExcpLst(BEEXCPLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeExcpLst(BE_EXCP_LST_VAR BE_EXCP_LST_T) RETURN NUMBER;
FUNCTION updateBeExcpLst(BE_EXCP_LST_VAR BE_EXCP_LST_T) RETURN NUMBER;
FUNCTION deleteBeExcpLst(BE_EXCP_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeCompSvcLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeCompSvcLst(BECOMPSVCLST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeCompSvcLst(BECOMPSVCLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeCompSvcLst(BE_COMP_SVC_LST_VAR BE_COMP_SVC_LST_T) RETURN NUMBER;
FUNCTION updateBeCompSvcLst(BE_COMP_SVC_LST_VAR BE_COMP_SVC_LST_T) RETURN NUMBER;
FUNCTION deleteBeCompSvcLst(BE_COMP_SVC_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeLangLst(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeLangLst(BELANGLST_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeLangLst(BELANGLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeLangLst(BE_LANG_LST_VAR BE_LANG_LST_T) RETURN NUMBER;
FUNCTION updateBeLangLst(BE_LANG_LST_VAR BE_LANG_LST_T) RETURN NUMBER;
FUNCTION deleteBeLangLst(BE_LANG_LST_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeAdminStaffRoleLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeAdminStaffRoleLkup(BEADMINSTAFFROLELKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeAdminStaffRoleLkup(BEADMINSTAFFROLELKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeAdminStaffRoleLkup(BE_ADMIN_STAFF_ROLE_LKUP_VAR BE_ADMIN_STAFF_ROLE_LKUP_T) RETURN NUMBER;
FUNCTION updateBeAdminStaffRoleLkup(BE_ADMIN_STAFF_ROLE_LKUP_VAR BE_ADMIN_STAFF_ROLE_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeAdminStaffRoleLkup(BE_ADMIN_STAFF_ROLE_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeArNoteTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeArNoteTypLkup(BEARNOTETYPLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeArNoteTypLkup(BEARNOTETYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeArNoteTypLkup(BE_AR_NOTE_TYP_LKUP_VAR BE_AR_NOTE_TYP_LKUP_T) RETURN NUMBER;
FUNCTION updateBeArNoteTypLkup(BE_AR_NOTE_TYP_LKUP_VAR BE_AR_NOTE_TYP_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeArNoteTypLkup(BE_AR_NOTE_TYP_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeCalendarLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeCalendarLkup(BECALENDARLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeCalendarLkup(BECALENDARLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeCalendarLkup(BE_CALENDAR_LKUP_VAR BE_CALENDAR_LKUP_T) RETURN NUMBER;
FUNCTION updateBeCalendarLkup(BE_CALENDAR_LKUP_VAR BE_CALENDAR_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeCalendarLkup(BE_CALENDAR_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeCompAddlInfoTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeCompAddlInfoTypLkup(BECOMPADDLINFOTYPLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeCompAddlInfoTypLkup(BECOMPADDLINFOTYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeCompAddlInfoTypLkup(BE_COMP_ADDL_INFO_TYP_LKUP_VAR BE_COMP_ADDL_INFO_TYP_LKUP_T) RETURN NUMBER;
FUNCTION updateBeCompAddlInfoTypLkup(BE_COMP_ADDL_INFO_TYP_LKUP_VAR BE_COMP_ADDL_INFO_TYP_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeCompAddlInfoTypLkup(BE_COMP_ADDL_INFO_TYP_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeHolidayLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeHolidayLkup(BEHOLIDAYLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeHolidayLkup(BEHOLIDAYLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeHolidayLkup(BE_HOLIDAY_LKUP_VAR BE_HOLIDAY_LKUP_T) RETURN NUMBER;
FUNCTION updateBeHolidayLkup(BE_HOLIDAY_LKUP_VAR BE_HOLIDAY_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeHolidayLkup(BE_HOLIDAY_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeMedLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeMedLkup(BEMEDLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeMedLkup(BEMEDLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeMedLkup(BE_MED_LKUP_VAR BE_MED_LKUP_T) RETURN NUMBER;
FUNCTION updateBeMedLkup(BE_MED_LKUP_VAR BE_MED_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeMedLkup(BE_MED_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeMedRouteLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeMedRouteLkup(BEMEDROUTELKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeMedRouteLkup(BEMEDROUTELKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeMedRouteLkup(BE_MED_ROUTE_LKUP_VAR BE_MED_ROUTE_LKUP_T) RETURN NUMBER;
FUNCTION updateBeMedRouteLkup(BE_MED_ROUTE_LKUP_VAR BE_MED_ROUTE_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeMedRouteLkup(BE_MED_ROUTE_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeMedclExamItemLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeMedclExamItemLkup(BEMEDCLEXAMITEMLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeMedclExamItemLkup(BEMEDCLEXAMITEMLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeMedclExamItemLkup(BE_MEDCL_EXAM_ITEM_LKUP_VAR BE_MEDCL_EXAM_ITEM_LKUP_T) RETURN NUMBER;
FUNCTION updateBeMedclExamItemLkup(BE_MEDCL_EXAM_ITEM_LKUP_VAR BE_MEDCL_EXAM_ITEM_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeMedclExamItemLkup(BE_MEDCL_EXAM_ITEM_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBePrCodeLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBePrCodeLkup(BEPRCODELKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBePrCodeLkup(BEPRCODELKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBePrCodeLkup(BE_PR_CODE_LKUP_VAR BE_PR_CODE_LKUP_T) RETURN NUMBER;
FUNCTION updateBePrCodeLkup(BE_PR_CODE_LKUP_VAR BE_PR_CODE_LKUP_T) RETURN NUMBER;
FUNCTION deleteBePrCodeLkup(BE_PR_CODE_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeTaxLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeTaxLkup(BETAXLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeTaxLkup(BETAXLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeTaxLkup(BE_TAX_LKUP_VAR BE_TAX_LKUP_T) RETURN NUMBER;
FUNCTION updateBeTaxLkup(BE_TAX_LKUP_VAR BE_TAX_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeTaxLkup(BE_TAX_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeStaffWrkPrefLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeStaffWrkPrefLkup(BESTAFFWRKPREFLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeStaffWrkPrefLkup(BESTAFFWRKPREFLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeStaffWrkPrefLkup(BE_STAFF_WRK_PREF_LKUP_VAR BE_STAFF_WRK_PREF_LKUP_T) RETURN NUMBER;
FUNCTION updateBeStaffWrkPrefLkup(BE_STAFF_WRK_PREF_LKUP_VAR BE_STAFF_WRK_PREF_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeStaffWrkPrefLkup(BE_STAFF_WRK_PREF_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeStaffTrngLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeStaffTrngLkup(BESTAFFTRNGLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeStaffTrngLkup(BESTAFFTRNGLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeStaffTrngLkup(BE_STAFF_TRNG_LKUP_VAR BE_STAFF_TRNG_LKUP_T) RETURN NUMBER;
FUNCTION updateBeStaffTrngLkup(BE_STAFF_TRNG_LKUP_VAR BE_STAFF_TRNG_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeStaffTrngLkup(BE_STAFF_TRNG_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBePtNoteTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBePtNoteTypLkup(BEPTNOTETYPLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBePtNoteTypLkup(BEPTNOTETYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBePtNoteTypLkup(BE_PT_NOTE_TYP_LKUP_VAR BE_PT_NOTE_TYP_LKUP_T) RETURN NUMBER;
FUNCTION updateBePtNoteTypLkup(BE_PT_NOTE_TYP_LKUP_VAR BE_PT_NOTE_TYP_LKUP_T) RETURN NUMBER;
FUNCTION deleteBePtNoteTypLkup(BE_PT_NOTE_TYP_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBePayerTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBePayerTypLkup(BEPAYERTYPLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBePayerTypLkup(BEPAYERTYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBePayerTypLkup(BE_PAYER_TYP_LKUP_VAR BE_PAYER_TYP_LKUP_T) RETURN NUMBER;
FUNCTION updateBePayerTypLkup(BE_PAYER_TYP_LKUP_VAR BE_PAYER_TYP_LKUP_T) RETURN NUMBER;
FUNCTION deleteBePayerTypLkup(BE_PAYER_TYP_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeRateTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeRateTypLkup(BERATETYPLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeRateTypLkup(BERATETYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeRateTypLkup(BE_RATE_TYP_LKUP_VAR BE_RATE_TYP_LKUP_T) RETURN NUMBER;
FUNCTION updateBeRateTypLkup(BE_RATE_TYP_LKUP_VAR BE_RATE_TYP_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeRateTypLkup(BE_RATE_TYP_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeStaffNoteTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeStaffNoteTypLkup(BESTAFFNOTETYPLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeStaffNoteTypLkup(BESTAFFNOTETYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeStaffNoteTypLkup(BE_STAFF_NOTE_TYP_LKUP_VAR BE_STAFF_NOTE_TYP_LKUP_T) RETURN NUMBER;
FUNCTION updateBeStaffNoteTypLkup(BE_STAFF_NOTE_TYP_LKUP_VAR BE_STAFF_NOTE_TYP_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeStaffNoteTypLkup(BE_STAFF_NOTE_TYP_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeRefFmtLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeRefFmtLkup(BEREFFMTLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeRefFmtLkup(BEREFFMTLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeRefFmtLkup(BE_REF_FMT_LKUP_VAR BE_REF_FMT_LKUP_T) RETURN NUMBER;
FUNCTION updateBeRefFmtLkup(BE_REF_FMT_LKUP_VAR BE_REF_FMT_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeRefFmtLkup(BE_REF_FMT_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeDmeAndSupplyLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeDmeAndSupplyLkup(BEDMEANDSUPPLYLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeDmeAndSupplyLkup(BEDMEANDSUPPLYLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeDmeAndSupplyLkup(BE_DME_AND_SUPPLY_LKUP_VAR BE_DME_AND_SUPPLY_LKUP_T) RETURN NUMBER;
FUNCTION updateBeDmeAndSupplyLkup(BE_DME_AND_SUPPLY_LKUP_VAR BE_DME_AND_SUPPLY_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeDmeAndSupplyLkup(BE_DME_AND_SUPPLY_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBePtPrioLvlLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBePtPrioLvlLkup(BEPTPRIOLVLLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBePtPrioLvlLkup(BEPTPRIOLVLLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBePtPrioLvlLkup(BE_PT_PRIO_LVL_LKUP_VAR BE_PT_PRIO_LVL_LKUP_T) RETURN NUMBER;
FUNCTION updateBePtPrioLvlLkup(BE_PT_PRIO_LVL_LKUP_VAR BE_PT_PRIO_LVL_LKUP_T) RETURN NUMBER;
FUNCTION deleteBePtPrioLvlLkup(BE_PT_PRIO_LVL_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeRefLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeRefLkup(BEREFLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeRefLkup(BEREFLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeRefLkup(BE_REF_LKUP_VAR BE_REF_LKUP_T) RETURN NUMBER;
FUNCTION updateBeRefLkup(BE_REF_LKUP_VAR BE_REF_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeRefLkup(BE_REF_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeMedDosageFreqLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeMedDosageFreqLkup(BEMEDDOSAGEFREQLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeMedDosageFreqLkup(BEMEDDOSAGEFREQLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeMedDosageFreqLkup(BE_MED_DOSAGE_FREQ_LKUP_VAR BE_MED_DOSAGE_FREQ_LKUP_T) RETURN NUMBER;
FUNCTION updateBeMedDosageFreqLkup(BE_MED_DOSAGE_FREQ_LKUP_VAR BE_MED_DOSAGE_FREQ_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeMedDosageFreqLkup(BE_MED_DOSAGE_FREQ_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeMedDosageStrgLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeMedDosageStrgLkup(BEMEDDOSAGESTRGLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeMedDosageStrgLkup(BEMEDDOSAGESTRGLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeMedDosageStrgLkup(BE_MED_DOSAGE_STRG_LKUP_VAR BE_MED_DOSAGE_STRG_LKUP_T) RETURN NUMBER;
FUNCTION updateBeMedDosageStrgLkup(BE_MED_DOSAGE_STRG_LKUP_VAR BE_MED_DOSAGE_STRG_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeMedDosageStrgLkup(BE_MED_DOSAGE_STRG_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeNutrRqmtLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeNutrRqmtLkup(BENUTRRQMTLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeNutrRqmtLkup(BENUTRRQMTLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeNutrRqmtLkup(BE_NUTR_RQMT_LKUP_VAR BE_NUTR_RQMT_LKUP_T) RETURN NUMBER;
FUNCTION updateBeNutrRqmtLkup(BE_NUTR_RQMT_LKUP_VAR BE_NUTR_RQMT_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeNutrRqmtLkup(BE_NUTR_RQMT_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeStaffRfrlTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeStaffRfrlTypLkup(BESTAFFRFRLTYPLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeStaffRfrlTypLkup(BESTAFFRFRLTYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeStaffRfrlTypLkup(BE_STAFF_RFRL_TYP_LKUP_VAR BE_STAFF_RFRL_TYP_LKUP_T) RETURN NUMBER;
FUNCTION updateBeStaffRfrlTypLkup(BE_STAFF_RFRL_TYP_LKUP_VAR BE_STAFF_RFRL_TYP_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeStaffRfrlTypLkup(BE_STAFF_RFRL_TYP_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeStaffTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeStaffTypLkup(BESTAFFTYPLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeStaffTypLkup(BESTAFFTYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeStaffTypLkup(BE_STAFF_TYP_LKUP_VAR BE_STAFF_TYP_LKUP_T) RETURN NUMBER;
FUNCTION updateBeStaffTypLkup(BE_STAFF_TYP_LKUP_VAR BE_STAFF_TYP_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeStaffTypLkup(BE_STAFF_TYP_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeEmpltClsLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeEmpltClsLkup(BEEMPLTCLSLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeEmpltClsLkup(BEEMPLTCLSLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeEmpltClsLkup(BE_EMPLT_CLS_LKUP_VAR BE_EMPLT_CLS_LKUP_T) RETURN NUMBER;
FUNCTION updateBeEmpltClsLkup(BE_EMPLT_CLS_LKUP_VAR BE_EMPLT_CLS_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeEmpltClsLkup(BE_EMPLT_CLS_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBePtRqmtLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBePtRqmtLkup(BEPTRQMTLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBePtRqmtLkup(BEPTRQMTLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBePtRqmtLkup(BE_PT_RQMT_LKUP_VAR BE_PT_RQMT_LKUP_T) RETURN NUMBER;
FUNCTION updateBePtRqmtLkup(BE_PT_RQMT_LKUP_VAR BE_PT_RQMT_LKUP_T) RETURN NUMBER;
FUNCTION deleteBePtRqmtLkup(BE_PT_RQMT_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeMedClasLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeMedClasLkup(BEMEDCLASLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeMedClasLkup(BEMEDCLASLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeMedClasLkup(BE_MED_CLAS_LKUP_VAR BE_MED_CLAS_LKUP_T) RETURN NUMBER;
FUNCTION updateBeMedClasLkup(BE_MED_CLAS_LKUP_VAR BE_MED_CLAS_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeMedClasLkup(BE_MED_CLAS_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeDayOfWeekLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeDayOfWeekLkup(BEDAYOFWEEKLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeDayOfWeekLkup(BEDAYOFWEEKLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeDayOfWeekLkup(BE_DAY_OF_WEEK_LKUP_VAR BE_DAY_OF_WEEK_LKUP_T) RETURN NUMBER;
FUNCTION updateBeDayOfWeekLkup(BE_DAY_OF_WEEK_LKUP_VAR BE_DAY_OF_WEEK_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeDayOfWeekLkup(BE_DAY_OF_WEEK_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeChangeReasonLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeChangeReasonLkup(BECHANGEREASONLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeChangeReasonLkup(BECHANGEREASONLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeChangeReasonLkup(BE_CHANGE_REASON_LKUP_VAR BE_CHANGE_REASON_LKUP_T) RETURN NUMBER;
FUNCTION updateBeChangeReasonLkup(BE_CHANGE_REASON_LKUP_VAR BE_CHANGE_REASON_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeChangeReasonLkup(BE_CHANGE_REASON_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeVisitNoteTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeVisitNoteTypLkup(BEVISITNOTETYPLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeVisitNoteTypLkup(BEVISITNOTETYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeVisitNoteTypLkup(BE_VISIT_NOTE_TYP_LKUP_VAR BE_VISIT_NOTE_TYP_LKUP_T) RETURN NUMBER;
FUNCTION updateBeVisitNoteTypLkup(BE_VISIT_NOTE_TYP_LKUP_VAR BE_VISIT_NOTE_TYP_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeVisitNoteTypLkup(BE_VISIT_NOTE_TYP_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeSkillLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeSkillLkup(BESKILLLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeSkillLkup(BESKILLLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeSkillLkup(BE_SKILL_LKUP_VAR BE_SKILL_LKUP_T) RETURN NUMBER;
FUNCTION updateBeSkillLkup(BE_SKILL_LKUP_VAR BE_SKILL_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeSkillLkup(BE_SKILL_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeSftyMeasureLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeSftyMeasureLkup(BESFTYMEASURELKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeSftyMeasureLkup(BESFTYMEASURELKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeSftyMeasureLkup(BE_SFTY_MEASURE_LKUP_VAR BE_SFTY_MEASURE_LKUP_T) RETURN NUMBER;
FUNCTION updateBeSftyMeasureLkup(BE_SFTY_MEASURE_LKUP_VAR BE_SFTY_MEASURE_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeSftyMeasureLkup(BE_SFTY_MEASURE_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeEvacLvlLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeEvacLvlLkup(BEEVACLVLLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeEvacLvlLkup(BEEVACLVLLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeEvacLvlLkup(BE_EVAC_LVL_LKUP_VAR BE_EVAC_LVL_LKUP_T) RETURN NUMBER;
FUNCTION updateBeEvacLvlLkup(BE_EVAC_LVL_LKUP_VAR BE_EVAC_LVL_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeEvacLvlLkup(BE_EVAC_LVL_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeCompLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeCompLkup(BECOMPLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeCompLkup(BECOMPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeCompLkup(BE_COMP_LKUP_VAR BE_COMP_LKUP_T) RETURN NUMBER;
FUNCTION updateBeCompLkup(BE_COMP_LKUP_VAR BE_COMP_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeCompLkup(BE_COMP_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeAllergyLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeAllergyLkup(BEALLERGYLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeAllergyLkup(BEALLERGYLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeAllergyLkup(BE_ALLERGY_LKUP_VAR BE_ALLERGY_LKUP_T) RETURN NUMBER;
FUNCTION updateBeAllergyLkup(BE_ALLERGY_LKUP_VAR BE_ALLERGY_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeAllergyLkup(BE_ALLERGY_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeLobLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeLobLkup(BELOBLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeLobLkup(BELOBLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeLobLkup(BE_LOB_LKUP_VAR BE_LOB_LKUP_T) RETURN NUMBER;
FUNCTION updateBeLobLkup(BE_LOB_LKUP_VAR BE_LOB_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeLobLkup(BE_LOB_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeTypOfCareLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeTypOfCareLkup(BETYPOFCARELKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeTypOfCareLkup(BETYPOFCARELKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeTypOfCareLkup(BE_TYP_OF_CARE_LKUP_VAR BE_TYP_OF_CARE_LKUP_T) RETURN NUMBER;
FUNCTION updateBeTypOfCareLkup(BE_TYP_OF_CARE_LKUP_VAR BE_TYP_OF_CARE_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeTypOfCareLkup(BE_TYP_OF_CARE_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeHcpLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeHcpLkup(BEHCPLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeHcpLkup(BEHCPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeHcpLkup(BE_HCP_LKUP_VAR BE_HCP_LKUP_T) RETURN NUMBER;
FUNCTION updateBeHcpLkup(BE_HCP_LKUP_VAR BE_HCP_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeHcpLkup(BE_HCP_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeRfrlTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeRfrlTypLkup(BERFRLTYPLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeRfrlTypLkup(BERFRLTYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeRfrlTypLkup(BE_RFRL_TYP_LKUP_VAR BE_RFRL_TYP_LKUP_T) RETURN NUMBER;
FUNCTION updateBeRfrlTypLkup(BE_RFRL_TYP_LKUP_VAR BE_RFRL_TYP_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeRfrlTypLkup(BE_RFRL_TYP_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeCompCtgyLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeCompCtgyLkup(BECOMPCTGYLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeCompCtgyLkup(BECOMPCTGYLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeCompCtgyLkup(BE_COMP_CTGY_LKUP_VAR BE_COMP_CTGY_LKUP_T) RETURN NUMBER;
FUNCTION updateBeCompCtgyLkup(BE_COMP_CTGY_LKUP_VAR BE_COMP_CTGY_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeCompCtgyLkup(BE_COMP_CTGY_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeCompAddlInfoLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeCompAddlInfoLkup(BECOMPADDLINFOLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeCompAddlInfoLkup(BECOMPADDLINFOLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeCompAddlInfoLkup(BE_COMP_ADDL_INFO_LKUP_VAR BE_COMP_ADDL_INFO_LKUP_T) RETURN NUMBER;
FUNCTION updateBeCompAddlInfoLkup(BE_COMP_ADDL_INFO_LKUP_VAR BE_COMP_ADDL_INFO_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeCompAddlInfoLkup(BE_COMP_ADDL_INFO_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeStaffPrTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeStaffPrTypLkup(BESTAFFPRTYPLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeStaffPrTypLkup(BESTAFFPRTYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeStaffPrTypLkup(BE_STAFF_PR_TYP_LKUP_VAR BE_STAFF_PR_TYP_LKUP_T) RETURN NUMBER;
FUNCTION updateBeStaffPrTypLkup(BE_STAFF_PR_TYP_LKUP_VAR BE_STAFF_PR_TYP_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeStaffPrTypLkup(BE_STAFF_PR_TYP_LKUP_KEY NUMBER) RETURN NUMBER;
FUNCTION getBeStaffTrngCtgyLkup(BE_ID VARCHAR2) RETURN REF_CURSOR;
FUNCTION getBeStaffTrngCtgyLkup(BESTAFFTRNGCTGYLKUP_KEY NUMBER) RETURN REF_CURSOR;
FUNCTION getBeStaffTrngCtgyLkup(BESTAFFTRNGCTGYLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR;
FUNCTION insertBeStaffTrngCtgyLkup(BE_STAFF_TRNG_CTGY_LKUP_VAR BE_STAFF_TRNG_CTGY_LKUP_T) RETURN NUMBER;
FUNCTION updateBeStaffTrngCtgyLkup(BE_STAFF_TRNG_CTGY_LKUP_VAR BE_STAFF_TRNG_CTGY_LKUP_T) RETURN NUMBER;
FUNCTION deleteBeStaffTrngCtgyLkup(BE_STAFF_TRNG_CTGY_LKUP_KEY NUMBER) RETURN NUMBER;

END PKG_AM;
/

CREATE OR REPLACE PACKAGE BODY PKG_AM IS

FUNCTION getBeRaceEthnicityLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRaceEthnicityLst.getBeRaceEthnicityLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeRaceEthnicityLst(BERACEETHNICITYLST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRaceEthnicityLst.getBeRaceEthnicityLst(long) return java.sql.ResultSet';
FUNCTION getBeRaceEthnicityLst(BERACEETHNICITYLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRaceEthnicityLst.getBeRaceEthnicityLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeRaceEthnicityLst(BE_RACE_ETHNICITY_LST_VAR BE_RACE_ETHNICITY_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRaceEthnicityLst.insertBeRaceEthnicityLst(oracle.sql.STRUCT) return long';
FUNCTION updateBeRaceEthnicityLst(BE_RACE_ETHNICITY_LST_VAR BE_RACE_ETHNICITY_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRaceEthnicityLst.updateBeRaceEthnicityLst(oracle.sql.STRUCT) return long';
FUNCTION deleteBeRaceEthnicityLst(BE_RACE_ETHNICITY_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRaceEthnicityLst.deleteBeRaceEthnicityLst(long) return long';
FUNCTION getBeReligionLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeReligionLst.getBeReligionLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeReligionLst(BERELIGIONLST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeReligionLst.getBeReligionLst(long) return java.sql.ResultSet';
FUNCTION getBeReligionLst(BERELIGIONLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeReligionLst.getBeReligionLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeReligionLst(BE_RELIGION_LST_VAR BE_RELIGION_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeReligionLst.insertBeReligionLst(oracle.sql.STRUCT) return long';
FUNCTION updateBeReligionLst(BE_RELIGION_LST_VAR BE_RELIGION_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeReligionLst.updateBeReligionLst(oracle.sql.STRUCT) return long';
FUNCTION deleteBeReligionLst(BE_RELIGION_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeReligionLst.deleteBeReligionLst(long) return long';
FUNCTION getBeStaffTrngCtgyLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffTrngCtgyLst.getBeStaffTrngCtgyLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeStaffTrngCtgyLst(BESTAFFTRNGCTGYLST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffTrngCtgyLst.getBeStaffTrngCtgyLst(long) return java.sql.ResultSet';
FUNCTION getBeStaffTrngCtgyLst(BESTAFFTRNGCTGYLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffTrngCtgyLst.getBeStaffTrngCtgyLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeStaffTrngCtgyLst(BE_STAFF_TRNG_CTGY_LST_VAR BE_STAFF_TRNG_CTGY_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffTrngCtgyLst.insertBeStaffTrngCtgyLst(oracle.sql.STRUCT) return long';
FUNCTION updateBeStaffTrngCtgyLst(BE_STAFF_TRNG_CTGY_LST_VAR BE_STAFF_TRNG_CTGY_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffTrngCtgyLst.updateBeStaffTrngCtgyLst(oracle.sql.STRUCT) return long';
FUNCTION deleteBeStaffTrngCtgyLst(BE_STAFF_TRNG_CTGY_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffTrngCtgyLst.deleteBeStaffTrngCtgyLst(long) return long';
FUNCTION getPayerLobLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'PayerLobLst.getPayerLobLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getPayerLobLst(PAYERLOBLST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'PayerLobLst.getPayerLobLst(long) return java.sql.ResultSet';
FUNCTION getPayerLobLst(PAYERLOBLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'PayerLobLst.getPayerLobLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertPayerLobLst(PAYER_LOB_LST_VAR PAYER_LOB_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'PayerLobLst.insertPayerLobLst(oracle.sql.STRUCT) return long';
FUNCTION updatePayerLobLst(PAYER_LOB_LST_VAR PAYER_LOB_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'PayerLobLst.updatePayerLobLst(oracle.sql.STRUCT) return long';
FUNCTION deletePayerLobLst(PAYER_LOB_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'PayerLobLst.deletePayerLobLst(long) return long';
FUNCTION getPayerRateTypLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'PayerRateTypLst.getPayerRateTypLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getPayerRateTypLst(PAYERRATETYPLST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'PayerRateTypLst.getPayerRateTypLst(long) return java.sql.ResultSet';
FUNCTION getPayerRateTypLst(PAYERRATETYPLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'PayerRateTypLst.getPayerRateTypLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertPayerRateTypLst(PAYER_RATE_TYP_LST_VAR PAYER_RATE_TYP_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'PayerRateTypLst.insertPayerRateTypLst(oracle.sql.STRUCT) return long';
FUNCTION updatePayerRateTypLst(PAYER_RATE_TYP_LST_VAR PAYER_RATE_TYP_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'PayerRateTypLst.updatePayerRateTypLst(oracle.sql.STRUCT) return long';
FUNCTION deletePayerRateTypLst(PAYER_RATE_TYP_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'PayerRateTypLst.deletePayerRateTypLst(long) return long';
FUNCTION getPayerRevCodeLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'PayerRevCodeLst.getPayerRevCodeLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getPayerRevCodeLst(PAYERREVCODELST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'PayerRevCodeLst.getPayerRevCodeLst(long) return java.sql.ResultSet';
FUNCTION getPayerRevCodeLst(PAYERREVCODELST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'PayerRevCodeLst.getPayerRevCodeLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertPayerRevCodeLst(PAYER_REV_CODE_LST_VAR PAYER_REV_CODE_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'PayerRevCodeLst.insertPayerRevCodeLst(oracle.sql.STRUCT) return long';
FUNCTION updatePayerRevCodeLst(PAYER_REV_CODE_LST_VAR PAYER_REV_CODE_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'PayerRevCodeLst.updatePayerRevCodeLst(oracle.sql.STRUCT) return long';
FUNCTION deletePayerRevCodeLst(PAYER_REV_CODE_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'PayerRevCodeLst.deletePayerRevCodeLst(long) return long';
FUNCTION getPayerSvcLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'PayerSvcLst.getPayerSvcLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getPayerSvcLst(PAYERSVCLST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'PayerSvcLst.getPayerSvcLst(long) return java.sql.ResultSet';
FUNCTION getPayerSvcLst(PAYERSVCLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'PayerSvcLst.getPayerSvcLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertPayerSvcLst(PAYER_SVC_LST_VAR PAYER_SVC_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'PayerSvcLst.insertPayerSvcLst(oracle.sql.STRUCT) return long';
FUNCTION updatePayerSvcLst(PAYER_SVC_LST_VAR PAYER_SVC_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'PayerSvcLst.updatePayerSvcLst(oracle.sql.STRUCT) return long';
FUNCTION deletePayerSvcLst(PAYER_SVC_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'PayerSvcLst.deletePayerSvcLst(long) return long';
FUNCTION getContrBillingCodeLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrBillingCodeLst.getContrBillingCodeLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getContrBillingCodeLst(CONTRBILLINGCODELST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrBillingCodeLst.getContrBillingCodeLst(long) return java.sql.ResultSet';
FUNCTION getContrBillingCodeLst(CONTRBILLINGCODELST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrBillingCodeLst.getContrBillingCodeLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertContrBillingCodeLst(CONTR_BILLING_CODE_LST_VAR CONTR_BILLING_CODE_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrBillingCodeLst.insertContrBillingCodeLst(oracle.sql.STRUCT) return long';
FUNCTION updateContrBillingCodeLst(CONTR_BILLING_CODE_LST_VAR CONTR_BILLING_CODE_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrBillingCodeLst.updateContrBillingCodeLst(oracle.sql.STRUCT) return long';
FUNCTION deleteContrBillingCodeLst(CONTR_BILLING_CODE_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrBillingCodeLst.deleteContrBillingCodeLst(long) return long';
FUNCTION getContrMdfrLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrMdfrLst.getContrMdfrLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getContrMdfrLst(CONTRMDFRLST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrMdfrLst.getContrMdfrLst(long) return java.sql.ResultSet';
FUNCTION getContrMdfrLst(CONTRMDFRLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrMdfrLst.getContrMdfrLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertContrMdfrLst(CONTR_MDFR_LST_VAR CONTR_MDFR_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrMdfrLst.insertContrMdfrLst(oracle.sql.STRUCT) return long';
FUNCTION updateContrMdfrLst(CONTR_MDFR_LST_VAR CONTR_MDFR_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrMdfrLst.updateContrMdfrLst(oracle.sql.STRUCT) return long';
FUNCTION deleteContrMdfrLst(CONTR_MDFR_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrMdfrLst.deleteContrMdfrLst(long) return long';
FUNCTION getContrRateTypLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrRateTypLst.getContrRateTypLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getContrRateTypLst(CONTRRATETYPLST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrRateTypLst.getContrRateTypLst(long) return java.sql.ResultSet';
FUNCTION getContrRateTypLst(CONTRRATETYPLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrRateTypLst.getContrRateTypLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertContrRateTypLst(CONTR_RATE_TYP_LST_VAR CONTR_RATE_TYP_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrRateTypLst.insertContrRateTypLst(oracle.sql.STRUCT) return long';
FUNCTION updateContrRateTypLst(CONTR_RATE_TYP_LST_VAR CONTR_RATE_TYP_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrRateTypLst.updateContrRateTypLst(oracle.sql.STRUCT) return long';
FUNCTION deleteContrRateTypLst(CONTR_RATE_TYP_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrRateTypLst.deleteContrRateTypLst(long) return long';
FUNCTION getContrSvcLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrSvcLst.getContrSvcLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getContrSvcLst(CONTRSVCLST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrSvcLst.getContrSvcLst(long) return java.sql.ResultSet';
FUNCTION getContrSvcLst(CONTRSVCLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrSvcLst.getContrSvcLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertContrSvcLst(CONTR_SVC_LST_VAR CONTR_SVC_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrSvcLst.insertContrSvcLst(oracle.sql.STRUCT) return long';
FUNCTION updateContrSvcLst(CONTR_SVC_LST_VAR CONTR_SVC_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrSvcLst.updateContrSvcLst(oracle.sql.STRUCT) return long';
FUNCTION deleteContrSvcLst(CONTR_SVC_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrSvcLst.deleteContrSvcLst(long) return long';
FUNCTION getContrExcpLst RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrExcpLst.getContrExcpLst() return java.sql.ResultSet';
FUNCTION getContrExcpLst(CONTREXCPLST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrExcpLst.getContrExcpLst(long) return java.sql.ResultSet';
FUNCTION getContrExcpLst(CONTREXCPLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'ContrExcpLst.getContrExcpLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertContrExcpLst(CONTR_EXCP_LST_VAR CONTR_EXCP_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrExcpLst.insertContrExcpLst(oracle.sql.STRUCT) return long';
FUNCTION updateContrExcpLst(CONTR_EXCP_LST_VAR CONTR_EXCP_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrExcpLst.updateContrExcpLst(oracle.sql.STRUCT) return long';
FUNCTION deleteContrExcpLst(CONTR_EXCP_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'ContrExcpLst.deleteContrExcpLst(long) return long';
FUNCTION getBeExcpLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeExcpLst.getBeExcpLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeExcpLst(BEEXCPLST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeExcpLst.getBeExcpLst(long) return java.sql.ResultSet';
FUNCTION getBeExcpLst(BEEXCPLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeExcpLst.getBeExcpLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeExcpLst(BE_EXCP_LST_VAR BE_EXCP_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeExcpLst.insertBeExcpLst(oracle.sql.STRUCT) return long';
FUNCTION updateBeExcpLst(BE_EXCP_LST_VAR BE_EXCP_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeExcpLst.updateBeExcpLst(oracle.sql.STRUCT) return long';
FUNCTION deleteBeExcpLst(BE_EXCP_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeExcpLst.deleteBeExcpLst(long) return long';
FUNCTION getBeCompSvcLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompSvcLst.getBeCompSvcLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeCompSvcLst(BECOMPSVCLST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompSvcLst.getBeCompSvcLst(long) return java.sql.ResultSet';
FUNCTION getBeCompSvcLst(BECOMPSVCLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompSvcLst.getBeCompSvcLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeCompSvcLst(BE_COMP_SVC_LST_VAR BE_COMP_SVC_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompSvcLst.insertBeCompSvcLst(oracle.sql.STRUCT) return long';
FUNCTION updateBeCompSvcLst(BE_COMP_SVC_LST_VAR BE_COMP_SVC_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompSvcLst.updateBeCompSvcLst(oracle.sql.STRUCT) return long';
FUNCTION deleteBeCompSvcLst(BE_COMP_SVC_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompSvcLst.deleteBeCompSvcLst(long) return long';
FUNCTION getBeLangLst(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeLangLst.getBeLangLst(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeLangLst(BELANGLST_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeLangLst.getBeLangLst(long) return java.sql.ResultSet';
FUNCTION getBeLangLst(BELANGLST_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeLangLst.getBeLangLst(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeLangLst(BE_LANG_LST_VAR BE_LANG_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeLangLst.insertBeLangLst(oracle.sql.STRUCT) return long';
FUNCTION updateBeLangLst(BE_LANG_LST_VAR BE_LANG_LST_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeLangLst.updateBeLangLst(oracle.sql.STRUCT) return long';
FUNCTION deleteBeLangLst(BE_LANG_LST_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeLangLst.deleteBeLangLst(long) return long';
FUNCTION getBeAdminStaffRoleLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeAdminStaffRoleLkup.getBeAdminStaffRoleLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeAdminStaffRoleLkup(BEADMINSTAFFROLELKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeAdminStaffRoleLkup.getBeAdminStaffRoleLkup(long) return java.sql.ResultSet';
FUNCTION getBeAdminStaffRoleLkup(BEADMINSTAFFROLELKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeAdminStaffRoleLkup.getBeAdminStaffRoleLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeAdminStaffRoleLkup(BE_ADMIN_STAFF_ROLE_LKUP_VAR BE_ADMIN_STAFF_ROLE_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeAdminStaffRoleLkup.insertBeAdminStaffRoleLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeAdminStaffRoleLkup(BE_ADMIN_STAFF_ROLE_LKUP_VAR BE_ADMIN_STAFF_ROLE_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeAdminStaffRoleLkup.updateBeAdminStaffRoleLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeAdminStaffRoleLkup(BE_ADMIN_STAFF_ROLE_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeAdminStaffRoleLkup.deleteBeAdminStaffRoleLkup(long) return long';
FUNCTION getBeArNoteTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeArNoteTypLkup.getBeArNoteTypLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeArNoteTypLkup(BEARNOTETYPLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeArNoteTypLkup.getBeArNoteTypLkup(long) return java.sql.ResultSet';
FUNCTION getBeArNoteTypLkup(BEARNOTETYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeArNoteTypLkup.getBeArNoteTypLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeArNoteTypLkup(BE_AR_NOTE_TYP_LKUP_VAR BE_AR_NOTE_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeArNoteTypLkup.insertBeArNoteTypLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeArNoteTypLkup(BE_AR_NOTE_TYP_LKUP_VAR BE_AR_NOTE_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeArNoteTypLkup.updateBeArNoteTypLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeArNoteTypLkup(BE_AR_NOTE_TYP_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeArNoteTypLkup.deleteBeArNoteTypLkup(long) return long';
FUNCTION getBeCalendarLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCalendarLkup.getBeCalendarLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeCalendarLkup(BECALENDARLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCalendarLkup.getBeCalendarLkup(long) return java.sql.ResultSet';
FUNCTION getBeCalendarLkup(BECALENDARLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCalendarLkup.getBeCalendarLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeCalendarLkup(BE_CALENDAR_LKUP_VAR BE_CALENDAR_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCalendarLkup.insertBeCalendarLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeCalendarLkup(BE_CALENDAR_LKUP_VAR BE_CALENDAR_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCalendarLkup.updateBeCalendarLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeCalendarLkup(BE_CALENDAR_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCalendarLkup.deleteBeCalendarLkup(long) return long';
FUNCTION getBeCompAddlInfoTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompAddlInfoTypLkup.getBeCompAddlInfoTypLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeCompAddlInfoTypLkup(BECOMPADDLINFOTYPLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompAddlInfoTypLkup.getBeCompAddlInfoTypLkup(long) return java.sql.ResultSet';
FUNCTION getBeCompAddlInfoTypLkup(BECOMPADDLINFOTYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompAddlInfoTypLkup.getBeCompAddlInfoTypLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeCompAddlInfoTypLkup(BE_COMP_ADDL_INFO_TYP_LKUP_VAR BE_COMP_ADDL_INFO_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompAddlInfoTypLkup.insertBeCompAddlInfoTypLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeCompAddlInfoTypLkup(BE_COMP_ADDL_INFO_TYP_LKUP_VAR BE_COMP_ADDL_INFO_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompAddlInfoTypLkup.updateBeCompAddlInfoTypLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeCompAddlInfoTypLkup(BE_COMP_ADDL_INFO_TYP_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompAddlInfoTypLkup.deleteBeCompAddlInfoTypLkup(long) return long';
FUNCTION getBeHolidayLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeHolidayLkup.getBeHolidayLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeHolidayLkup(BEHOLIDAYLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeHolidayLkup.getBeHolidayLkup(long) return java.sql.ResultSet';
FUNCTION getBeHolidayLkup(BEHOLIDAYLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeHolidayLkup.getBeHolidayLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeHolidayLkup(BE_HOLIDAY_LKUP_VAR BE_HOLIDAY_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeHolidayLkup.insertBeHolidayLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeHolidayLkup(BE_HOLIDAY_LKUP_VAR BE_HOLIDAY_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeHolidayLkup.updateBeHolidayLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeHolidayLkup(BE_HOLIDAY_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeHolidayLkup.deleteBeHolidayLkup(long) return long';
FUNCTION getBeMedLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedLkup.getBeMedLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeMedLkup(BEMEDLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedLkup.getBeMedLkup(long) return java.sql.ResultSet';
FUNCTION getBeMedLkup(BEMEDLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedLkup.getBeMedLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeMedLkup(BE_MED_LKUP_VAR BE_MED_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedLkup.insertBeMedLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeMedLkup(BE_MED_LKUP_VAR BE_MED_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedLkup.updateBeMedLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeMedLkup(BE_MED_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedLkup.deleteBeMedLkup(long) return long';
FUNCTION getBeMedRouteLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedRouteLkup.getBeMedRouteLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeMedRouteLkup(BEMEDROUTELKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedRouteLkup.getBeMedRouteLkup(long) return java.sql.ResultSet';
FUNCTION getBeMedRouteLkup(BEMEDROUTELKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedRouteLkup.getBeMedRouteLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeMedRouteLkup(BE_MED_ROUTE_LKUP_VAR BE_MED_ROUTE_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedRouteLkup.insertBeMedRouteLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeMedRouteLkup(BE_MED_ROUTE_LKUP_VAR BE_MED_ROUTE_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedRouteLkup.updateBeMedRouteLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeMedRouteLkup(BE_MED_ROUTE_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedRouteLkup.deleteBeMedRouteLkup(long) return long';
FUNCTION getBeMedclExamItemLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedclExamItemLkup.getBeMedclExamItemLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeMedclExamItemLkup(BEMEDCLEXAMITEMLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedclExamItemLkup.getBeMedclExamItemLkup(long) return java.sql.ResultSet';
FUNCTION getBeMedclExamItemLkup(BEMEDCLEXAMITEMLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedclExamItemLkup.getBeMedclExamItemLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeMedclExamItemLkup(BE_MEDCL_EXAM_ITEM_LKUP_VAR BE_MEDCL_EXAM_ITEM_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedclExamItemLkup.insertBeMedclExamItemLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeMedclExamItemLkup(BE_MEDCL_EXAM_ITEM_LKUP_VAR BE_MEDCL_EXAM_ITEM_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedclExamItemLkup.updateBeMedclExamItemLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeMedclExamItemLkup(BE_MEDCL_EXAM_ITEM_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedclExamItemLkup.deleteBeMedclExamItemLkup(long) return long';
FUNCTION getBePrCodeLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePrCodeLkup.getBePrCodeLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBePrCodeLkup(BEPRCODELKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePrCodeLkup.getBePrCodeLkup(long) return java.sql.ResultSet';
FUNCTION getBePrCodeLkup(BEPRCODELKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePrCodeLkup.getBePrCodeLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBePrCodeLkup(BE_PR_CODE_LKUP_VAR BE_PR_CODE_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePrCodeLkup.insertBePrCodeLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBePrCodeLkup(BE_PR_CODE_LKUP_VAR BE_PR_CODE_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePrCodeLkup.updateBePrCodeLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBePrCodeLkup(BE_PR_CODE_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePrCodeLkup.deleteBePrCodeLkup(long) return long';
FUNCTION getBeTaxLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeTaxLkup.getBeTaxLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeTaxLkup(BETAXLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeTaxLkup.getBeTaxLkup(long) return java.sql.ResultSet';
FUNCTION getBeTaxLkup(BETAXLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeTaxLkup.getBeTaxLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeTaxLkup(BE_TAX_LKUP_VAR BE_TAX_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeTaxLkup.insertBeTaxLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeTaxLkup(BE_TAX_LKUP_VAR BE_TAX_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeTaxLkup.updateBeTaxLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeTaxLkup(BE_TAX_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeTaxLkup.deleteBeTaxLkup(long) return long';
FUNCTION getBeStaffWrkPrefLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffWrkPrefLkup.getBeStaffWrkPrefLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeStaffWrkPrefLkup(BESTAFFWRKPREFLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffWrkPrefLkup.getBeStaffWrkPrefLkup(long) return java.sql.ResultSet';
FUNCTION getBeStaffWrkPrefLkup(BESTAFFWRKPREFLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffWrkPrefLkup.getBeStaffWrkPrefLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeStaffWrkPrefLkup(BE_STAFF_WRK_PREF_LKUP_VAR BE_STAFF_WRK_PREF_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffWrkPrefLkup.insertBeStaffWrkPrefLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeStaffWrkPrefLkup(BE_STAFF_WRK_PREF_LKUP_VAR BE_STAFF_WRK_PREF_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffWrkPrefLkup.updateBeStaffWrkPrefLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeStaffWrkPrefLkup(BE_STAFF_WRK_PREF_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffWrkPrefLkup.deleteBeStaffWrkPrefLkup(long) return long';
FUNCTION getBeStaffTrngLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffTrngLkup.getBeStaffTrngLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeStaffTrngLkup(BESTAFFTRNGLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffTrngLkup.getBeStaffTrngLkup(long) return java.sql.ResultSet';
FUNCTION getBeStaffTrngLkup(BESTAFFTRNGLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffTrngLkup.getBeStaffTrngLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeStaffTrngLkup(BE_STAFF_TRNG_LKUP_VAR BE_STAFF_TRNG_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffTrngLkup.insertBeStaffTrngLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeStaffTrngLkup(BE_STAFF_TRNG_LKUP_VAR BE_STAFF_TRNG_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffTrngLkup.updateBeStaffTrngLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeStaffTrngLkup(BE_STAFF_TRNG_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffTrngLkup.deleteBeStaffTrngLkup(long) return long';
FUNCTION getBePtNoteTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePtNoteTypLkup.getBePtNoteTypLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBePtNoteTypLkup(BEPTNOTETYPLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePtNoteTypLkup.getBePtNoteTypLkup(long) return java.sql.ResultSet';
FUNCTION getBePtNoteTypLkup(BEPTNOTETYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePtNoteTypLkup.getBePtNoteTypLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBePtNoteTypLkup(BE_PT_NOTE_TYP_LKUP_VAR BE_PT_NOTE_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePtNoteTypLkup.insertBePtNoteTypLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBePtNoteTypLkup(BE_PT_NOTE_TYP_LKUP_VAR BE_PT_NOTE_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePtNoteTypLkup.updateBePtNoteTypLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBePtNoteTypLkup(BE_PT_NOTE_TYP_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePtNoteTypLkup.deleteBePtNoteTypLkup(long) return long';
FUNCTION getBePayerTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePayerTypLkup.getBePayerTypLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBePayerTypLkup(BEPAYERTYPLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePayerTypLkup.getBePayerTypLkup(long) return java.sql.ResultSet';
FUNCTION getBePayerTypLkup(BEPAYERTYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePayerTypLkup.getBePayerTypLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBePayerTypLkup(BE_PAYER_TYP_LKUP_VAR BE_PAYER_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePayerTypLkup.insertBePayerTypLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBePayerTypLkup(BE_PAYER_TYP_LKUP_VAR BE_PAYER_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePayerTypLkup.updateBePayerTypLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBePayerTypLkup(BE_PAYER_TYP_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePayerTypLkup.deleteBePayerTypLkup(long) return long';
FUNCTION getBeRateTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRateTypLkup.getBeRateTypLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeRateTypLkup(BERATETYPLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRateTypLkup.getBeRateTypLkup(long) return java.sql.ResultSet';
FUNCTION getBeRateTypLkup(BERATETYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRateTypLkup.getBeRateTypLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeRateTypLkup(BE_RATE_TYP_LKUP_VAR BE_RATE_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRateTypLkup.insertBeRateTypLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeRateTypLkup(BE_RATE_TYP_LKUP_VAR BE_RATE_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRateTypLkup.updateBeRateTypLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeRateTypLkup(BE_RATE_TYP_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRateTypLkup.deleteBeRateTypLkup(long) return long';
FUNCTION getBeStaffNoteTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffNoteTypLkup.getBeStaffNoteTypLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeStaffNoteTypLkup(BESTAFFNOTETYPLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffNoteTypLkup.getBeStaffNoteTypLkup(long) return java.sql.ResultSet';
FUNCTION getBeStaffNoteTypLkup(BESTAFFNOTETYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffNoteTypLkup.getBeStaffNoteTypLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeStaffNoteTypLkup(BE_STAFF_NOTE_TYP_LKUP_VAR BE_STAFF_NOTE_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffNoteTypLkup.insertBeStaffNoteTypLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeStaffNoteTypLkup(BE_STAFF_NOTE_TYP_LKUP_VAR BE_STAFF_NOTE_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffNoteTypLkup.updateBeStaffNoteTypLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeStaffNoteTypLkup(BE_STAFF_NOTE_TYP_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffNoteTypLkup.deleteBeStaffNoteTypLkup(long) return long';
FUNCTION getBeRefFmtLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRefFmtLkup.getBeRefFmtLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeRefFmtLkup(BEREFFMTLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRefFmtLkup.getBeRefFmtLkup(long) return java.sql.ResultSet';
FUNCTION getBeRefFmtLkup(BEREFFMTLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRefFmtLkup.getBeRefFmtLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeRefFmtLkup(BE_REF_FMT_LKUP_VAR BE_REF_FMT_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRefFmtLkup.insertBeRefFmtLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeRefFmtLkup(BE_REF_FMT_LKUP_VAR BE_REF_FMT_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRefFmtLkup.updateBeRefFmtLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeRefFmtLkup(BE_REF_FMT_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRefFmtLkup.deleteBeRefFmtLkup(long) return long';
FUNCTION getBeDmeAndSupplyLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeDmeAndSupplyLkup.getBeDmeAndSupplyLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeDmeAndSupplyLkup(BEDMEANDSUPPLYLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeDmeAndSupplyLkup.getBeDmeAndSupplyLkup(long) return java.sql.ResultSet';
FUNCTION getBeDmeAndSupplyLkup(BEDMEANDSUPPLYLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeDmeAndSupplyLkup.getBeDmeAndSupplyLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeDmeAndSupplyLkup(BE_DME_AND_SUPPLY_LKUP_VAR BE_DME_AND_SUPPLY_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeDmeAndSupplyLkup.insertBeDmeAndSupplyLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeDmeAndSupplyLkup(BE_DME_AND_SUPPLY_LKUP_VAR BE_DME_AND_SUPPLY_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeDmeAndSupplyLkup.updateBeDmeAndSupplyLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeDmeAndSupplyLkup(BE_DME_AND_SUPPLY_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeDmeAndSupplyLkup.deleteBeDmeAndSupplyLkup(long) return long';
FUNCTION getBePtPrioLvlLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePtPrioLvlLkup.getBePtPrioLvlLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBePtPrioLvlLkup(BEPTPRIOLVLLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePtPrioLvlLkup.getBePtPrioLvlLkup(long) return java.sql.ResultSet';
FUNCTION getBePtPrioLvlLkup(BEPTPRIOLVLLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePtPrioLvlLkup.getBePtPrioLvlLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBePtPrioLvlLkup(BE_PT_PRIO_LVL_LKUP_VAR BE_PT_PRIO_LVL_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePtPrioLvlLkup.insertBePtPrioLvlLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBePtPrioLvlLkup(BE_PT_PRIO_LVL_LKUP_VAR BE_PT_PRIO_LVL_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePtPrioLvlLkup.updateBePtPrioLvlLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBePtPrioLvlLkup(BE_PT_PRIO_LVL_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePtPrioLvlLkup.deleteBePtPrioLvlLkup(long) return long';
FUNCTION getBeRefLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRefLkup.getBeRefLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeRefLkup(BEREFLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRefLkup.getBeRefLkup(long) return java.sql.ResultSet';
FUNCTION getBeRefLkup(BEREFLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRefLkup.getBeRefLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeRefLkup(BE_REF_LKUP_VAR BE_REF_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRefLkup.insertBeRefLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeRefLkup(BE_REF_LKUP_VAR BE_REF_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRefLkup.updateBeRefLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeRefLkup(BE_REF_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRefLkup.deleteBeRefLkup(long) return long';
FUNCTION getBeMedDosageFreqLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedDosageFreqLkup.getBeMedDosageFreqLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeMedDosageFreqLkup(BEMEDDOSAGEFREQLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedDosageFreqLkup.getBeMedDosageFreqLkup(long) return java.sql.ResultSet';
FUNCTION getBeMedDosageFreqLkup(BEMEDDOSAGEFREQLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedDosageFreqLkup.getBeMedDosageFreqLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeMedDosageFreqLkup(BE_MED_DOSAGE_FREQ_LKUP_VAR BE_MED_DOSAGE_FREQ_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedDosageFreqLkup.insertBeMedDosageFreqLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeMedDosageFreqLkup(BE_MED_DOSAGE_FREQ_LKUP_VAR BE_MED_DOSAGE_FREQ_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedDosageFreqLkup.updateBeMedDosageFreqLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeMedDosageFreqLkup(BE_MED_DOSAGE_FREQ_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedDosageFreqLkup.deleteBeMedDosageFreqLkup(long) return long';
FUNCTION getBeMedDosageStrgLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedDosageStrgLkup.getBeMedDosageStrgLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeMedDosageStrgLkup(BEMEDDOSAGESTRGLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedDosageStrgLkup.getBeMedDosageStrgLkup(long) return java.sql.ResultSet';
FUNCTION getBeMedDosageStrgLkup(BEMEDDOSAGESTRGLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedDosageStrgLkup.getBeMedDosageStrgLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeMedDosageStrgLkup(BE_MED_DOSAGE_STRG_LKUP_VAR BE_MED_DOSAGE_STRG_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedDosageStrgLkup.insertBeMedDosageStrgLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeMedDosageStrgLkup(BE_MED_DOSAGE_STRG_LKUP_VAR BE_MED_DOSAGE_STRG_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedDosageStrgLkup.updateBeMedDosageStrgLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeMedDosageStrgLkup(BE_MED_DOSAGE_STRG_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedDosageStrgLkup.deleteBeMedDosageStrgLkup(long) return long';
FUNCTION getBeNutrRqmtLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeNutrRqmtLkup.getBeNutrRqmtLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeNutrRqmtLkup(BENUTRRQMTLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeNutrRqmtLkup.getBeNutrRqmtLkup(long) return java.sql.ResultSet';
FUNCTION getBeNutrRqmtLkup(BENUTRRQMTLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeNutrRqmtLkup.getBeNutrRqmtLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeNutrRqmtLkup(BE_NUTR_RQMT_LKUP_VAR BE_NUTR_RQMT_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeNutrRqmtLkup.insertBeNutrRqmtLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeNutrRqmtLkup(BE_NUTR_RQMT_LKUP_VAR BE_NUTR_RQMT_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeNutrRqmtLkup.updateBeNutrRqmtLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeNutrRqmtLkup(BE_NUTR_RQMT_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeNutrRqmtLkup.deleteBeNutrRqmtLkup(long) return long';
FUNCTION getBeStaffRfrlTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffRfrlTypLkup.getBeStaffRfrlTypLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeStaffRfrlTypLkup(BESTAFFRFRLTYPLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffRfrlTypLkup.getBeStaffRfrlTypLkup(long) return java.sql.ResultSet';
FUNCTION getBeStaffRfrlTypLkup(BESTAFFRFRLTYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffRfrlTypLkup.getBeStaffRfrlTypLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeStaffRfrlTypLkup(BE_STAFF_RFRL_TYP_LKUP_VAR BE_STAFF_RFRL_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffRfrlTypLkup.insertBeStaffRfrlTypLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeStaffRfrlTypLkup(BE_STAFF_RFRL_TYP_LKUP_VAR BE_STAFF_RFRL_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffRfrlTypLkup.updateBeStaffRfrlTypLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeStaffRfrlTypLkup(BE_STAFF_RFRL_TYP_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffRfrlTypLkup.deleteBeStaffRfrlTypLkup(long) return long';
FUNCTION getBeStaffTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffTypLkup.getBeStaffTypLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeStaffTypLkup(BESTAFFTYPLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffTypLkup.getBeStaffTypLkup(long) return java.sql.ResultSet';
FUNCTION getBeStaffTypLkup(BESTAFFTYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffTypLkup.getBeStaffTypLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeStaffTypLkup(BE_STAFF_TYP_LKUP_VAR BE_STAFF_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffTypLkup.insertBeStaffTypLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeStaffTypLkup(BE_STAFF_TYP_LKUP_VAR BE_STAFF_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffTypLkup.updateBeStaffTypLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeStaffTypLkup(BE_STAFF_TYP_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffTypLkup.deleteBeStaffTypLkup(long) return long';
FUNCTION getBeEmpltClsLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeEmpltClsLkup.getBeEmpltClsLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeEmpltClsLkup(BEEMPLTCLSLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeEmpltClsLkup.getBeEmpltClsLkup(long) return java.sql.ResultSet';
FUNCTION getBeEmpltClsLkup(BEEMPLTCLSLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeEmpltClsLkup.getBeEmpltClsLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeEmpltClsLkup(BE_EMPLT_CLS_LKUP_VAR BE_EMPLT_CLS_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeEmpltClsLkup.insertBeEmpltClsLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeEmpltClsLkup(BE_EMPLT_CLS_LKUP_VAR BE_EMPLT_CLS_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeEmpltClsLkup.updateBeEmpltClsLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeEmpltClsLkup(BE_EMPLT_CLS_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeEmpltClsLkup.deleteBeEmpltClsLkup(long) return long';
FUNCTION getBePtRqmtLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePtRqmtLkup.getBePtRqmtLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBePtRqmtLkup(BEPTRQMTLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePtRqmtLkup.getBePtRqmtLkup(long) return java.sql.ResultSet';
FUNCTION getBePtRqmtLkup(BEPTRQMTLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BePtRqmtLkup.getBePtRqmtLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBePtRqmtLkup(BE_PT_RQMT_LKUP_VAR BE_PT_RQMT_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePtRqmtLkup.insertBePtRqmtLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBePtRqmtLkup(BE_PT_RQMT_LKUP_VAR BE_PT_RQMT_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePtRqmtLkup.updateBePtRqmtLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBePtRqmtLkup(BE_PT_RQMT_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BePtRqmtLkup.deleteBePtRqmtLkup(long) return long';
FUNCTION getBeMedClasLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedClasLkup.getBeMedClasLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeMedClasLkup(BEMEDCLASLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedClasLkup.getBeMedClasLkup(long) return java.sql.ResultSet';
FUNCTION getBeMedClasLkup(BEMEDCLASLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeMedClasLkup.getBeMedClasLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeMedClasLkup(BE_MED_CLAS_LKUP_VAR BE_MED_CLAS_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedClasLkup.insertBeMedClasLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeMedClasLkup(BE_MED_CLAS_LKUP_VAR BE_MED_CLAS_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedClasLkup.updateBeMedClasLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeMedClasLkup(BE_MED_CLAS_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeMedClasLkup.deleteBeMedClasLkup(long) return long';
FUNCTION getBeDayOfWeekLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeDayOfWeekLkup.getBeDayOfWeekLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeDayOfWeekLkup(BEDAYOFWEEKLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeDayOfWeekLkup.getBeDayOfWeekLkup(long) return java.sql.ResultSet';
FUNCTION getBeDayOfWeekLkup(BEDAYOFWEEKLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeDayOfWeekLkup.getBeDayOfWeekLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeDayOfWeekLkup(BE_DAY_OF_WEEK_LKUP_VAR BE_DAY_OF_WEEK_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeDayOfWeekLkup.insertBeDayOfWeekLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeDayOfWeekLkup(BE_DAY_OF_WEEK_LKUP_VAR BE_DAY_OF_WEEK_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeDayOfWeekLkup.updateBeDayOfWeekLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeDayOfWeekLkup(BE_DAY_OF_WEEK_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeDayOfWeekLkup.deleteBeDayOfWeekLkup(long) return long';
FUNCTION getBeChangeReasonLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeChangeReasonLkup.getBeChangeReasonLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeChangeReasonLkup(BECHANGEREASONLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeChangeReasonLkup.getBeChangeReasonLkup(long) return java.sql.ResultSet';
FUNCTION getBeChangeReasonLkup(BECHANGEREASONLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeChangeReasonLkup.getBeChangeReasonLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeChangeReasonLkup(BE_CHANGE_REASON_LKUP_VAR BE_CHANGE_REASON_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeChangeReasonLkup.insertBeChangeReasonLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeChangeReasonLkup(BE_CHANGE_REASON_LKUP_VAR BE_CHANGE_REASON_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeChangeReasonLkup.updateBeChangeReasonLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeChangeReasonLkup(BE_CHANGE_REASON_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeChangeReasonLkup.deleteBeChangeReasonLkup(long) return long';
FUNCTION getBeVisitNoteTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeVisitNoteTypLkup.getBeVisitNoteTypLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeVisitNoteTypLkup(BEVISITNOTETYPLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeVisitNoteTypLkup.getBeVisitNoteTypLkup(long) return java.sql.ResultSet';
FUNCTION getBeVisitNoteTypLkup(BEVISITNOTETYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeVisitNoteTypLkup.getBeVisitNoteTypLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeVisitNoteTypLkup(BE_VISIT_NOTE_TYP_LKUP_VAR BE_VISIT_NOTE_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeVisitNoteTypLkup.insertBeVisitNoteTypLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeVisitNoteTypLkup(BE_VISIT_NOTE_TYP_LKUP_VAR BE_VISIT_NOTE_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeVisitNoteTypLkup.updateBeVisitNoteTypLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeVisitNoteTypLkup(BE_VISIT_NOTE_TYP_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeVisitNoteTypLkup.deleteBeVisitNoteTypLkup(long) return long';
FUNCTION getBeSkillLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeSkillLkup.getBeSkillLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeSkillLkup(BESKILLLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeSkillLkup.getBeSkillLkup(long) return java.sql.ResultSet';
FUNCTION getBeSkillLkup(BESKILLLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeSkillLkup.getBeSkillLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeSkillLkup(BE_SKILL_LKUP_VAR BE_SKILL_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeSkillLkup.insertBeSkillLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeSkillLkup(BE_SKILL_LKUP_VAR BE_SKILL_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeSkillLkup.updateBeSkillLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeSkillLkup(BE_SKILL_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeSkillLkup.deleteBeSkillLkup(long) return long';
FUNCTION getBeSftyMeasureLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeSftyMeasureLkup.getBeSftyMeasureLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeSftyMeasureLkup(BESFTYMEASURELKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeSftyMeasureLkup.getBeSftyMeasureLkup(long) return java.sql.ResultSet';
FUNCTION getBeSftyMeasureLkup(BESFTYMEASURELKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeSftyMeasureLkup.getBeSftyMeasureLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeSftyMeasureLkup(BE_SFTY_MEASURE_LKUP_VAR BE_SFTY_MEASURE_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeSftyMeasureLkup.insertBeSftyMeasureLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeSftyMeasureLkup(BE_SFTY_MEASURE_LKUP_VAR BE_SFTY_MEASURE_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeSftyMeasureLkup.updateBeSftyMeasureLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeSftyMeasureLkup(BE_SFTY_MEASURE_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeSftyMeasureLkup.deleteBeSftyMeasureLkup(long) return long';
FUNCTION getBeEvacLvlLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeEvacLvlLkup.getBeEvacLvlLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeEvacLvlLkup(BEEVACLVLLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeEvacLvlLkup.getBeEvacLvlLkup(long) return java.sql.ResultSet';
FUNCTION getBeEvacLvlLkup(BEEVACLVLLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeEvacLvlLkup.getBeEvacLvlLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeEvacLvlLkup(BE_EVAC_LVL_LKUP_VAR BE_EVAC_LVL_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeEvacLvlLkup.insertBeEvacLvlLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeEvacLvlLkup(BE_EVAC_LVL_LKUP_VAR BE_EVAC_LVL_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeEvacLvlLkup.updateBeEvacLvlLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeEvacLvlLkup(BE_EVAC_LVL_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeEvacLvlLkup.deleteBeEvacLvlLkup(long) return long';
FUNCTION getBeCompLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompLkup.getBeCompLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeCompLkup(BECOMPLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompLkup.getBeCompLkup(long) return java.sql.ResultSet';
FUNCTION getBeCompLkup(BECOMPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompLkup.getBeCompLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeCompLkup(BE_COMP_LKUP_VAR BE_COMP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompLkup.insertBeCompLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeCompLkup(BE_COMP_LKUP_VAR BE_COMP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompLkup.updateBeCompLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeCompLkup(BE_COMP_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompLkup.deleteBeCompLkup(long) return long';
FUNCTION getBeAllergyLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeAllergyLkup.getBeAllergyLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeAllergyLkup(BEALLERGYLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeAllergyLkup.getBeAllergyLkup(long) return java.sql.ResultSet';
FUNCTION getBeAllergyLkup(BEALLERGYLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeAllergyLkup.getBeAllergyLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeAllergyLkup(BE_ALLERGY_LKUP_VAR BE_ALLERGY_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeAllergyLkup.insertBeAllergyLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeAllergyLkup(BE_ALLERGY_LKUP_VAR BE_ALLERGY_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeAllergyLkup.updateBeAllergyLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeAllergyLkup(BE_ALLERGY_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeAllergyLkup.deleteBeAllergyLkup(long) return long';
FUNCTION getBeLobLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeLobLkup.getBeLobLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeLobLkup(BELOBLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeLobLkup.getBeLobLkup(long) return java.sql.ResultSet';
FUNCTION getBeLobLkup(BELOBLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeLobLkup.getBeLobLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeLobLkup(BE_LOB_LKUP_VAR BE_LOB_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeLobLkup.insertBeLobLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeLobLkup(BE_LOB_LKUP_VAR BE_LOB_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeLobLkup.updateBeLobLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeLobLkup(BE_LOB_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeLobLkup.deleteBeLobLkup(long) return long';
FUNCTION getBeTypOfCareLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeTypOfCareLkup.getBeTypOfCareLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeTypOfCareLkup(BETYPOFCARELKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeTypOfCareLkup.getBeTypOfCareLkup(long) return java.sql.ResultSet';
FUNCTION getBeTypOfCareLkup(BETYPOFCARELKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeTypOfCareLkup.getBeTypOfCareLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeTypOfCareLkup(BE_TYP_OF_CARE_LKUP_VAR BE_TYP_OF_CARE_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeTypOfCareLkup.insertBeTypOfCareLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeTypOfCareLkup(BE_TYP_OF_CARE_LKUP_VAR BE_TYP_OF_CARE_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeTypOfCareLkup.updateBeTypOfCareLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeTypOfCareLkup(BE_TYP_OF_CARE_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeTypOfCareLkup.deleteBeTypOfCareLkup(long) return long';
FUNCTION getBeHcpLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeHcpLkup.getBeHcpLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeHcpLkup(BEHCPLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeHcpLkup.getBeHcpLkup(long) return java.sql.ResultSet';
FUNCTION getBeHcpLkup(BEHCPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeHcpLkup.getBeHcpLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeHcpLkup(BE_HCP_LKUP_VAR BE_HCP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeHcpLkup.insertBeHcpLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeHcpLkup(BE_HCP_LKUP_VAR BE_HCP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeHcpLkup.updateBeHcpLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeHcpLkup(BE_HCP_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeHcpLkup.deleteBeHcpLkup(long) return long';
FUNCTION getBeRfrlTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRfrlTypLkup.getBeRfrlTypLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeRfrlTypLkup(BERFRLTYPLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRfrlTypLkup.getBeRfrlTypLkup(long) return java.sql.ResultSet';
FUNCTION getBeRfrlTypLkup(BERFRLTYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeRfrlTypLkup.getBeRfrlTypLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeRfrlTypLkup(BE_RFRL_TYP_LKUP_VAR BE_RFRL_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRfrlTypLkup.insertBeRfrlTypLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeRfrlTypLkup(BE_RFRL_TYP_LKUP_VAR BE_RFRL_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRfrlTypLkup.updateBeRfrlTypLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeRfrlTypLkup(BE_RFRL_TYP_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeRfrlTypLkup.deleteBeRfrlTypLkup(long) return long';
FUNCTION getBeCompCtgyLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompCtgyLkup.getBeCompCtgyLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeCompCtgyLkup(BECOMPCTGYLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompCtgyLkup.getBeCompCtgyLkup(long) return java.sql.ResultSet';
FUNCTION getBeCompCtgyLkup(BECOMPCTGYLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompCtgyLkup.getBeCompCtgyLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeCompCtgyLkup(BE_COMP_CTGY_LKUP_VAR BE_COMP_CTGY_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompCtgyLkup.insertBeCompCtgyLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeCompCtgyLkup(BE_COMP_CTGY_LKUP_VAR BE_COMP_CTGY_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompCtgyLkup.updateBeCompCtgyLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeCompCtgyLkup(BE_COMP_CTGY_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompCtgyLkup.deleteBeCompCtgyLkup(long) return long';
FUNCTION getBeCompAddlInfoLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompAddlInfoLkup.getBeCompAddlInfoLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeCompAddlInfoLkup(BECOMPADDLINFOLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompAddlInfoLkup.getBeCompAddlInfoLkup(long) return java.sql.ResultSet';
FUNCTION getBeCompAddlInfoLkup(BECOMPADDLINFOLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeCompAddlInfoLkup.getBeCompAddlInfoLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeCompAddlInfoLkup(BE_COMP_ADDL_INFO_LKUP_VAR BE_COMP_ADDL_INFO_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompAddlInfoLkup.insertBeCompAddlInfoLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeCompAddlInfoLkup(BE_COMP_ADDL_INFO_LKUP_VAR BE_COMP_ADDL_INFO_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompAddlInfoLkup.updateBeCompAddlInfoLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeCompAddlInfoLkup(BE_COMP_ADDL_INFO_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeCompAddlInfoLkup.deleteBeCompAddlInfoLkup(long) return long';
FUNCTION getBeStaffPrTypLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffPrTypLkup.getBeStaffPrTypLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeStaffPrTypLkup(BESTAFFPRTYPLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffPrTypLkup.getBeStaffPrTypLkup(long) return java.sql.ResultSet';
FUNCTION getBeStaffPrTypLkup(BESTAFFPRTYPLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffPrTypLkup.getBeStaffPrTypLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeStaffPrTypLkup(BE_STAFF_PR_TYP_LKUP_VAR BE_STAFF_PR_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffPrTypLkup.insertBeStaffPrTypLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeStaffPrTypLkup(BE_STAFF_PR_TYP_LKUP_VAR BE_STAFF_PR_TYP_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffPrTypLkup.updateBeStaffPrTypLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeStaffPrTypLkup(BE_STAFF_PR_TYP_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffPrTypLkup.deleteBeStaffPrTypLkup(long) return long';
FUNCTION getBeStaffTrngCtgyLkup(BE_ID VARCHAR2) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffTrngCtgyLkup.getBeStaffTrngCtgyLkup(java.lang.String) return java.sql.ResultSet';
FUNCTION getBeStaffTrngCtgyLkup(BESTAFFTRNGCTGYLKUP_KEY NUMBER) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffTrngCtgyLkup.getBeStaffTrngCtgyLkup(long) return java.sql.ResultSet';
FUNCTION getBeStaffTrngCtgyLkup(BESTAFFTRNGCTGYLKUP_ARRAY STRING_ARRAY) RETURN REF_CURSOR
AS LANGUAGE JAVA NAME 'BeStaffTrngCtgyLkup.getBeStaffTrngCtgyLkup(oracle.sql.ARRAY) return java.sql.ResultSet';
FUNCTION insertBeStaffTrngCtgyLkup(BE_STAFF_TRNG_CTGY_LKUP_VAR BE_STAFF_TRNG_CTGY_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffTrngCtgyLkup.insertBeStaffTrngCtgyLkup(oracle.sql.STRUCT) return long';
FUNCTION updateBeStaffTrngCtgyLkup(BE_STAFF_TRNG_CTGY_LKUP_VAR BE_STAFF_TRNG_CTGY_LKUP_T) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffTrngCtgyLkup.updateBeStaffTrngCtgyLkup(oracle.sql.STRUCT) return long';
FUNCTION deleteBeStaffTrngCtgyLkup(BE_STAFF_TRNG_CTGY_LKUP_KEY NUMBER) RETURN NUMBER
AS LANGUAGE JAVA NAME 'BeStaffTrngCtgyLkup.deleteBeStaffTrngCtgyLkup(long) return long';

END PKG_AM;
/

