CREATE OR REPLACE AND COMPILE JAVA SOURCE NAMED "Claim" AS 
import com.sandata.lab.db.oracle.common.handler.OracleQueryHandler;
import oracle.sql.STRUCT;
import oracle.sql.ARRAY;
import java.sql.ResultSet;
import java.sql.SQLException;


public class Claim {

	private static String TABLE_NAME = "CLAIM";

	private static String SEQUENCE_KEY_COLUMN_NAME = "CLAIM_SK";

	private static int PRIMARY_KEY_INDEX = 1;

	private static int REC_TERM_TMSTP_INDEX = 6;

	private static int CURR_REC_IND_INDEX = 10;

	private static int TABLE_ID_COLUMN_INDEX = 2;

	private static int CHANGE_VERSION_ID_INDEX = 11;

	private static String INSERT_STATEMENT = "INSERT INTO CLAIM(CLAIM_SK,CLAIM_ID,REC_CREATE_TMSTP,REC_UPDATE_TMSTP,REC_EFF_TMSTP,REC_TERM_TMSTP,REC_CREATED_BY,REC_UPDATED_BY,CHANGE_REASON_MEMO,CURR_REC_IND,CHANGE_VERSION_ID,BE_ID,PT_ID,PAYER_ID,OTHER_PAYER_ID,RFRL_SK,AUTH_SK,OTHER_PAYER_AUTH_SK,ICD_DX_CODE_REVISION_QLFR,ICD_DX_CODE_PRMY,ICD_DX_CODE_2,ICD_DX_CODE_3,ICD_DX_CODE_4,ICD_DX_CODE_5,ICD_DX_CODE_6,ICD_DX_CODE_7,ICD_DX_CODE_8,ICD_DX_CODE_9,ICD_DX_CODE_10,ICD_DX_CODE_11,ICD_DX_CODE_12,CLAIM_PAYER,CLAIM_TYP,INV_SUBM_TYP_CODE,CLAIM_SUBM_DATE,CLAIM_REC,INV_FMT_TYP_NAME,SANDATA_CLAIM_STATUS,SUBS_LAST_NAME,SUBS_FIRST_NAME,SUBS_MIDDLE_NAME,SUBS_NAME_SUFFIX,SUBS_ADDR1,SUBS_ADDR2,SUBS_CITY_NAME,SUBS_STATE_CODE,SUBS_PSTL_CODE,SUBS_DOB,SUBS_GENDER_TYP_NAME,SUBS_PRMY_ID,INSURED_GRP_NUM,INSURED_GRP_NAME,INDIV_REL_CODE,INS_TYP_CODE,INSURED_INDIV_DOD,SUBS_SUPPL_ID,CLAIM_FILING_IND_CODE,PROPTY_CAS_CLAIM_NUM,PT_PRMY_ID,PT_SCNDRY_ID,PREGNANCY_IND,PT_ACCOUNT_NUM,RELEASE_OF_INFO_CODE,PT_SIG_SRC_CODE,RELATED_CAUSES_CODE,AUTO_ACCIDENT_STATE_CODE,AUTO_ACCIDENT_COUNTRY_CODE,INITIAL_TREAT_DATE,PT_LAST_SEEN_DATE,CURR_COND_ONSET_DATE,ACUTE_MANIFESTATION_DATE,SIMILIAR_COND_ONSET_DATE,ACCIDENT_DATE,LAST_MENSTRUAL_PRD_DATE,LAST_XRAY_DATE,RX_DATE,DIS_FROM_DATE,DIS_TO_DATE,LAST_WORKED_DATE,WORK_RETURN_DATE,RELATED_HOSP_DISCHARGE_DATE,RELATED_HOSP_ADM_DATE,RELINQUSHED_CARE_DATE,CLIA_NUM,REPR_CRN,ADJ_REPR_CRN,IDE_ID,CH_TRACE_NUM,TXN_SET_CREATION_DATE,SPECIAL_PROGRAM_CODE,PART_AGRMT_CODE,ATT_RPRT_TYP_CODE,DELAY_REASON_CODE,ATT_TRNSMSN_CODE,SVC_AUTH_EXCP_CODE,MEDICARE_SECTION_4081_IND,MMG_CERT_NUM,APG_NUM,MRN,DEMO_PROJECT_ID,NUM_OF_HOME_HLTH_VISITS,HOME_HLTH_VISIT_FREQ_COUNT,DUR_OF_HOME_HLTH_VISITS_COUNT,CLAIM_FREQ_TYP_CODE,REPR_ALWD_AMT,REPR_SAVING_AMT,REPRICING_ORG_ID,REPRICING_PER_DIEM_AMT,REPR_APRVD_APG_CODE,REPR_APRVD_APG_AMT,REJECT_REASON_CODE,POLICY_COMP_CODE,EXCP_CODE,TOTAL_CLAIM_CHARGE_AMT,CONTR_AMT,CONTR_PERCENTAGE,CONTR_CODE,TERMS_DISCOUNT_PERCENTAGE,CONTR_VERSION_ID,CREDIT_CARD_MAXIMUM_AMT,PT_PAID_AMT,TOTAL_PURCH_SVC_AMT,PAYER_PAID_AMT,APRVD_AMT,ALWD_AMT,CCY_CODE,AMBL_TRANSPORT_CODE,AMBL_TRANSPORT_REASON_CODE,TRANSPORT_DISTANCE,ROUND_TRIP_PURPOSE_DESC,STRETCHER_PURPOSE_DESC,PT_COND_CODE,PT_COND_DESC,XRAY_AVAIL_IND,AMBL_CERT_COND_CODE_1,AMBL_CERT_COND_CODE_2,AMBL_CERT_COND_CODE_3,AMBL_CERT_COND_CODE_4,AMBL_CERT_COND_CODE_5,PT_VISION_COND_CODE_1,PT_VISION_COND_CODE_2,PT_VISION_COND_CODE_3,EPSDT_RFRL_COND_CODE_1,EPSDT_RFRL_COND_CODE_2,EPSDT_RFRL_COND_CODE_3,CERT_PRD_PROJ_VISIT_COUNT,TOTAL_VISITS_RENDERED_COUNT,PAY_TO_HCP_NPI,BILLING_HCP_NPI,ATTENDING_HCP_NPI,REFING_HCP_NPI,RENDER_HCP_NPI,ADJMT_REASON_CODE_1,ADJMT_TYP_CODE_1,ADJMT_AMT_1,ADJMT_QTY_1,ADJMT_REASON_CODE_2,ADJMT_TYP_CODE_2,ADJMT_AMT_2,ADJMT_QTY_2,ADJMT_REASON_CODE_3,ADJMT_TYP_CODE_3,ADJMT_AMT_3,ADJMT_QTY_3,ADJMT_REASON_CODE_4,ADJMT_TYP_CODE_4,ADJMT_AMT_4,ADJMT_QTY_4,ADJMT_REASON_CODE_5,ADJMT_TYP_CODE_5,ADJMT_AMT_5,ADJMT_QTY_5,ADJMT_REASON_CODE_6,ADJMT_TYP_CODE_6,ADJMT_AMT_6,ADJMT_QTY_6,OTHER_PAYER_PT_RESP_AMT,OTHER_PAYER_COVERED_AMT,OTHER_PAYER_DISCOUNT_AMT,OTHER_PAYER_PER_DAY_LMT_AMT,OTHER_PAYER_PT_PAID_AMT,OTHER_PAYER_TAX_AMT,OTHER_PAYER_PRETAX_CLAIM_TOTAL,REIMBURSEMENT_RATE,HCPCS_PAYABLE_AMT,REMARK_CODE_1,REMARK_CODE_2,REMARK_CODE_3,REMARK_CODE_4,REMARK_CODE_5,ESRD_PMT_AMT,NONPAY_PROFNL_COMPONENT_BILLED,ADJD_DATE,OTHER_PAYER_CLAIM_ADJMT_IND,CLAIM_EDI_SUBMITTER_ID,CLAIM_EDI_RECEIVER_ID,CLAIM_EDI_SUBMITTER_NAME,CLAIM_EDI_RECEIVER_NAME,CLAIM_EDI_RECEIVER_ID_QLFR,CLAIM_EDI_GRP_SUBMITTER_ID,CLAIM_EDI_PROVIDER_COMML_ID,CLAIM_EDI_FMT_QLFR,CLAIM_EDI_PROVIDER_LOC_CODE,CLAIM_BILL_TYP_CODE,INV_NUM,CRN,PT_DISCHARGE_STATUS_CODE,PT_ADM_SRC_CODE,PT_ADM_TYP_CODE,PCP_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

	public static ResultSet getClaim(ARRAY params) throws SQLException {

			StringBuilder errLog = new StringBuilder("Claim: getClaim: ");

			try {

					String selectPattern = "SELECT CLAIM_SK,CLAIM_ID,REC_CREATE_TMSTP,REC_UPDATE_TMSTP,REC_EFF_TMSTP,REC_TERM_TMSTP,REC_CREATED_BY,REC_UPDATED_BY,CHANGE_REASON_MEMO,CURR_REC_IND,CHANGE_VERSION_ID,BE_ID,PT_ID,PAYER_ID,OTHER_PAYER_ID,RFRL_SK,AUTH_SK,OTHER_PAYER_AUTH_SK,ICD_DX_CODE_REVISION_QLFR,ICD_DX_CODE_PRMY,ICD_DX_CODE_2,ICD_DX_CODE_3,ICD_DX_CODE_4,ICD_DX_CODE_5,ICD_DX_CODE_6,ICD_DX_CODE_7,ICD_DX_CODE_8,ICD_DX_CODE_9,ICD_DX_CODE_10,ICD_DX_CODE_11,ICD_DX_CODE_12,CLAIM_PAYER,CLAIM_TYP,INV_SUBM_TYP_CODE,CLAIM_SUBM_DATE,CLAIM_REC,INV_FMT_TYP_NAME,SANDATA_CLAIM_STATUS,SUBS_LAST_NAME,SUBS_FIRST_NAME,SUBS_MIDDLE_NAME,SUBS_NAME_SUFFIX,SUBS_ADDR1,SUBS_ADDR2,SUBS_CITY_NAME,SUBS_STATE_CODE,SUBS_PSTL_CODE,SUBS_DOB,SUBS_GENDER_TYP_NAME,SUBS_PRMY_ID,INSURED_GRP_NUM,INSURED_GRP_NAME,INDIV_REL_CODE,INS_TYP_CODE,INSURED_INDIV_DOD,SUBS_SUPPL_ID,CLAIM_FILING_IND_CODE,PROPTY_CAS_CLAIM_NUM,PT_PRMY_ID,PT_SCNDRY_ID,PREGNANCY_IND,PT_ACCOUNT_NUM,RELEASE_OF_INFO_CODE,PT_SIG_SRC_CODE,RELATED_CAUSES_CODE,AUTO_ACCIDENT_STATE_CODE,AUTO_ACCIDENT_COUNTRY_CODE,INITIAL_TREAT_DATE,PT_LAST_SEEN_DATE,CURR_COND_ONSET_DATE,ACUTE_MANIFESTATION_DATE,SIMILIAR_COND_ONSET_DATE,ACCIDENT_DATE,LAST_MENSTRUAL_PRD_DATE,LAST_XRAY_DATE,RX_DATE,DIS_FROM_DATE,DIS_TO_DATE,LAST_WORKED_DATE,WORK_RETURN_DATE,RELATED_HOSP_DISCHARGE_DATE,RELATED_HOSP_ADM_DATE,RELINQUSHED_CARE_DATE,CLIA_NUM,REPR_CRN,ADJ_REPR_CRN,IDE_ID,CH_TRACE_NUM,TXN_SET_CREATION_DATE,SPECIAL_PROGRAM_CODE,PART_AGRMT_CODE,ATT_RPRT_TYP_CODE,DELAY_REASON_CODE,ATT_TRNSMSN_CODE,SVC_AUTH_EXCP_CODE,MEDICARE_SECTION_4081_IND,MMG_CERT_NUM,APG_NUM,MRN,DEMO_PROJECT_ID,NUM_OF_HOME_HLTH_VISITS,HOME_HLTH_VISIT_FREQ_COUNT,DUR_OF_HOME_HLTH_VISITS_COUNT,CLAIM_FREQ_TYP_CODE,REPR_ALWD_AMT,REPR_SAVING_AMT,REPRICING_ORG_ID,REPRICING_PER_DIEM_AMT,REPR_APRVD_APG_CODE,REPR_APRVD_APG_AMT,REJECT_REASON_CODE,POLICY_COMP_CODE,EXCP_CODE,TOTAL_CLAIM_CHARGE_AMT,CONTR_AMT,CONTR_PERCENTAGE,CONTR_CODE,TERMS_DISCOUNT_PERCENTAGE,CONTR_VERSION_ID,CREDIT_CARD_MAXIMUM_AMT,PT_PAID_AMT,TOTAL_PURCH_SVC_AMT,PAYER_PAID_AMT,APRVD_AMT,ALWD_AMT,CCY_CODE,AMBL_TRANSPORT_CODE,AMBL_TRANSPORT_REASON_CODE,TRANSPORT_DISTANCE,ROUND_TRIP_PURPOSE_DESC,STRETCHER_PURPOSE_DESC,PT_COND_CODE,PT_COND_DESC,XRAY_AVAIL_IND,AMBL_CERT_COND_CODE_1,AMBL_CERT_COND_CODE_2,AMBL_CERT_COND_CODE_3,AMBL_CERT_COND_CODE_4,AMBL_CERT_COND_CODE_5,PT_VISION_COND_CODE_1,PT_VISION_COND_CODE_2,PT_VISION_COND_CODE_3,EPSDT_RFRL_COND_CODE_1,EPSDT_RFRL_COND_CODE_2,EPSDT_RFRL_COND_CODE_3,CERT_PRD_PROJ_VISIT_COUNT,TOTAL_VISITS_RENDERED_COUNT,PAY_TO_HCP_NPI,BILLING_HCP_NPI,ATTENDING_HCP_NPI,REFING_HCP_NPI,RENDER_HCP_NPI,ADJMT_REASON_CODE_1,ADJMT_TYP_CODE_1,ADJMT_AMT_1,ADJMT_QTY_1,ADJMT_REASON_CODE_2,ADJMT_TYP_CODE_2,ADJMT_AMT_2,ADJMT_QTY_2,ADJMT_REASON_CODE_3,ADJMT_TYP_CODE_3,ADJMT_AMT_3,ADJMT_QTY_3,ADJMT_REASON_CODE_4,ADJMT_TYP_CODE_4,ADJMT_AMT_4,ADJMT_QTY_4,ADJMT_REASON_CODE_5,ADJMT_TYP_CODE_5,ADJMT_AMT_5,ADJMT_QTY_5,ADJMT_REASON_CODE_6,ADJMT_TYP_CODE_6,ADJMT_AMT_6,ADJMT_QTY_6,OTHER_PAYER_PT_RESP_AMT,OTHER_PAYER_COVERED_AMT,OTHER_PAYER_DISCOUNT_AMT,OTHER_PAYER_PER_DAY_LMT_AMT,OTHER_PAYER_PT_PAID_AMT,OTHER_PAYER_TAX_AMT,OTHER_PAYER_PRETAX_CLAIM_TOTAL,REIMBURSEMENT_RATE,HCPCS_PAYABLE_AMT,REMARK_CODE_1,REMARK_CODE_2,REMARK_CODE_3,REMARK_CODE_4,REMARK_CODE_5,ESRD_PMT_AMT,NONPAY_PROFNL_COMPONENT_BILLED,ADJD_DATE,OTHER_PAYER_CLAIM_ADJMT_IND,CLAIM_EDI_SUBMITTER_ID,CLAIM_EDI_RECEIVER_ID,CLAIM_EDI_SUBMITTER_NAME,CLAIM_EDI_RECEIVER_NAME,CLAIM_EDI_RECEIVER_ID_QLFR,CLAIM_EDI_GRP_SUBMITTER_ID,CLAIM_EDI_PROVIDER_COMML_ID,CLAIM_EDI_FMT_QLFR,CLAIM_EDI_PROVIDER_LOC_CODE,CLAIM_BILL_TYP_CODE,INV_NUM,CRN,PT_DISCHARGE_STATUS_CODE,PT_ADM_SRC_CODE,PT_ADM_TYP_CODE,PCP_CODE FROM CLAIM %s";

					String whereClause = "WHERE BE_ID=? AND (TO_CHAR(REC_TERM_TMSTP, 'YYYY-MM-DD') = '9999-12-31' AND CURR_REC_IND = '1')";

					return new OracleQueryHandler().execute(selectPattern, whereClause, params);

			} catch (Exception e) {
					errLog.append("[Exception: " + e.getClass().getName() + ": [Message: " + e.getMessage() + "]");
					throw new SQLException(errLog.toString());

			}
	}

	public static ResultSet getClaim(long primaryKey) throws SQLException {

			StringBuilder errLog = new StringBuilder("Claim: getClaim: ");

			try {

					String sql = String.format("SELECT CLAIM_SK,CLAIM_ID,REC_CREATE_TMSTP,REC_UPDATE_TMSTP,REC_EFF_TMSTP,REC_TERM_TMSTP,REC_CREATED_BY,REC_UPDATED_BY,CHANGE_REASON_MEMO,CURR_REC_IND,CHANGE_VERSION_ID,BE_ID,PT_ID,PAYER_ID,OTHER_PAYER_ID,RFRL_SK,AUTH_SK,OTHER_PAYER_AUTH_SK,ICD_DX_CODE_REVISION_QLFR,ICD_DX_CODE_PRMY,ICD_DX_CODE_2,ICD_DX_CODE_3,ICD_DX_CODE_4,ICD_DX_CODE_5,ICD_DX_CODE_6,ICD_DX_CODE_7,ICD_DX_CODE_8,ICD_DX_CODE_9,ICD_DX_CODE_10,ICD_DX_CODE_11,ICD_DX_CODE_12,CLAIM_PAYER,CLAIM_TYP,INV_SUBM_TYP_CODE,CLAIM_SUBM_DATE,CLAIM_REC,INV_FMT_TYP_NAME,SANDATA_CLAIM_STATUS,SUBS_LAST_NAME,SUBS_FIRST_NAME,SUBS_MIDDLE_NAME,SUBS_NAME_SUFFIX,SUBS_ADDR1,SUBS_ADDR2,SUBS_CITY_NAME,SUBS_STATE_CODE,SUBS_PSTL_CODE,SUBS_DOB,SUBS_GENDER_TYP_NAME,SUBS_PRMY_ID,INSURED_GRP_NUM,INSURED_GRP_NAME,INDIV_REL_CODE,INS_TYP_CODE,INSURED_INDIV_DOD,SUBS_SUPPL_ID,CLAIM_FILING_IND_CODE,PROPTY_CAS_CLAIM_NUM,PT_PRMY_ID,PT_SCNDRY_ID,PREGNANCY_IND,PT_ACCOUNT_NUM,RELEASE_OF_INFO_CODE,PT_SIG_SRC_CODE,RELATED_CAUSES_CODE,AUTO_ACCIDENT_STATE_CODE,AUTO_ACCIDENT_COUNTRY_CODE,INITIAL_TREAT_DATE,PT_LAST_SEEN_DATE,CURR_COND_ONSET_DATE,ACUTE_MANIFESTATION_DATE,SIMILIAR_COND_ONSET_DATE,ACCIDENT_DATE,LAST_MENSTRUAL_PRD_DATE,LAST_XRAY_DATE,RX_DATE,DIS_FROM_DATE,DIS_TO_DATE,LAST_WORKED_DATE,WORK_RETURN_DATE,RELATED_HOSP_DISCHARGE_DATE,RELATED_HOSP_ADM_DATE,RELINQUSHED_CARE_DATE,CLIA_NUM,REPR_CRN,ADJ_REPR_CRN,IDE_ID,CH_TRACE_NUM,TXN_SET_CREATION_DATE,SPECIAL_PROGRAM_CODE,PART_AGRMT_CODE,ATT_RPRT_TYP_CODE,DELAY_REASON_CODE,ATT_TRNSMSN_CODE,SVC_AUTH_EXCP_CODE,MEDICARE_SECTION_4081_IND,MMG_CERT_NUM,APG_NUM,MRN,DEMO_PROJECT_ID,NUM_OF_HOME_HLTH_VISITS,HOME_HLTH_VISIT_FREQ_COUNT,DUR_OF_HOME_HLTH_VISITS_COUNT,CLAIM_FREQ_TYP_CODE,REPR_ALWD_AMT,REPR_SAVING_AMT,REPRICING_ORG_ID,REPRICING_PER_DIEM_AMT,REPR_APRVD_APG_CODE,REPR_APRVD_APG_AMT,REJECT_REASON_CODE,POLICY_COMP_CODE,EXCP_CODE,TOTAL_CLAIM_CHARGE_AMT,CONTR_AMT,CONTR_PERCENTAGE,CONTR_CODE,TERMS_DISCOUNT_PERCENTAGE,CONTR_VERSION_ID,CREDIT_CARD_MAXIMUM_AMT,PT_PAID_AMT,TOTAL_PURCH_SVC_AMT,PAYER_PAID_AMT,APRVD_AMT,ALWD_AMT,CCY_CODE,AMBL_TRANSPORT_CODE,AMBL_TRANSPORT_REASON_CODE,TRANSPORT_DISTANCE,ROUND_TRIP_PURPOSE_DESC,STRETCHER_PURPOSE_DESC,PT_COND_CODE,PT_COND_DESC,XRAY_AVAIL_IND,AMBL_CERT_COND_CODE_1,AMBL_CERT_COND_CODE_2,AMBL_CERT_COND_CODE_3,AMBL_CERT_COND_CODE_4,AMBL_CERT_COND_CODE_5,PT_VISION_COND_CODE_1,PT_VISION_COND_CODE_2,PT_VISION_COND_CODE_3,EPSDT_RFRL_COND_CODE_1,EPSDT_RFRL_COND_CODE_2,EPSDT_RFRL_COND_CODE_3,CERT_PRD_PROJ_VISIT_COUNT,TOTAL_VISITS_RENDERED_COUNT,PAY_TO_HCP_NPI,BILLING_HCP_NPI,ATTENDING_HCP_NPI,REFING_HCP_NPI,RENDER_HCP_NPI,ADJMT_REASON_CODE_1,ADJMT_TYP_CODE_1,ADJMT_AMT_1,ADJMT_QTY_1,ADJMT_REASON_CODE_2,ADJMT_TYP_CODE_2,ADJMT_AMT_2,ADJMT_QTY_2,ADJMT_REASON_CODE_3,ADJMT_TYP_CODE_3,ADJMT_AMT_3,ADJMT_QTY_3,ADJMT_REASON_CODE_4,ADJMT_TYP_CODE_4,ADJMT_AMT_4,ADJMT_QTY_4,ADJMT_REASON_CODE_5,ADJMT_TYP_CODE_5,ADJMT_AMT_5,ADJMT_QTY_5,ADJMT_REASON_CODE_6,ADJMT_TYP_CODE_6,ADJMT_AMT_6,ADJMT_QTY_6,OTHER_PAYER_PT_RESP_AMT,OTHER_PAYER_COVERED_AMT,OTHER_PAYER_DISCOUNT_AMT,OTHER_PAYER_PER_DAY_LMT_AMT,OTHER_PAYER_PT_PAID_AMT,OTHER_PAYER_TAX_AMT,OTHER_PAYER_PRETAX_CLAIM_TOTAL,REIMBURSEMENT_RATE,HCPCS_PAYABLE_AMT,REMARK_CODE_1,REMARK_CODE_2,REMARK_CODE_3,REMARK_CODE_4,REMARK_CODE_5,ESRD_PMT_AMT,NONPAY_PROFNL_COMPONENT_BILLED,ADJD_DATE,OTHER_PAYER_CLAIM_ADJMT_IND,CLAIM_EDI_SUBMITTER_ID,CLAIM_EDI_RECEIVER_ID,CLAIM_EDI_SUBMITTER_NAME,CLAIM_EDI_RECEIVER_NAME,CLAIM_EDI_RECEIVER_ID_QLFR,CLAIM_EDI_GRP_SUBMITTER_ID,CLAIM_EDI_PROVIDER_COMML_ID,CLAIM_EDI_FMT_QLFR,CLAIM_EDI_PROVIDER_LOC_CODE,CLAIM_BILL_TYP_CODE,INV_NUM,CRN,PT_DISCHARGE_STATUS_CODE,PT_ADM_SRC_CODE,PT_ADM_TYP_CODE,PCP_CODE FROM %s WHERE %s=? AND (TO_CHAR(REC_TERM_TMSTP, 'YYYY-MM-DD') = '9999-12-31' AND CURR_REC_IND = '1')", TABLE_NAME, SEQUENCE_KEY_COLUMN_NAME);

					return new OracleQueryHandler().execute(sql, new Object[]{primaryKey});

			} catch (Exception e) {
					errLog.append("[Exception: " + e.getClass().getName() + ": [Message: " + e.getMessage() + "]");
					throw new SQLException(errLog.toString());

			}
	}

	public static long insertClaim(STRUCT struct) throws SQLException {

			StringBuilder errLog = new StringBuilder("Claim: insertClaim: ");

			try {

					return new OracleQueryHandler().executeInsert(TABLE_NAME, INSERT_STATEMENT, PRIMARY_KEY_INDEX, REC_TERM_TMSTP_INDEX, CURR_REC_IND_INDEX, TABLE_ID_COLUMN_INDEX, CHANGE_VERSION_ID_INDEX, struct);

			} catch (Exception e) {
					errLog.append("[Exception: " + e.getClass().getName() + ": [Message: " + e.getMessage() + "]");
					throw new SQLException(errLog.toString());

			}
	}

	public static long updateClaim(STRUCT struct) throws SQLException {

			StringBuilder errLog = new StringBuilder("Claim: updateClaim: ");

			try {

					return new OracleQueryHandler().executeUpdate(TABLE_NAME, SEQUENCE_KEY_COLUMN_NAME, CHANGE_VERSION_ID_INDEX, struct);

			} catch (Exception e) {
					errLog.append("[Exception: " + e.getClass().getName() + ": [Message: " + e.getMessage() + "]");
					throw new SQLException(errLog.toString());

			}
	}

	public static long deleteClaim(long primaryKey) throws SQLException {

			StringBuilder errLog = new StringBuilder("Claim: deleteClaim: ");

			try {

					return  new OracleQueryHandler().executeDelete(TABLE_NAME, SEQUENCE_KEY_COLUMN_NAME, primaryKey, true);

			} catch (Exception e) {
					errLog.append("[Exception: " + e.getClass().getName() + ": [Message: " + e.getMessage() + "]");
					throw new SQLException(errLog.toString());

			}
	}



}
;
/
