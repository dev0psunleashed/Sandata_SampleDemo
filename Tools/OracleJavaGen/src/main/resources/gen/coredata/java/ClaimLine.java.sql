CREATE OR REPLACE AND COMPILE JAVA SOURCE NAMED "ClaimLine" AS 
import com.sandata.lab.db.oracle.common.handler.OracleQueryHandler;
import oracle.sql.STRUCT;
import oracle.sql.ARRAY;
import java.sql.ResultSet;
import java.sql.SQLException;


public class ClaimLine {

	private static String TABLE_NAME = "CLAIM_LINE";

	private static String SEQUENCE_KEY_COLUMN_NAME = "CLAIM_LINE_SK";

	private static int PRIMARY_KEY_INDEX = 1;

	private static int REC_TERM_TMSTP_INDEX = -1;

	private static int CURR_REC_IND_INDEX = -1;

	private static int TABLE_ID_COLUMN_INDEX = 2;

	private static int CHANGE_VERSION_ID_INDEX = 8;

	private static String INSERT_STATEMENT = "INSERT INTO CLAIM_LINE(CLAIM_LINE_SK,CLAIM_LINE_ID,REC_CREATE_TMSTP,REC_UPDATE_TMSTP,REC_CREATED_BY,REC_UPDATED_BY,CHANGE_REASON_MEMO,CHANGE_VERSION_ID,BE_ID,CLAIM_SK,RENDER_PROVIDER_SK,PURCH_SVC_PROVIDER_SK,REFING_PROVIDER_SK,ORDNG_PROVIDER_SK,SUPV_PROVIDER_SK,LAB_SVC_PROVIDER_SK,ADJMT_TYP_CODE,NDC,DRUG_UNIT_PRICE,NATIONAL_DRUG_UNIT_COUNT,NATIONAL_DRUG_UOM,RX_NUM,PLACE_OF_SVC_CODE_SK,PROC_MDFR_CODE_1,PROC_MDFR_CODE_2,PROC_MDFR_CODE_3,PROC_MDFR_CODE_4,DX_CODE_POINTER_1,DX_CODE_POINTER_2,DX_CODE_POINTER_3,DX_CODE_POINTER_4,EMERG_IND,FAMILY_PLANNING_IND,EPSDT_IND,COPAY_STATUS_CODE,PROC_CODE,BILLING_CODE,ATT_RPRT_TYP_CODE,ATT_TRNSMSN_CODE,AMBL_TRANSPORT_REASON_CODE,TRANSPORT_DISTANCE,ROUND_TRIP_PURPOSE_DESC,STRETCHER_PURPOSE_DESC,XRAY_AVAIL_IND,CERT_TYP_CODE,DME_DUR,REPR_LINE_ITEM_REF_NUM,ADJ_REPR_LINE_ITEM_REF_NUM,AUTH_SK,RFRL_SK,MMG_CERT_NUM,CLIA_NUM,REFING_CLIA_NUM,IMMUN_BATCH_NUM,APG_NUM,OXYGEN_FLOW_RATE,UNIVERSAL_PRODUCT_NUM,LINE_NOTE_TEXT,NUM_OF_HOME_HLTH_VISITS,HOME_HLTH_VISITS_FREQ_COUNT,DUR_OF_HOME_HLTH_VISITS_UOM,DUR_OF_HOME_HLTH_VISITS,SVC_DATE,CERT_REVISION_DATE,BEG_THERAPY_DATE,LAST_CERT_DATE,LAST_SEEN_DATE,SHIPPED_DATE,ONSET_DATE,LAST_XRAY_DATE,ACUTE_MANIFESTATION_DATE,INITIAL_TREAT_DATE,SIMILAR_ILLNESS_DATE,TEST_PERF_DATE,SAO2_TEST_DATE,TREAT_PRD_COUNT,ARTERIAL_BLOOD_GAS_QTY,SAO2_QTY,OXYGEN_TEST_COND_CODE,OXYGEN_TEST_FINDINGS_CODE,AMBL_CERT_COND_CODE_1,AMBL_CERT_COND_CODE_2,AMBL_CERT_COND_CODE_3,AMBL_CERT_COND_CODE_4,AMBL_CERT_COND_CODE_5,DMERC_COND_CODE_1,DMERC_COND_CODE_2,DMERC_COND_CODE_3,DMERC_COND_CODE_4,DMERC_COND_CODE_5,LMN,LMN_UOM,SVC_UNIT_COUNT,SVC_UNIT_COUNT_UOM,DME_RENTAL_PRICE,DME_PURCHASE_PRICE,TERMS_DISCOUNT_PERCENTAGE,LINE_ITEM_CHARGE_AMT,CONTR_TYP_CODE,CONTR_AMT,CONTR_PERCENTAGE,CONTR_CODE,CONTR_VERSION_ID,SALES_TAX_AMT,APRVD_AMT,POSTAGE_CLAIMED_AMT,PURCH_SVC_CHARGE_AMT,PRICING_METHODOLOGY_CODE,REPR_ALWD_AMT,REPR_SAVING_AMT,REPRICING_ORG_ID,REPRICING_PER_DIEM_AMT,REPR_APRVD_APG_CODE,REPR_APRVD_APG_AMT,REPR_APRVD_SVC_UNIT_COUNT,REJECT_REASON_CODE,POLICY_COMP_CODE,EXCP_CODE,SVC_LINE_PAID_AMT,ADJMT_REASON_CODE,ADJMT_AMT,ADJMT_QTY,ADJD_DATE,PAYER_ID,REV_CODE,ICD_DX_CODE_REVISION_QLFR,ICD_DX_CODE_PRMY,ICD_DX_CODE_2,ICD_DX_CODE_3,ICD_DX_CODE_4,ICD_DX_CODE_5,ICD_DX_CODE_6,ICD_DX_CODE_7,ICD_DX_CODE_8,ICD_DX_CODE_9,ICD_DX_CODE_10,ICD_DX_CODE_11,ICD_DX_CODE_12,SVC_NAME,INV_NUM,INV_DET_ID,CRN,PT_DISCHARGE_STATUS_CODE,PT_ADM_SRC_CODE,PT_ADM_TYP_CODE,CLAIM_LINE_SVC_LINE_ITEM_NUM) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

	public static ResultSet getClaimLine(String bsnEntId) throws SQLException {

			StringBuilder errLog = new StringBuilder("ClaimLine: getClaimLine: ");

			try {

					String sql = String.format("SELECT CLAIM_LINE_SK,CLAIM_LINE_ID,REC_CREATE_TMSTP,REC_UPDATE_TMSTP,REC_CREATED_BY,REC_UPDATED_BY,CHANGE_REASON_MEMO,CHANGE_VERSION_ID,BE_ID,CLAIM_SK,RENDER_PROVIDER_SK,PURCH_SVC_PROVIDER_SK,REFING_PROVIDER_SK,ORDNG_PROVIDER_SK,SUPV_PROVIDER_SK,LAB_SVC_PROVIDER_SK,ADJMT_TYP_CODE,NDC,DRUG_UNIT_PRICE,NATIONAL_DRUG_UNIT_COUNT,NATIONAL_DRUG_UOM,RX_NUM,PLACE_OF_SVC_CODE_SK,PROC_MDFR_CODE_1,PROC_MDFR_CODE_2,PROC_MDFR_CODE_3,PROC_MDFR_CODE_4,DX_CODE_POINTER_1,DX_CODE_POINTER_2,DX_CODE_POINTER_3,DX_CODE_POINTER_4,EMERG_IND,FAMILY_PLANNING_IND,EPSDT_IND,COPAY_STATUS_CODE,PROC_CODE,BILLING_CODE,ATT_RPRT_TYP_CODE,ATT_TRNSMSN_CODE,AMBL_TRANSPORT_REASON_CODE,TRANSPORT_DISTANCE,ROUND_TRIP_PURPOSE_DESC,STRETCHER_PURPOSE_DESC,XRAY_AVAIL_IND,CERT_TYP_CODE,DME_DUR,REPR_LINE_ITEM_REF_NUM,ADJ_REPR_LINE_ITEM_REF_NUM,AUTH_SK,RFRL_SK,MMG_CERT_NUM,CLIA_NUM,REFING_CLIA_NUM,IMMUN_BATCH_NUM,APG_NUM,OXYGEN_FLOW_RATE,UNIVERSAL_PRODUCT_NUM,LINE_NOTE_TEXT,NUM_OF_HOME_HLTH_VISITS,HOME_HLTH_VISITS_FREQ_COUNT,DUR_OF_HOME_HLTH_VISITS_UOM,DUR_OF_HOME_HLTH_VISITS,SVC_DATE,CERT_REVISION_DATE,BEG_THERAPY_DATE,LAST_CERT_DATE,LAST_SEEN_DATE,SHIPPED_DATE,ONSET_DATE,LAST_XRAY_DATE,ACUTE_MANIFESTATION_DATE,INITIAL_TREAT_DATE,SIMILAR_ILLNESS_DATE,TEST_PERF_DATE,SAO2_TEST_DATE,TREAT_PRD_COUNT,ARTERIAL_BLOOD_GAS_QTY,SAO2_QTY,OXYGEN_TEST_COND_CODE,OXYGEN_TEST_FINDINGS_CODE,AMBL_CERT_COND_CODE_1,AMBL_CERT_COND_CODE_2,AMBL_CERT_COND_CODE_3,AMBL_CERT_COND_CODE_4,AMBL_CERT_COND_CODE_5,DMERC_COND_CODE_1,DMERC_COND_CODE_2,DMERC_COND_CODE_3,DMERC_COND_CODE_4,DMERC_COND_CODE_5,LMN,LMN_UOM,SVC_UNIT_COUNT,SVC_UNIT_COUNT_UOM,DME_RENTAL_PRICE,DME_PURCHASE_PRICE,TERMS_DISCOUNT_PERCENTAGE,LINE_ITEM_CHARGE_AMT,CONTR_TYP_CODE,CONTR_AMT,CONTR_PERCENTAGE,CONTR_CODE,CONTR_VERSION_ID,SALES_TAX_AMT,APRVD_AMT,POSTAGE_CLAIMED_AMT,PURCH_SVC_CHARGE_AMT,PRICING_METHODOLOGY_CODE,REPR_ALWD_AMT,REPR_SAVING_AMT,REPRICING_ORG_ID,REPRICING_PER_DIEM_AMT,REPR_APRVD_APG_CODE,REPR_APRVD_APG_AMT,REPR_APRVD_SVC_UNIT_COUNT,REJECT_REASON_CODE,POLICY_COMP_CODE,EXCP_CODE,SVC_LINE_PAID_AMT,ADJMT_REASON_CODE,ADJMT_AMT,ADJMT_QTY,ADJD_DATE,PAYER_ID,REV_CODE,ICD_DX_CODE_REVISION_QLFR,ICD_DX_CODE_PRMY,ICD_DX_CODE_2,ICD_DX_CODE_3,ICD_DX_CODE_4,ICD_DX_CODE_5,ICD_DX_CODE_6,ICD_DX_CODE_7,ICD_DX_CODE_8,ICD_DX_CODE_9,ICD_DX_CODE_10,ICD_DX_CODE_11,ICD_DX_CODE_12,SVC_NAME,INV_NUM,INV_DET_ID,CRN,PT_DISCHARGE_STATUS_CODE,PT_ADM_SRC_CODE,PT_ADM_TYP_CODE,CLAIM_LINE_SVC_LINE_ITEM_NUM FROM %s WHERE BE_ID = ?", TABLE_NAME);

					return  new OracleQueryHandler().execute(sql, new Object[]{bsnEntId});

			} catch (Exception e) {
					errLog.append("[Exception: " + e.getClass().getName() + ": [Message: " + e.getMessage() + "]");
					throw new SQLException(errLog.toString());

			}
	}

	public static ResultSet getClaimLine(ARRAY params) throws SQLException {

			StringBuilder errLog = new StringBuilder("ClaimLine: getClaimLine: ");

			try {

					String selectPattern = "SELECT CLAIM_LINE_SK,CLAIM_LINE_ID,REC_CREATE_TMSTP,REC_UPDATE_TMSTP,REC_CREATED_BY,REC_UPDATED_BY,CHANGE_REASON_MEMO,CHANGE_VERSION_ID,BE_ID,CLAIM_SK,RENDER_PROVIDER_SK,PURCH_SVC_PROVIDER_SK,REFING_PROVIDER_SK,ORDNG_PROVIDER_SK,SUPV_PROVIDER_SK,LAB_SVC_PROVIDER_SK,ADJMT_TYP_CODE,NDC,DRUG_UNIT_PRICE,NATIONAL_DRUG_UNIT_COUNT,NATIONAL_DRUG_UOM,RX_NUM,PLACE_OF_SVC_CODE_SK,PROC_MDFR_CODE_1,PROC_MDFR_CODE_2,PROC_MDFR_CODE_3,PROC_MDFR_CODE_4,DX_CODE_POINTER_1,DX_CODE_POINTER_2,DX_CODE_POINTER_3,DX_CODE_POINTER_4,EMERG_IND,FAMILY_PLANNING_IND,EPSDT_IND,COPAY_STATUS_CODE,PROC_CODE,BILLING_CODE,ATT_RPRT_TYP_CODE,ATT_TRNSMSN_CODE,AMBL_TRANSPORT_REASON_CODE,TRANSPORT_DISTANCE,ROUND_TRIP_PURPOSE_DESC,STRETCHER_PURPOSE_DESC,XRAY_AVAIL_IND,CERT_TYP_CODE,DME_DUR,REPR_LINE_ITEM_REF_NUM,ADJ_REPR_LINE_ITEM_REF_NUM,AUTH_SK,RFRL_SK,MMG_CERT_NUM,CLIA_NUM,REFING_CLIA_NUM,IMMUN_BATCH_NUM,APG_NUM,OXYGEN_FLOW_RATE,UNIVERSAL_PRODUCT_NUM,LINE_NOTE_TEXT,NUM_OF_HOME_HLTH_VISITS,HOME_HLTH_VISITS_FREQ_COUNT,DUR_OF_HOME_HLTH_VISITS_UOM,DUR_OF_HOME_HLTH_VISITS,SVC_DATE,CERT_REVISION_DATE,BEG_THERAPY_DATE,LAST_CERT_DATE,LAST_SEEN_DATE,SHIPPED_DATE,ONSET_DATE,LAST_XRAY_DATE,ACUTE_MANIFESTATION_DATE,INITIAL_TREAT_DATE,SIMILAR_ILLNESS_DATE,TEST_PERF_DATE,SAO2_TEST_DATE,TREAT_PRD_COUNT,ARTERIAL_BLOOD_GAS_QTY,SAO2_QTY,OXYGEN_TEST_COND_CODE,OXYGEN_TEST_FINDINGS_CODE,AMBL_CERT_COND_CODE_1,AMBL_CERT_COND_CODE_2,AMBL_CERT_COND_CODE_3,AMBL_CERT_COND_CODE_4,AMBL_CERT_COND_CODE_5,DMERC_COND_CODE_1,DMERC_COND_CODE_2,DMERC_COND_CODE_3,DMERC_COND_CODE_4,DMERC_COND_CODE_5,LMN,LMN_UOM,SVC_UNIT_COUNT,SVC_UNIT_COUNT_UOM,DME_RENTAL_PRICE,DME_PURCHASE_PRICE,TERMS_DISCOUNT_PERCENTAGE,LINE_ITEM_CHARGE_AMT,CONTR_TYP_CODE,CONTR_AMT,CONTR_PERCENTAGE,CONTR_CODE,CONTR_VERSION_ID,SALES_TAX_AMT,APRVD_AMT,POSTAGE_CLAIMED_AMT,PURCH_SVC_CHARGE_AMT,PRICING_METHODOLOGY_CODE,REPR_ALWD_AMT,REPR_SAVING_AMT,REPRICING_ORG_ID,REPRICING_PER_DIEM_AMT,REPR_APRVD_APG_CODE,REPR_APRVD_APG_AMT,REPR_APRVD_SVC_UNIT_COUNT,REJECT_REASON_CODE,POLICY_COMP_CODE,EXCP_CODE,SVC_LINE_PAID_AMT,ADJMT_REASON_CODE,ADJMT_AMT,ADJMT_QTY,ADJD_DATE,PAYER_ID,REV_CODE,ICD_DX_CODE_REVISION_QLFR,ICD_DX_CODE_PRMY,ICD_DX_CODE_2,ICD_DX_CODE_3,ICD_DX_CODE_4,ICD_DX_CODE_5,ICD_DX_CODE_6,ICD_DX_CODE_7,ICD_DX_CODE_8,ICD_DX_CODE_9,ICD_DX_CODE_10,ICD_DX_CODE_11,ICD_DX_CODE_12,SVC_NAME,INV_NUM,INV_DET_ID,CRN,PT_DISCHARGE_STATUS_CODE,PT_ADM_SRC_CODE,PT_ADM_TYP_CODE,CLAIM_LINE_SVC_LINE_ITEM_NUM FROM CLAIM_LINE %s";

					String whereClause = "WHERE BE_ID=?";

					return new OracleQueryHandler().execute(selectPattern, whereClause, params);

			} catch (Exception e) {
					errLog.append("[Exception: " + e.getClass().getName() + ": [Message: " + e.getMessage() + "]");
					throw new SQLException(errLog.toString());

			}
	}

	public static ResultSet getClaimLine(long primaryKey) throws SQLException {

			StringBuilder errLog = new StringBuilder("ClaimLine: getClaimLine: ");

			try {

					String sql = String.format("SELECT CLAIM_LINE_SK,CLAIM_LINE_ID,REC_CREATE_TMSTP,REC_UPDATE_TMSTP,REC_CREATED_BY,REC_UPDATED_BY,CHANGE_REASON_MEMO,CHANGE_VERSION_ID,BE_ID,CLAIM_SK,RENDER_PROVIDER_SK,PURCH_SVC_PROVIDER_SK,REFING_PROVIDER_SK,ORDNG_PROVIDER_SK,SUPV_PROVIDER_SK,LAB_SVC_PROVIDER_SK,ADJMT_TYP_CODE,NDC,DRUG_UNIT_PRICE,NATIONAL_DRUG_UNIT_COUNT,NATIONAL_DRUG_UOM,RX_NUM,PLACE_OF_SVC_CODE_SK,PROC_MDFR_CODE_1,PROC_MDFR_CODE_2,PROC_MDFR_CODE_3,PROC_MDFR_CODE_4,DX_CODE_POINTER_1,DX_CODE_POINTER_2,DX_CODE_POINTER_3,DX_CODE_POINTER_4,EMERG_IND,FAMILY_PLANNING_IND,EPSDT_IND,COPAY_STATUS_CODE,PROC_CODE,BILLING_CODE,ATT_RPRT_TYP_CODE,ATT_TRNSMSN_CODE,AMBL_TRANSPORT_REASON_CODE,TRANSPORT_DISTANCE,ROUND_TRIP_PURPOSE_DESC,STRETCHER_PURPOSE_DESC,XRAY_AVAIL_IND,CERT_TYP_CODE,DME_DUR,REPR_LINE_ITEM_REF_NUM,ADJ_REPR_LINE_ITEM_REF_NUM,AUTH_SK,RFRL_SK,MMG_CERT_NUM,CLIA_NUM,REFING_CLIA_NUM,IMMUN_BATCH_NUM,APG_NUM,OXYGEN_FLOW_RATE,UNIVERSAL_PRODUCT_NUM,LINE_NOTE_TEXT,NUM_OF_HOME_HLTH_VISITS,HOME_HLTH_VISITS_FREQ_COUNT,DUR_OF_HOME_HLTH_VISITS_UOM,DUR_OF_HOME_HLTH_VISITS,SVC_DATE,CERT_REVISION_DATE,BEG_THERAPY_DATE,LAST_CERT_DATE,LAST_SEEN_DATE,SHIPPED_DATE,ONSET_DATE,LAST_XRAY_DATE,ACUTE_MANIFESTATION_DATE,INITIAL_TREAT_DATE,SIMILAR_ILLNESS_DATE,TEST_PERF_DATE,SAO2_TEST_DATE,TREAT_PRD_COUNT,ARTERIAL_BLOOD_GAS_QTY,SAO2_QTY,OXYGEN_TEST_COND_CODE,OXYGEN_TEST_FINDINGS_CODE,AMBL_CERT_COND_CODE_1,AMBL_CERT_COND_CODE_2,AMBL_CERT_COND_CODE_3,AMBL_CERT_COND_CODE_4,AMBL_CERT_COND_CODE_5,DMERC_COND_CODE_1,DMERC_COND_CODE_2,DMERC_COND_CODE_3,DMERC_COND_CODE_4,DMERC_COND_CODE_5,LMN,LMN_UOM,SVC_UNIT_COUNT,SVC_UNIT_COUNT_UOM,DME_RENTAL_PRICE,DME_PURCHASE_PRICE,TERMS_DISCOUNT_PERCENTAGE,LINE_ITEM_CHARGE_AMT,CONTR_TYP_CODE,CONTR_AMT,CONTR_PERCENTAGE,CONTR_CODE,CONTR_VERSION_ID,SALES_TAX_AMT,APRVD_AMT,POSTAGE_CLAIMED_AMT,PURCH_SVC_CHARGE_AMT,PRICING_METHODOLOGY_CODE,REPR_ALWD_AMT,REPR_SAVING_AMT,REPRICING_ORG_ID,REPRICING_PER_DIEM_AMT,REPR_APRVD_APG_CODE,REPR_APRVD_APG_AMT,REPR_APRVD_SVC_UNIT_COUNT,REJECT_REASON_CODE,POLICY_COMP_CODE,EXCP_CODE,SVC_LINE_PAID_AMT,ADJMT_REASON_CODE,ADJMT_AMT,ADJMT_QTY,ADJD_DATE,PAYER_ID,REV_CODE,ICD_DX_CODE_REVISION_QLFR,ICD_DX_CODE_PRMY,ICD_DX_CODE_2,ICD_DX_CODE_3,ICD_DX_CODE_4,ICD_DX_CODE_5,ICD_DX_CODE_6,ICD_DX_CODE_7,ICD_DX_CODE_8,ICD_DX_CODE_9,ICD_DX_CODE_10,ICD_DX_CODE_11,ICD_DX_CODE_12,SVC_NAME,INV_NUM,INV_DET_ID,CRN,PT_DISCHARGE_STATUS_CODE,PT_ADM_SRC_CODE,PT_ADM_TYP_CODE,CLAIM_LINE_SVC_LINE_ITEM_NUM FROM %s WHERE %s=?", TABLE_NAME, SEQUENCE_KEY_COLUMN_NAME);

					return new OracleQueryHandler().execute(sql, new Object[]{primaryKey});

			} catch (Exception e) {
					errLog.append("[Exception: " + e.getClass().getName() + ": [Message: " + e.getMessage() + "]");
					throw new SQLException(errLog.toString());

			}
	}

	public static long insertClaimLine(STRUCT struct) throws SQLException {

			StringBuilder errLog = new StringBuilder("ClaimLine: insertClaimLine: ");

			try {

					return new OracleQueryHandler().executeInsert(TABLE_NAME, INSERT_STATEMENT, PRIMARY_KEY_INDEX, REC_TERM_TMSTP_INDEX, CURR_REC_IND_INDEX, TABLE_ID_COLUMN_INDEX, CHANGE_VERSION_ID_INDEX, struct);

			} catch (Exception e) {
					errLog.append("[Exception: " + e.getClass().getName() + ": [Message: " + e.getMessage() + "]");
					throw new SQLException(errLog.toString());

			}
	}

	public static long updateClaimLine(STRUCT struct) throws SQLException {

			StringBuilder errLog = new StringBuilder("ClaimLine: updateClaimLine: ");

			try {

					return new OracleQueryHandler().executeUpdate(TABLE_NAME, SEQUENCE_KEY_COLUMN_NAME, CHANGE_VERSION_ID_INDEX, struct);

			} catch (Exception e) {
					errLog.append("[Exception: " + e.getClass().getName() + ": [Message: " + e.getMessage() + "]");
					throw new SQLException(errLog.toString());

			}
	}

	public static long deleteClaimLine(long primaryKey) throws SQLException {

			StringBuilder errLog = new StringBuilder("ClaimLine: deleteClaimLine: ");

			try {

					return  new OracleQueryHandler().executeDelete(TABLE_NAME, SEQUENCE_KEY_COLUMN_NAME, primaryKey, false);

			} catch (Exception e) {
					errLog.append("[Exception: " + e.getClass().getName() + ": [Message: " + e.getMessage() + "]");
					throw new SQLException(errLog.toString());

			}
	}



}
;
/
