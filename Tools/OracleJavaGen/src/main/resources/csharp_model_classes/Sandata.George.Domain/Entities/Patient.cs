//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.27 at 10:53:27 PM EST 
//


using Sandata.George.Common;
using Sandata.George.Common.Helpers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Threading.Tasks;





/**
 * A person that receives medical care, treatment, or other services from a Business Entity
 * 
 * <p>Java class for Patient complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Patient">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}Payment" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_ID_Crosswalk" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Nutritional_Requirement" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Clinical_Assessment" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Schedule" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Plan_Of_Care" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Billing_Rate" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Medical_History" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Schedule_Participant_Exclusion" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Patient_Cross_Reference" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Environment" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Safety_Measure" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Patient_History" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Contact_Email" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Contact_Phone" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Designee_Contact_Detail" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Intake" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Claim" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Reference" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Durable_Medical_Equipment_And_Supply" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Medication" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Document_Crosswalk" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Schedule_Event" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Visit" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Allergy" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Authorization" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Invoice" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Billing" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Accounts_Receivable" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Rate" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Associated_Rate" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Eligibility" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Diagnosis" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Timesheet_Detail" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Payer" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Requirement" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Contact_Address" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Healthcare_Professional" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Note" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Order" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Administrative_Staff_Patient" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="Patient_SK" use="required" type="{}Surrogate_Key" />
 *       &lt;attribute name="Patient_ID" use="required" type="{}ID" />
 *       &lt;attribute name="Record_Create_Timestamp" use="required" type="{}Record_Create_Timestamp" />
 *       &lt;attribute name="Record_Update_Timestamp" use="required" type="{}Record_Update_Timestamp" />
 *       &lt;attribute name="Record_Effective_Timestamp" use="required" type="{}Record_Effective_Timestamp" />
 *       &lt;attribute name="Record_Termination_Timestamp" use="required" type="{}Record_Termination_Timestamp" />
 *       &lt;attribute name="Record_Created_By" type="{}Record_Created_By" />
 *       &lt;attribute name="Record_Updated_By" type="{}Record_Updated_By" />
 *       &lt;attribute name="Change_Reason_Code" type="{}Change_Reason_Code" />
 *       &lt;attribute name="Change_Reason_Memo" type="{}Change_Reason_Memo" />
 *       &lt;attribute name="Change_Version_ID" use="required" type="{}Change_Version_ID" />
 *       &lt;attribute name="Current_Record_Indicator" use="required" type="{}Current_Record_Indicator" />
 *       &lt;attribute name="Business_Entity_ID" use="required" type="{}ID" />
 *       &lt;attribute name="Timezone_Name" type="{}Timezone_Name" />
 *       &lt;attribute name="Patient_Status_Name" type="{}Patient_Status_Name" />
 *       &lt;attribute name="Patient_Status_Change_Date" type="{http://www.w3.org/2001/XMLSchema}dateTime" />
 *       &lt;attribute name="Patient_Taxpayer_Identification_Number_Qualifier" type="{}Taxpayer_Identification_Number_Qualifier" />
 *       &lt;attribute name="Patient_Taxpayer_Identification_Number" type="{}Taxpayer_Identification_Number" />
 *       &lt;attribute name="Patient_Medical_Record_Number" type="{}Medical_Record_Number" />
 *       &lt;attribute name="Patient_Business_Entity_Admission_ID" type="{}ID" />
 *       &lt;attribute name="Patient_Medicare_ID" type="{}ID" />
 *       &lt;attribute name="Patient_Medicaid_ID" type="{}ID" />
 *       &lt;attribute name="Patient_Other_ID" type="{}ID" />
 *       &lt;attribute name="Patient_Other_ID_Qualifier">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Patient_First_Name" type="{}Name" />
 *       &lt;attribute name="Patient_Last_Name" type="{}Name" />
 *       &lt;attribute name="Patient_Middle_Name" type="{}Name" />
 *       &lt;attribute name="Patient_Marital_Status_Name" type="{}Marital_Status_Name" />
 *       &lt;attribute name="Patient_Date_of_Birth" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Patient_Gender_Type_Name" type="{}Gender_Type_Name" />
 *       &lt;attribute name="Patient_Preferred_Contact_Method">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Patient_Preferred_Language_Code">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="10"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Patient_Preferred_Nickname" type="{}Name" />
 *       &lt;attribute name="Non_English_Speaking_Indicator" type="{}Indicator" />
 *       &lt;attribute name="Patient_Written_Language">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Patient_Race_Ethnicity_Code" type="{}Race_Ethnicity_Code" />
 *       &lt;attribute name="Patient_Religion_Code" type="{}Religion_Code" />
 *       &lt;attribute name="Patient_Current_Residence_Type">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Persons_Sharing_Living_Space">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Patient_Support_Network_Indicator" type="{}Indicator" />
 *       &lt;attribute name="Patient_Evacuation_Zone">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Patient_Support_Assistance">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Patient_Transportation_Assistance_Level">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *             &lt;enumeration value="TAL 1"/>
 *             &lt;enumeration value="TAL 2"/>
 *             &lt;enumeration value="TAL 3"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Patient_Transportation_Assistance_Level_Date" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Patient_Priority_Level_Code" type="{}Patient_Priority_Level_Code" />
 *       &lt;attribute name="Patient_Do_Not_Resuscitate_Indicator" type="{}Indicator" />
 *       &lt;attribute name="Patient_Advance_Directive_Indicator" type="{}Indicator" />
 *       &lt;attribute name="Patient_Do_Not_Resuscitate_Date" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Patient_Date_of_Death" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Patient_Death_Certificate_Number" type="{}ID" />
 *       &lt;attribute name="Patient_Weight">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *             &lt;totalDigits value="38"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Patient_Weight_Unit_Of_Measure">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Homebound_Indicator" type="{}Indicator" />
 *       &lt;attribute name="Patient_Discharge_Date" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Patient_Discharge_Status_Code">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Patient_Admission_Source_Code">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Patient_Admission_Type_Code">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Patient_Visit_Verification_ID" type="{}ID" />
 *       &lt;attribute name="Patient_Visit_Verification_ID_Qualifier" type="{}Patient_Visit_Verification_ID_Qualifier" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
namespace Sandata.George.Domain.Entities
{
	[DataContract]
	public class Patient
	{

			[DataMember]
			public List<Payment> PaymentCollection { get; set; }

			[DataMember]
			public List<PatientIDCrosswalk> PatientIDCrosswalkCollection { get; set; }

			[DataMember]
			public List<PatientNutritionalRequirement> PatientNutritionalRequirementCollection { get; set; }

			[DataMember]
			public List<PatientClinicalAssessment> PatientClinicalAssessmentCollection { get; set; }

			[DataMember]
			public List<Schedule> ScheduleCollection { get; set; }

			[DataMember]
			public List<PlanOfCare> PlanOfCareCollection { get; set; }

			[DataMember]
			public List<BillingRate> BillingRateCollection { get; set; }

			[DataMember]
			public List<PatientMedicalHistory> PatientMedicalHistoryCollection { get; set; }

			[DataMember]
			public List<ScheduleParticipantExclusion> ScheduleParticipantExclusionCollection { get; set; }

			[DataMember]
			public List<StaffPatientCrossReference> StaffPatientCrossReferenceCollection { get; set; }

			[DataMember]
			public List<PatientEnvironment> PatientEnvironmentCollection { get; set; }

			[DataMember]
			public List<PatientSafetyMeasure> PatientSafetyMeasureCollection { get; set; }

			[DataMember]
			public List<StaffPatientHistory> StaffPatientHistoryCollection { get; set; }

			[DataMember]
			public List<PatientContactEmail> PatientContactEmailCollection { get; set; }

			[DataMember]
			public List<PatientContactPhone> PatientContactPhoneCollection { get; set; }

			[DataMember]
			public List<PatientDesigneeContactDetail> PatientDesigneeContactDetailCollection { get; set; }

			[DataMember]
			public List<PatientIntake> PatientIntakeCollection { get; set; }

			[DataMember]
			public List<Claim> ClaimCollection { get; set; }

			[DataMember]
			public List<Reference> ReferenceCollection { get; set; }

			[DataMember]
			public List<PatientDurableMedicalEquipmentAndSupply> PatientDurableMedicalEquipmentAndSupplyCollection { get; set; }

			[DataMember]
			public List<PatientMedication> PatientMedicationCollection { get; set; }

			[DataMember]
			public List<PatientDocumentCrosswalk> PatientDocumentCrosswalkCollection { get; set; }

			[DataMember]
			public List<ScheduleEvent> ScheduleEventCollection { get; set; }

			[DataMember]
			public List<Visit> VisitCollection { get; set; }

			[DataMember]
			public List<PatientAllergy> PatientAllergyCollection { get; set; }

			[DataMember]
			public List<Authorization> AuthorizationCollection { get; set; }

			[DataMember]
			public List<Invoice> InvoiceCollection { get; set; }

			[DataMember]
			public List<Billing> BillingCollection { get; set; }

			[DataMember]
			public List<AccountsReceivable> AccountsReceivableCollection { get; set; }

			[DataMember]
			public List<PatientRate> PatientRateCollection { get; set; }

			[DataMember]
			public List<StaffAssociatedRate> StaffAssociatedRateCollection { get; set; }

			[DataMember]
			public List<Eligibility> EligibilityCollection { get; set; }

			[DataMember]
			public List<PatientDiagnosis> PatientDiagnosisCollection { get; set; }

			[DataMember]
			public List<TimesheetDetail> TimesheetDetailCollection { get; set; }

			[DataMember]
			public List<PatientPayer> PatientPayerCollection { get; set; }

			[DataMember]
			public List<PatientRequirement> PatientRequirementCollection { get; set; }

			[DataMember]
			public List<PatientContactAddress> PatientContactAddressCollection { get; set; }

			[DataMember]
			public List<PatientHealthcareProfessional> PatientHealthcareProfessionalCollection { get; set; }

			[DataMember]
			public List<PatientNote> PatientNoteCollection { get; set; }

			[DataMember]
			public List<Order> OrderCollection { get; set; }

			[DataMember]
			public List<AdministrativeStaffPatient> AdministrativeStaffPatientCollection { get; set; }

			[DataMember(IsRequired = true)]
			public long PatientSK { get; set; }

			[DataMember(IsRequired = true)]
			public String PatientID { get; set; }

			[IgnoreDataMember]
			public DateTime RecordCreateTimestamp { get; set; }

			[DataMember(Name = "RecordCreateTimestamp", IsRequired = true)]
			public string RecordCreateTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordCreateTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordCreateTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordUpdateTimestamp { get; set; }

			[DataMember(Name = "RecordUpdateTimestamp", IsRequired = true)]
			public string RecordUpdateTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordUpdateTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordUpdateTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordEffectiveTimestamp { get; set; }

			[DataMember(Name = "RecordEffectiveTimestamp", IsRequired = true)]
			public string RecordEffectiveTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordEffectiveTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordEffectiveTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordTerminationTimestamp { get; set; }

			[DataMember(Name = "RecordTerminationTimestamp", IsRequired = true)]
			public string RecordTerminationTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordTerminationTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordTerminationTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public String RecordCreatedBy { get; set; }

			[DataMember]
			public String RecordUpdatedBy { get; set; }

			[DataMember]
			public String ChangeReasonCode { get; set; }

			[DataMember]
			public String ChangeReasonMemo { get; set; }

			[DataMember(IsRequired = true)]
			public long ChangeVersionID { get; set; }

			[DataMember(IsRequired = true)]
			public bool CurrentRecordIndicator { get; set; }

			[DataMember(IsRequired = true)]
			public String BusinessEntityID { get; set; }

			[DataMember]
			public String TimezoneName { get; set; }

			[DataMember]
			public PatientStatusName PatientStatusName { get; set; }

			[IgnoreDataMember]
			public Nullable<DateTime> PatientStatusChangeDate { get; set; }

			[DataMember(Name = "PatientStatusChangeDate")]
			public string PatientStatusChangeDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(PatientStatusChangeDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						PatientStatusChangeDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public TaxpayerIdentificationNumberQualifier PatientTaxpayerIdentificationNumberQualifier { get; set; }

			[DataMember]
			public String PatientTaxpayerIdentificationNumber { get; set; }

			[DataMember]
			public String PatientMedicalRecordNumber { get; set; }

			[DataMember]
			public String PatientBusinessEntityAdmissionID { get; set; }

			[DataMember]
			public String PatientMedicareID { get; set; }

			[DataMember]
			public String PatientMedicaidID { get; set; }

			[DataMember]
			public String PatientOtherID { get; set; }

			[DataMember]
			public String PatientOtherIDQualifier { get; set; }

			[DataMember]
			public String PatientFirstName { get; set; }

			[DataMember]
			public String PatientLastName { get; set; }

			[DataMember]
			public String PatientMiddleName { get; set; }

			[DataMember]
			public MaritalStatusName PatientMaritalStatusName { get; set; }

			[IgnoreDataMember]
			public Nullable<DateTime> PatientDateofBirth { get; set; }

			[DataMember(Name = "PatientDateofBirth")]
			public string PatientDateofBirthStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(PatientDateofBirth);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						PatientDateofBirth = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public GenderTypeName PatientGenderTypeName { get; set; }

			[DataMember]
			public String PatientPreferredContactMethod { get; set; }

			[DataMember]
			public String PatientPreferredLanguageCode { get; set; }

			[DataMember]
			public String PatientPreferredNickname { get; set; }

			[DataMember]
			public bool? NonEnglishSpeakingIndicator { get; set; }

			[DataMember]
			public String PatientWrittenLanguage { get; set; }

			[DataMember]
			public String PatientRaceEthnicityCode { get; set; }

			[DataMember]
			public String PatientReligionCode { get; set; }

			[DataMember]
			public String PatientCurrentResidenceType { get; set; }

			[DataMember]
			public String PersonsSharingLivingSpace { get; set; }

			[DataMember]
			public bool? PatientSupportNetworkIndicator { get; set; }

			[DataMember]
			public String PatientEvacuationZone { get; set; }

			[DataMember]
			public String PatientSupportAssistance { get; set; }

			[DataMember]
			public String PatientTransportationAssistanceLevel { get; set; }

			[IgnoreDataMember]
			public Nullable<DateTime> PatientTransportationAssistanceLevelDate { get; set; }

			[DataMember(Name = "PatientTransportationAssistanceLevelDate")]
			public string PatientTransportationAssistanceLevelDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(PatientTransportationAssistanceLevelDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						PatientTransportationAssistanceLevelDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public String PatientPriorityLevelCode { get; set; }

			[DataMember]
			public bool? PatientDoNotResuscitateIndicator { get; set; }

			[DataMember]
			public bool? PatientAdvanceDirectiveIndicator { get; set; }

			[IgnoreDataMember]
			public Nullable<DateTime> PatientDoNotResuscitateDate { get; set; }

			[DataMember(Name = "PatientDoNotResuscitateDate")]
			public string PatientDoNotResuscitateDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(PatientDoNotResuscitateDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						PatientDoNotResuscitateDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public Nullable<DateTime> PatientDateofDeath { get; set; }

			[DataMember(Name = "PatientDateofDeath")]
			public string PatientDateofDeathStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(PatientDateofDeath);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						PatientDateofDeath = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public String PatientDeathCertificateNumber { get; set; }

			[DataMember]
			public decimal? PatientWeight { get; set; }

			[DataMember]
			public String PatientWeightUnitOfMeasure { get; set; }

			[DataMember]
			public bool? HomeboundIndicator { get; set; }

			[IgnoreDataMember]
			public Nullable<DateTime> PatientDischargeDate { get; set; }

			[DataMember(Name = "PatientDischargeDate")]
			public string PatientDischargeDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(PatientDischargeDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						PatientDischargeDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public String PatientDischargeStatusCode { get; set; }

			[DataMember]
			public String PatientAdmissionSourceCode { get; set; }

			[DataMember]
			public String PatientAdmissionTypeCode { get; set; }

			[DataMember]
			public String PatientVisitVerificationID { get; set; }

			[DataMember]
			public String PatientVisitVerificationIDQualifier { get; set; }


	}
}
