//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.27 at 10:53:27 PM EST 
//


using Sandata.George.Common;
using Sandata.George.Common.Helpers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Threading.Tasks;





/**
 * The International Statistical Classification of Diseases and Related Health Problems, usually called by the short-form name International Classification of Diseases (ICD), is the international "standard diagnostic tool for epidemiology, health management and clinical purposes".[1] The ICD is maintained by the World Health Organization (WHO), the directing and coordinating authority for health within the United Nations System.[2] The ICD is designed as a health care classification system, providing a system of diagnostic codes for classifying diseases, including nuanced classifications of a wide variety of signs, symptoms, abnormal findings, complaints, social circumstances, and external causes of injury or disease. This system is designed to map health conditions to corresponding generic categories together with specific variations, assigning for these a designated code, up to six characters long. Thus, major categories are designed to include a set of similar diseases.
 * 
 * The ICD is published by the WHO and used worldwide for morbidity and mortality statistics, reimbursement systems, and automated decision support in health care. This system is designed to promote international comparability in the collection, processing, classification, and presentation of these statistics. As in the case of the analogous (but limited to mental and behavioral disorders) Diagnostic and Statistical Manual of Mental Disorders (DSM, currently in version 5), the ICD is a major project to statistically classify health disorders, and provide diagnostic assistance. The ICD is a core statistically based classificatory diagnostic system for health care related issues of the WHO Family of International Classifications (WHO-FIC).[3]
 * 
 * The ICD is revised periodically and is currently in its tenth revision. The ICD-10, as it is therefore known, was developed in 1992 to track health statistics. ICD-11 was planned for 2017,[4][5] but has been pushed back to 2018.[6] As of 2007, development plans included using Web 2.0 principles to support detailed revision.[7] Annual minor updates and triennial major updates are published by the WHO.[8] The ICD is part of a "family" of guides that can be used to complement each other, including also the International Classification of Functioning, Disability and Health which focuses on the domains of functioning (disability) associated with health conditions, from both medical and social perspectives.
 * 
 * <p>Java class for ICD_Diagnosis_Lookup complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ICD_Diagnosis_Lookup">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Accounts_Receivable" type="{}Accounts_Receivable" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Invoice" type="{}Invoice" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Billing" type="{}Billing" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Claim" type="{}Claim" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Admission_Period_Diagnosis" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Patient_Diagnosis" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Claim_Line" type="{}Claim_Line" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="ICD_Diagnosis_Lookup_SK" use="required" type="{}Surrogate_Key" />
 *       &lt;attribute name="Record_Create_Timestamp" use="required" type="{}Record_Create_Timestamp" />
 *       &lt;attribute name="Record_Update_Timestamp" use="required" type="{}Record_Update_Timestamp" />
 *       &lt;attribute name="Record_Effective_Timestamp" use="required" type="{}Record_Effective_Timestamp" />
 *       &lt;attribute name="Record_Termination_Timestamp" use="required" type="{}Record_Termination_Timestamp" />
 *       &lt;attribute name="Record_Created_By" type="{}Record_Created_By" />
 *       &lt;attribute name="Record_Updated_By" type="{}Record_Updated_By" />
 *       &lt;attribute name="Change_Reason_Memo" type="{}Change_Reason_Memo" />
 *       &lt;attribute name="Current_Record_Indicator" use="required" type="{}Current_Record_Indicator" />
 *       &lt;attribute name="Change_Version_ID" use="required" type="{}Change_Version_ID" />
 *       &lt;attribute name="ICD_Diagnosis_Code" use="required" type="{}ICD_Diagnosis_Code" />
 *       &lt;attribute name="ICD_Diagnosis_Code_Revision_Qualifier" use="required" type="{}ICD_Diagnosis_Code_Revision_Qualifier" />
 *       &lt;attribute name="ICD_Diagnosis_Code_Short_Description" use="required" type="{}Description_Short" />
 *       &lt;attribute name="ICD_Diagnosis_Code_Long_Description" type="{}Description_Long" />
 *       &lt;attribute name="ICD_Diagnosis_Code_Effective_Date" use="required" type="{}Attribute_Effective_Date" />
 *       &lt;attribute name="ICD_Diagnosis_Code_Termination_Date" use="required" type="{}Attribute_Termination_Date" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
namespace Sandata.George.Domain.Entities
{
	[DataContract]
	public class ICDDiagnosisLookup
	{

			[DataMember]
			public List<AccountsReceivable> AccountsReceivableCollection { get; set; }

			[DataMember]
			public List<Invoice> InvoiceCollection { get; set; }

			[DataMember]
			public List<Billing> BillingCollection { get; set; }

			[DataMember]
			public List<Claim> ClaimCollection { get; set; }

			[DataMember]
			public List<AdmissionPeriodDiagnosis> AdmissionPeriodDiagnosisCollection { get; set; }

			[DataMember]
			public List<PatientDiagnosis> PatientDiagnosisCollection { get; set; }

			[DataMember]
			public List<ClaimLine> ClaimLineCollection { get; set; }

			[DataMember(IsRequired = true)]
			public long ICDDiagnosisLookupSK { get; set; }

			[IgnoreDataMember]
			public DateTime RecordCreateTimestamp { get; set; }

			[DataMember(Name = "RecordCreateTimestamp", IsRequired = true)]
			public string RecordCreateTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordCreateTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordCreateTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordUpdateTimestamp { get; set; }

			[DataMember(Name = "RecordUpdateTimestamp", IsRequired = true)]
			public string RecordUpdateTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordUpdateTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordUpdateTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordEffectiveTimestamp { get; set; }

			[DataMember(Name = "RecordEffectiveTimestamp", IsRequired = true)]
			public string RecordEffectiveTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordEffectiveTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordEffectiveTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordTerminationTimestamp { get; set; }

			[DataMember(Name = "RecordTerminationTimestamp", IsRequired = true)]
			public string RecordTerminationTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordTerminationTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordTerminationTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public String RecordCreatedBy { get; set; }

			[DataMember]
			public String RecordUpdatedBy { get; set; }

			[DataMember]
			public String ChangeReasonMemo { get; set; }

			[DataMember(IsRequired = true)]
			public bool CurrentRecordIndicator { get; set; }

			[DataMember(IsRequired = true)]
			public long ChangeVersionID { get; set; }

			[DataMember(IsRequired = true)]
			public String ICDDiagnosisCode { get; set; }

			[DataMember(IsRequired = true)]
			public ICDDiagnosisCodeRevisionQualifier ICDDiagnosisCodeRevisionQualifier { get; set; }

			[DataMember(IsRequired = true)]
			public String ICDDiagnosisCodeShortDescription { get; set; }

			[DataMember]
			public String ICDDiagnosisCodeLongDescription { get; set; }

			[IgnoreDataMember]
			public DateTime ICDDiagnosisCodeEffectiveDate { get; set; }

			[DataMember(Name = "ICDDiagnosisCodeEffectiveDate", IsRequired = true)]
			public string ICDDiagnosisCodeEffectiveDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(ICDDiagnosisCodeEffectiveDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						ICDDiagnosisCodeEffectiveDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime ICDDiagnosisCodeTerminationDate { get; set; }

			[DataMember(Name = "ICDDiagnosisCodeTerminationDate", IsRequired = true)]
			public string ICDDiagnosisCodeTerminationDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(ICDDiagnosisCodeTerminationDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						ICDDiagnosisCodeTerminationDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}


	}
}
