//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.27 at 10:53:27 PM EST 
//


using Sandata.George.Common;
using Sandata.George.Common.Helpers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Threading.Tasks;





/**
 * The payment table holds the detail on any payment(s) received (either from a payer or a patient).
 * 
 * 
 * <p>Java class for Payment complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Payment">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}Payment_Applied" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="Payment_SK" use="required" type="{}Surrogate_Key" />
 *       &lt;attribute name="Record_Create_Timestamp" use="required" type="{}Record_Create_Timestamp" />
 *       &lt;attribute name="Record_Update_Timestamp" use="required" type="{}Record_Update_Timestamp" />
 *       &lt;attribute name="Record_Effective_Timestamp" use="required" type="{}Record_Effective_Timestamp" />
 *       &lt;attribute name="Record_Termination_Timestamp" use="required" type="{}Record_Termination_Timestamp" />
 *       &lt;attribute name="Record_Created_By" type="{}Record_Created_By" />
 *       &lt;attribute name="Record_Updated_By" type="{}Record_Updated_By" />
 *       &lt;attribute name="Change_Reason_Memo" type="{}Change_Reason_Memo" />
 *       &lt;attribute name="Current_Record_Indicator" use="required" type="{}Current_Record_Indicator" />
 *       &lt;attribute name="Change_Version_ID" use="required" type="{}Change_Version_ID" />
 *       &lt;attribute name="Payer_SK" use="required" type="{}Surrogate_Key" />
 *       &lt;attribute name="Claim_Payment_Advice_SK" use="required" type="{}Surrogate_Key" />
 *       &lt;attribute name="Payment_835_History_SK" use="required" type="{}Surrogate_Key" />
 *       &lt;attribute name="Billing_Detail_SK" use="required" type="{}Surrogate_Key" />
 *       &lt;attribute name="Claim_SK" use="required" type="{}Surrogate_Key" />
 *       &lt;attribute name="Business_Entity_ID" use="required" type="{}ID" />
 *       &lt;attribute name="Patient_ID" use="required" type="{}ID" />
 *       &lt;attribute name="Billing_Number" type="{}ID" />
 *       &lt;attribute name="Sandata_Claim_ID" type="{}ID" />
 *       &lt;attribute name="Payment_Source">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Payment_Amount" type="{}Money" />
 *       &lt;attribute name="Full_Payment_Indicator" type="{}Indicator" />
 *       &lt;attribute name="Partial_Payment_Indicator" type="{}Indicator" />
 *       &lt;attribute name="Method_Of_Payment">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Check_Number">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *             &lt;totalDigits value="6"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Bank_Routing_Number" type="{}ID" />
 *       &lt;attribute name="Bank_Account_Number" type="{}ID" />
 *       &lt;attribute name="Bank_Account_Type">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Check_Issue_Date" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Bounced_Check_Indicator" type="{}Indicator" />
 *       &lt;attribute name="Check_Status">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Check_Reason_For_Hold">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="200"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Credit_Card_Type">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Credit_Card_Number" type="{}ID" />
 *       &lt;attribute name="Credit_Card_Holder_Name" type="{}Name" />
 *       &lt;attribute name="Credit_Card_Holder_Address_Line_1" type="{}Address_Line" />
 *       &lt;attribute name="Credit_Card_Holder_Address_Line_2" type="{}Address_Line" />
 *       &lt;attribute name="Credit_Card_Holder_Apartment_Number" type="{}Apartment_Number" />
 *       &lt;attribute name="Credit_Card_Holder_City" type="{}City" />
 *       &lt;attribute name="Credit_Card_Holder_State" type="{}State_Code" />
 *       &lt;attribute name="Credit_Card_Holder_Postal_Code" type="{}Postal_Code" />
 *       &lt;attribute name="Credit_Card_Expiration_Date" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Credit_Card_CVC_Code" type="{}Code" />
 *       &lt;attribute name="Credit_Card_Auth_Code" type="{}Code" />
 *       &lt;attribute name="Credit_Card_Auth_Date" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Posted_Date" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Payment_Processing_Method_Code">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Batch_ID" type="{}ID" />
 *       &lt;attribute name="Payment_Posted_Indicator" type="{}Indicator" />
 *       &lt;attribute name="Payment_Posted_Date" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Payment_Post_Status_Code" type="{}Code" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
namespace Sandata.George.Domain.Entities
{
	[DataContract]
	public class Payment
	{

			[DataMember]
			public List<PaymentApplied> PaymentAppliedCollection { get; set; }

			[DataMember(IsRequired = true)]
			public long PaymentSK { get; set; }

			[IgnoreDataMember]
			public DateTime RecordCreateTimestamp { get; set; }

			[DataMember(Name = "RecordCreateTimestamp", IsRequired = true)]
			public string RecordCreateTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordCreateTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordCreateTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordUpdateTimestamp { get; set; }

			[DataMember(Name = "RecordUpdateTimestamp", IsRequired = true)]
			public string RecordUpdateTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordUpdateTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordUpdateTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordEffectiveTimestamp { get; set; }

			[DataMember(Name = "RecordEffectiveTimestamp", IsRequired = true)]
			public string RecordEffectiveTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordEffectiveTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordEffectiveTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordTerminationTimestamp { get; set; }

			[DataMember(Name = "RecordTerminationTimestamp", IsRequired = true)]
			public string RecordTerminationTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordTerminationTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordTerminationTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public String RecordCreatedBy { get; set; }

			[DataMember]
			public String RecordUpdatedBy { get; set; }

			[DataMember]
			public String ChangeReasonMemo { get; set; }

			[DataMember(IsRequired = true)]
			public bool CurrentRecordIndicator { get; set; }

			[DataMember(IsRequired = true)]
			public long ChangeVersionID { get; set; }

			[DataMember(IsRequired = true)]
			public long PayerSK { get; set; }

			[DataMember(IsRequired = true)]
			public long ClaimPaymentAdviceSK { get; set; }

			[DataMember(IsRequired = true)]
			public long Payment835HistorySK { get; set; }

			[DataMember(IsRequired = true)]
			public long BillingDetailSK { get; set; }

			[DataMember(IsRequired = true)]
			public long ClaimSK { get; set; }

			[DataMember(IsRequired = true)]
			public String BusinessEntityID { get; set; }

			[DataMember(IsRequired = true)]
			public String PatientID { get; set; }

			[DataMember]
			public String BillingNumber { get; set; }

			[DataMember]
			public String SandataClaimID { get; set; }

			[DataMember]
			public String PaymentSource { get; set; }

			[DataMember]
			public decimal? PaymentAmount { get; set; }

			[DataMember]
			public bool? FullPaymentIndicator { get; set; }

			[DataMember]
			public bool? PartialPaymentIndicator { get; set; }

			[DataMember]
			public String MethodOfPayment { get; set; }

			[DataMember]
			public decimal? CheckNumber { get; set; }

			[DataMember]
			public String BankRoutingNumber { get; set; }

			[DataMember]
			public String BankAccountNumber { get; set; }

			[DataMember]
			public String BankAccountType { get; set; }

			[IgnoreDataMember]
			public Nullable<DateTime> CheckIssueDate { get; set; }

			[DataMember(Name = "CheckIssueDate")]
			public string CheckIssueDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(CheckIssueDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						CheckIssueDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public bool? BouncedCheckIndicator { get; set; }

			[DataMember]
			public String CheckStatus { get; set; }

			[DataMember]
			public String CheckReasonForHold { get; set; }

			[DataMember]
			public String CreditCardType { get; set; }

			[DataMember]
			public String CreditCardNumber { get; set; }

			[DataMember]
			public String CreditCardHolderName { get; set; }

			[DataMember]
			public String CreditCardHolderAddressLine1 { get; set; }

			[DataMember]
			public String CreditCardHolderAddressLine2 { get; set; }

			[DataMember]
			public String CreditCardHolderApartmentNumber { get; set; }

			[DataMember]
			public String CreditCardHolderCity { get; set; }

			[DataMember]
			public StateCode CreditCardHolderState { get; set; }

			[DataMember]
			public String CreditCardHolderPostalCode { get; set; }

			[IgnoreDataMember]
			public Nullable<DateTime> CreditCardExpirationDate { get; set; }

			[DataMember(Name = "CreditCardExpirationDate")]
			public string CreditCardExpirationDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(CreditCardExpirationDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						CreditCardExpirationDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public String CreditCardCVCCode { get; set; }

			[DataMember]
			public String CreditCardAuthCode { get; set; }

			[IgnoreDataMember]
			public Nullable<DateTime> CreditCardAuthDate { get; set; }

			[DataMember(Name = "CreditCardAuthDate")]
			public string CreditCardAuthDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(CreditCardAuthDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						CreditCardAuthDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public Nullable<DateTime> PostedDate { get; set; }

			[DataMember(Name = "PostedDate")]
			public string PostedDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(PostedDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						PostedDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public String PaymentProcessingMethodCode { get; set; }

			[DataMember]
			public String BatchID { get; set; }

			[DataMember]
			public bool? PaymentPostedIndicator { get; set; }

			[IgnoreDataMember]
			public Nullable<DateTime> PaymentPostedDate { get; set; }

			[DataMember(Name = "PaymentPostedDate")]
			public string PaymentPostedDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(PaymentPostedDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						PaymentPostedDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public String PaymentPostStatusCode { get; set; }


	}
}
