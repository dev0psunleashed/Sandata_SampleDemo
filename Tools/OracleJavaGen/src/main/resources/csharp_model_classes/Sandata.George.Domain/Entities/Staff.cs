//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.27 at 10:53:27 PM EST 
//


using Sandata.George.Common;
using Sandata.George.Common.Helpers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Threading.Tasks;





/**
 * Home care services worker means any person engaged in or applying to become engaged in providing home health aide services, as defined in Public  6
 * Health Law section 3602(4) or personal care aide services, as defined in Public Health Law section 3602(5). (NY State Dept of Health)
 * 
 * Section 403.5 Responsibilities of Home Care Services Entities.
 * (a) A home care services entity will have the following responsibilities with respect to home care services workers employed on or after September 25, 2009:
 * (1) For any home care services worker who began their training on or after September 25, 2009, a home care services entity shall access the worker’s registry information prior to the worker beginning to provide home care services for that entity.
 * (2) A person who successfully completed a state approved education or training program for home health aides or personal care aides that began on or after September 25, 2009, may not provide home care services unless the person’s information has been posted to the registry by the education or training program.
 * 
 * Paragraph (4) of subdivision (d), of section 505.14 of Title 18 NYCRR is amended to read as follows:
 * (4) The minimum criteria for the selection of all persons providing personal care services shall include, but are not limited to, the following:
 * (i) maturity, emotional and mental stability, and experience in personal care or homemaking;
 * (ii) ability to read and write, understand and carry out directions and instructions, record messages, and keep simple records;
 * (iii) sympathetic attitude toward providing services for patients at home who have medical problems; 
 * (iv) good physical health, as indicated by the documentation in the personnel file of all persons providing personal care services
 * 
 * <p>Java class for Staff complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Staff">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}Staff_InCaseOfEmergency_Contact_Detail" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Patient_Cross_Reference" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Patient_History" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Schedule" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Business_Entity_Staff_Role" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Credential" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Medical_History" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Admission_Type" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Benefit" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Administrative_Assessment" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Notification_Method" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Note" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Payroll_Detail" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Availability" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Working_Preference" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Document_Crosswalk" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Schedule_Participant_Exclusion" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Compliance" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Visit" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Schedule_Event" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Administrative_Staff_Staff_Cross_Reference" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Skill" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Administrative_Staff_Staff_Crosswalk" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Rate" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Timesheet_Summary" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Payroll_Output" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Training_Class_Event_Enrollment" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Language" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Supplemental_Rate" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Associated_Rate" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Training" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Contact_Address" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Certification" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Training_Class_Event_Attendance" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Staff_Compliance_Summary" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Payroll_Input" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="Staff_SK" use="required" type="{}Surrogate_Key" />
 *       &lt;attribute name="Staff_ID" use="required" type="{}ID" />
 *       &lt;attribute name="Record_Create_Timestamp" use="required" type="{}Record_Create_Timestamp" />
 *       &lt;attribute name="Record_Update_Timestamp" use="required" type="{}Record_Update_Timestamp" />
 *       &lt;attribute name="Record_Effective_Timestamp" use="required" type="{}Record_Effective_Timestamp" />
 *       &lt;attribute name="Record_Termination_Timestamp" use="required" type="{}Record_Termination_Timestamp" />
 *       &lt;attribute name="Record_Created_By" type="{}Record_Created_By" />
 *       &lt;attribute name="Record_Updated_By" type="{}Record_Updated_By" />
 *       &lt;attribute name="Change_Reason_Code" type="{}Change_Reason_Code" />
 *       &lt;attribute name="Change_Reason_Memo" type="{}Change_Reason_Memo" />
 *       &lt;attribute name="Current_Record_Indicator" use="required" type="{}Current_Record_Indicator" />
 *       &lt;attribute name="Change_Version_ID" use="required" type="{}Change_Version_ID" />
 *       &lt;attribute name="Business_Entity_ID" use="required" type="{}ID" />
 *       &lt;attribute name="Timezone_Name" type="{}Timezone_Name" />
 *       &lt;attribute name="Staff_Employment_Status_Type_Name" type="{}Employment_Status_Type_Name" />
 *       &lt;attribute name="Staff_Employment_Status_Change_Date" type="{http://www.w3.org/2001/XMLSchema}dateTime" />
 *       &lt;attribute name="Staff_Taxpayer_Identification_Number_Qualifier" type="{}Taxpayer_Identification_Number_Qualifier" />
 *       &lt;attribute name="Staff_Taxpayer_Identification_Number" type="{}Taxpayer_Identification_Number" />
 *       &lt;attribute name="Staff_Visit_Verification_ID" type="{}ID" />
 *       &lt;attribute name="Staff_Visit_Verification_ID_Qualifier" type="{}Staff_Visit_Verification_ID_Qualifier" />
 *       &lt;attribute name="Staff_National_Provider_Identifier" type="{}National_Provider_Identifier" />
 *       &lt;attribute name="Staff_Atypical_Provider_Identifier" type="{}Atypical_Provider_Identifier" />
 *       &lt;attribute name="Staff_Employment_Class_Name" type="{}Employment_Class_Name" />
 *       &lt;attribute name="Staff_Union_Member_Indicator" type="{}Indicator" />
 *       &lt;attribute name="Staff_First_Name" type="{}Name" />
 *       &lt;attribute name="Staff_Middle_Name" type="{}Name" />
 *       &lt;attribute name="Staff_Maiden_Name" type="{}Name" />
 *       &lt;attribute name="Staff_Last_Name" type="{}Name" />
 *       &lt;attribute name="Staff_Nickname" type="{}Name" />
 *       &lt;attribute name="Staff_Email" type="{}Email" />
 *       &lt;attribute name="Staff_Email_Other" type="{}Email" />
 *       &lt;attribute name="Staff_Location">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Staff_Preferred_Contact_Method">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Staff_Termination_Date" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Staff_Hire_Date" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Staff_Hire_Date_Qualifier" type="{}Staff_Hire_Date_Qualifier" />
 *       &lt;attribute name="Staff_Last_Raise_Date" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Staff_Marital_Status_Name" type="{}Marital_Status_Name" />
 *       &lt;attribute name="Staff_Date_Of_Birth" type="{http://www.w3.org/2001/XMLSchema}date" />
 *       &lt;attribute name="Staff_Gender_Type_Name" type="{}Gender_Type_Name" />
 *       &lt;attribute name="Staff_Race_Ethnicity_Code" type="{}Race_Ethnicity_Code" />
 *       &lt;attribute name="Staff_Education">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Staff_Religion_Code" type="{}Religion_Code" />
 *       &lt;attribute name="Staff_Transportation_Method">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Staff_Travel_Radius">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *             &lt;totalDigits value="3"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Staff_Overnight_OK_Indicator" type="{}Indicator" />
 *       &lt;attribute name="Staff_Live_In_OK_Indicator" type="{}Indicator" />
 *       &lt;attribute name="Staff_Team">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Staff_Military_Record">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Staff_Referral_Type">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="50"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Staff_Referral_Name" type="{}Name_Generic" />
 *       &lt;attribute name="Staff_Referral_Institution" type="{}Organization_Name" />
 *       &lt;attribute name="Staff_Referral_Comments" type="{}Comment_Short" />
 *       &lt;attribute name="Staff_Position_Name" type="{}Service_Name" />
 *       &lt;attribute name="Staff_Referral_Type_Name" type="{}Type_Name" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
namespace Sandata.George.Domain.Entities
{
	[DataContract]
	public class Staff
	{

			[DataMember]
			public List<StaffInCaseOfEmergencyContactDetail> StaffInCaseOfEmergencyContactDetailCollection { get; set; }

			[DataMember]
			public List<StaffPatientCrossReference> StaffPatientCrossReferenceCollection { get; set; }

			[DataMember]
			public List<StaffPatientHistory> StaffPatientHistoryCollection { get; set; }

			[DataMember]
			public List<Schedule> ScheduleCollection { get; set; }

			[DataMember]
			public List<BusinessEntityStaffRole> BusinessEntityStaffRoleCollection { get; set; }

			[DataMember]
			public List<StaffCredential> StaffCredentialCollection { get; set; }

			[DataMember]
			public List<StaffMedicalHistory> StaffMedicalHistoryCollection { get; set; }

			[DataMember]
			public List<StaffAdmissionType> StaffAdmissionTypeCollection { get; set; }

			[DataMember]
			public List<StaffBenefit> StaffBenefitCollection { get; set; }

			[DataMember]
			public List<StaffAdministrativeAssessment> StaffAdministrativeAssessmentCollection { get; set; }

			[DataMember]
			public List<StaffNotificationMethod> StaffNotificationMethodCollection { get; set; }

			[DataMember]
			public List<StaffNote> StaffNoteCollection { get; set; }

			[DataMember]
			public List<StaffPayrollDetail> StaffPayrollDetailCollection { get; set; }

			[DataMember]
			public List<StaffAvailability> StaffAvailabilityCollection { get; set; }

			[DataMember]
			public List<StaffWorkingPreference> StaffWorkingPreferenceCollection { get; set; }

			[DataMember]
			public List<StaffDocumentCrosswalk> StaffDocumentCrosswalkCollection { get; set; }

			[DataMember]
			public List<ScheduleParticipantExclusion> ScheduleParticipantExclusionCollection { get; set; }

			[DataMember]
			public List<StaffCompliance> StaffComplianceCollection { get; set; }

			[DataMember]
			public List<Visit> VisitCollection { get; set; }

			[DataMember]
			public List<ScheduleEvent> ScheduleEventCollection { get; set; }

			[DataMember]
			public List<AdministrativeStaffStaffCrossReference> AdministrativeStaffStaffCrossReferenceCollection { get; set; }

			[DataMember]
			public List<StaffSkill> StaffSkillCollection { get; set; }

			[DataMember]
			public List<AdministrativeStaffStaffCrosswalk> AdministrativeStaffStaffCrosswalkCollection { get; set; }

			[DataMember]
			public List<StaffRate> StaffRateCollection { get; set; }

			[DataMember]
			public List<TimesheetSummary> TimesheetSummaryCollection { get; set; }

			[DataMember]
			public List<PayrollOutput> PayrollOutputCollection { get; set; }

			[DataMember]
			public List<StaffTrainingClassEventEnrollment> StaffTrainingClassEventEnrollmentCollection { get; set; }

			[DataMember]
			public List<StaffLanguage> StaffLanguageCollection { get; set; }

			[DataMember]
			public List<StaffSupplementalRate> StaffSupplementalRateCollection { get; set; }

			[DataMember]
			public List<StaffAssociatedRate> StaffAssociatedRateCollection { get; set; }

			[DataMember]
			public List<StaffTraining> StaffTrainingCollection { get; set; }

			[DataMember]
			public List<StaffContactAddress> StaffContactAddressCollection { get; set; }

			[DataMember]
			public List<StaffCertification> StaffCertificationCollection { get; set; }

			[DataMember]
			public List<StaffTrainingClassEventAttendance> StaffTrainingClassEventAttendanceCollection { get; set; }

			[DataMember]
			public List<StaffComplianceSummary> StaffComplianceSummaryCollection { get; set; }

			[DataMember]
			public List<PayrollInput> PayrollInputCollection { get; set; }

			[DataMember(IsRequired = true)]
			public long StaffSK { get; set; }

			[DataMember(IsRequired = true)]
			public String StaffID { get; set; }

			[IgnoreDataMember]
			public DateTime RecordCreateTimestamp { get; set; }

			[DataMember(Name = "RecordCreateTimestamp", IsRequired = true)]
			public string RecordCreateTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordCreateTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordCreateTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordUpdateTimestamp { get; set; }

			[DataMember(Name = "RecordUpdateTimestamp", IsRequired = true)]
			public string RecordUpdateTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordUpdateTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordUpdateTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordEffectiveTimestamp { get; set; }

			[DataMember(Name = "RecordEffectiveTimestamp", IsRequired = true)]
			public string RecordEffectiveTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordEffectiveTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordEffectiveTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordTerminationTimestamp { get; set; }

			[DataMember(Name = "RecordTerminationTimestamp", IsRequired = true)]
			public string RecordTerminationTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordTerminationTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordTerminationTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public String RecordCreatedBy { get; set; }

			[DataMember]
			public String RecordUpdatedBy { get; set; }

			[DataMember]
			public String ChangeReasonCode { get; set; }

			[DataMember]
			public String ChangeReasonMemo { get; set; }

			[DataMember(IsRequired = true)]
			public bool CurrentRecordIndicator { get; set; }

			[DataMember(IsRequired = true)]
			public long ChangeVersionID { get; set; }

			[DataMember(IsRequired = true)]
			public String BusinessEntityID { get; set; }

			[DataMember]
			public String TimezoneName { get; set; }

			[DataMember]
			public EmploymentStatusTypeName StaffEmploymentStatusTypeName { get; set; }

			[IgnoreDataMember]
			public Nullable<DateTime> StaffEmploymentStatusChangeDate { get; set; }

			[DataMember(Name = "StaffEmploymentStatusChangeDate")]
			public string StaffEmploymentStatusChangeDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(StaffEmploymentStatusChangeDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						StaffEmploymentStatusChangeDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public TaxpayerIdentificationNumberQualifier StaffTaxpayerIdentificationNumberQualifier { get; set; }

			[DataMember]
			public String StaffTaxpayerIdentificationNumber { get; set; }

			[DataMember]
			public String StaffVisitVerificationID { get; set; }

			[DataMember]
			public String StaffVisitVerificationIDQualifier { get; set; }

			[DataMember]
			public String StaffNationalProviderIdentifier { get; set; }

			[DataMember]
			public String StaffAtypicalProviderIdentifier { get; set; }

			[DataMember]
			public String StaffEmploymentClassName { get; set; }

			[DataMember]
			public bool? StaffUnionMemberIndicator { get; set; }

			[DataMember]
			public String StaffFirstName { get; set; }

			[DataMember]
			public String StaffMiddleName { get; set; }

			[DataMember]
			public String StaffMaidenName { get; set; }

			[DataMember]
			public String StaffLastName { get; set; }

			[DataMember]
			public String StaffNickname { get; set; }

			[DataMember]
			public String StaffEmail { get; set; }

			[DataMember]
			public String StaffEmailOther { get; set; }

			[DataMember]
			public String StaffLocation { get; set; }

			[DataMember]
			public String StaffPreferredContactMethod { get; set; }

			[IgnoreDataMember]
			public Nullable<DateTime> StaffTerminationDate { get; set; }

			[DataMember(Name = "StaffTerminationDate")]
			public string StaffTerminationDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(StaffTerminationDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						StaffTerminationDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public Nullable<DateTime> StaffHireDate { get; set; }

			[DataMember(Name = "StaffHireDate")]
			public string StaffHireDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(StaffHireDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						StaffHireDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public StaffHireDateQualifier StaffHireDateQualifier { get; set; }

			[IgnoreDataMember]
			public Nullable<DateTime> StaffLastRaiseDate { get; set; }

			[DataMember(Name = "StaffLastRaiseDate")]
			public string StaffLastRaiseDateStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(StaffLastRaiseDate);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						StaffLastRaiseDate = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public MaritalStatusName StaffMaritalStatusName { get; set; }

			[IgnoreDataMember]
			public Nullable<DateTime> StaffDateOfBirth { get; set; }

			[DataMember(Name = "StaffDateOfBirth")]
			public string StaffDateOfBirthStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(StaffDateOfBirth);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						StaffDateOfBirth = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public GenderTypeName StaffGenderTypeName { get; set; }

			[DataMember]
			public String StaffRaceEthnicityCode { get; set; }

			[DataMember]
			public String StaffEducation { get; set; }

			[DataMember]
			public String StaffReligionCode { get; set; }

			[DataMember]
			public String StaffTransportationMethod { get; set; }

			[DataMember]
			public decimal? StaffTravelRadius { get; set; }

			[DataMember]
			public bool? StaffOvernightOKIndicator { get; set; }

			[DataMember]
			public bool? StaffLiveInOKIndicator { get; set; }

			[DataMember]
			public String StaffTeam { get; set; }

			[DataMember]
			public String StaffMilitaryRecord { get; set; }

			[DataMember]
			public String StaffReferralType { get; set; }

			[DataMember]
			public String StaffReferralName { get; set; }

			[DataMember]
			public String StaffReferralInstitution { get; set; }

			[DataMember]
			public String StaffReferralComments { get; set; }

			[DataMember]
			public ServiceName StaffPositionName { get; set; }

			[DataMember]
			public String StaffReferralTypeName { get; set; }


	}
}
