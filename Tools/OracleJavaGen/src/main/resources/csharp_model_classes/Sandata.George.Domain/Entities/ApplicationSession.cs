//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.06.28 at 03:44:22 PM EDT 
//


using Sandata.George.Common;
using Sandata.George.Common.Helpers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Threading.Tasks;





/**
 * 
 * 
 * Wiki: A session  is a semi-permanent interactive information interchange, also known as a dialogue, a conversation or a meeting, between two or more communicating devices, or between a computer and user (see Login session). A session is set up or established at a certain point in time, and then torn down at some later point. An established communication session may involve more than one message in each direction. A session is typically, but not always, stateful, meaning that at least one of the communicating parts needs to save information about the session history in order to be able to communicate, as opposed to stateless communication, where the communication consists of independent requests with responses.
 * 
 * 
 * 
 * <p>Java class for Application_Session complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Application_Session">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}Report_Request" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Application_Audit" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{}Application_Log" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="Application_Session_SK" use="required" type="{}Surrogate_Key" />
 *       &lt;attribute name="Record_Create_Timestamp" use="required" type="{}Record_Create_Timestamp" />
 *       &lt;attribute name="Record_Update_Timestamp" use="required" type="{}Record_Update_Timestamp" />
 *       &lt;attribute name="User_Globally_Unique_Identifier" type="{}Computing_Globally_Unique_Identifier" />
 *       &lt;attribute name="Last_Renewed_Timestamp" type="{http://www.w3.org/2001/XMLSchema}dateTime" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@OracleMetadata(
        packageName = "PKG_APP",
        insertMethod = "insertAppSess",
        updateMethod = "updateAppSess",
        deleteMethod = "deleteAppSess",
        getMethod = "getAppSess",
        findMethod = "NotDefined_FindMethod",
        jpubClass = "com.sandata.lab.data.model.jpub.model.AppSessT",
        primaryKeys = {})
namespace Sandata.George.Domain.Entities
{
	[DataContract]
	public class ApplicationSession
	{




			[DataMember]
			public List<ReportRequest> ReportRequestCollection { get; set; }

			[DataMember]
			public List<ApplicationAudit> ApplicationAuditCollection { get; set; }

			[DataMember]
			public List<ApplicationLog> ApplicationLogCollection { get; set; }

			[DataMember(IsRequired = true)]
			public = "getAppSessSk", setter = "setAppSessSk", type = "java.math.BigDecimal", index = ApplicationSessionSK { get; set; }

    protected BigInteger applicationSessionSK;
			[DataMember(IsRequired = true)]
			public = "getRecCreateTmstp", setter = "setRecCreateTmstp", type = "java.sql.Timestamp", index = RecordCreateTimestamp { get; set; }

    protected Date recordCreateTimestamp;
			[DataMember(IsRequired = true)]
			public = "getRecUpdateTmstp", setter = "setRecUpdateTmstp", type = "java.sql.Timestamp", index = RecordUpdateTimestamp { get; set; }

    protected Date recordUpdateTimestamp;
			[DataMember]
			public = "getUserGuid", setter = "setUserGuid", type = "String", index = UserGloballyUniqueIdentifier { get; set; }

    protected String userGloballyUniqueIdentifier;
			[DataMember]
			public = "getLastRenewedTmstp", setter = "setLastRenewedTmstp", type = "java.sql.Timestamp", index = LastRenewedTimestamp { get; set; }

    protected Date lastRenewedTimestamp;

	}
}
