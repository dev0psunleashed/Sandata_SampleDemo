//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.27 at 10:53:27 PM EST 
//


using Sandata.George.Common;
using Sandata.George.Common.Helpers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Threading.Tasks;





/**
 * Lookup table that stores postal code information
 * 
 * Source:
 * 
 * https://zipcodedownload.com
 * 
 * 
 * <p>Java class for Postal_Code_Lookup complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Postal_Code_Lookup">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="Postal_Code_Lookup_SK" use="required" type="{}Surrogate_Key" />
 *       &lt;attribute name="Record_Create_Timestamp" use="required" type="{}Record_Create_Timestamp" />
 *       &lt;attribute name="Record_Update_Timestamp" use="required" type="{}Record_Update_Timestamp" />
 *       &lt;attribute name="Record_Effective_Timestamp" use="required" type="{}Record_Effective_Timestamp" />
 *       &lt;attribute name="Record_Termination_Timestamp" use="required" type="{}Record_Termination_Timestamp" />
 *       &lt;attribute name="Record_Created_By" type="{}Record_Created_By" />
 *       &lt;attribute name="Record_Updated_By" type="{}Record_Updated_By" />
 *       &lt;attribute name="Change_Reason_Memo" type="{}Change_Reason_Memo" />
 *       &lt;attribute name="Current_Record_Indicator" use="required" type="{}Current_Record_Indicator" />
 *       &lt;attribute name="Change_Version_ID" use="required" type="{}Change_Version_ID" />
 *       &lt;attribute name="Postal_Code" use="required" type="{}Postal_Code" />
 *       &lt;attribute name="Postal_Code_Source_Qualifier" use="required" type="{}Postal_Code_Source_Qualifier" />
 *       &lt;attribute name="Postal_Code_United_States_Postal_Service_Type_Code" type="{}Postal_Code_United_States_Postal_Service_Type_Code" />
 *       &lt;attribute name="Postal_Code_City_Name">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="100"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Postal_Code_United_States_Postal_Service_City_Type_Code" type="{}Postal_Code_United_States_Postal_Service_City_Type_Code" />
 *       &lt;attribute name="Postal_Code_County_Name">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="100"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="County_Federal_Information_Processing_Standard_Code" type="{}Federal_Information_Processing_Standard_Code" />
 *       &lt;attribute name="Postal_Code_State_Name">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="100"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Postal_Code_State_Code" type="{}State_Code" />
 *       &lt;attribute name="State_Federal_Information_Processing_Standard_Code" type="{}Federal_Information_Processing_Standard_Code" />
 *       &lt;attribute name="Postal_Code_Metropolitan_Statistical_Area_Code">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="4"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Postal_Code_Area_Code">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;maxLength value="16"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Timezone_Name" type="{}Timezone_Name" />
 *       &lt;attribute name="Universal_Time_Coordinated_Offset">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}decimal">
 *             &lt;totalDigits value="3"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="Postal_Code_Daylight_Savings_Time_Indicator" type="{}Indicator" />
 *       &lt;attribute name="Postal_Code_Coordinate_Latitude" type="{}Coordinate_Latitude" />
 *       &lt;attribute name="Postal_Code_Coordinate_Longitide" type="{}Coordinate_Longitide" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
namespace Sandata.George.Domain.Entities
{
	[DataContract]
	public class PostalCodeLookup
	{

			[DataMember(IsRequired = true)]
			public long PostalCodeLookupSK { get; set; }

			[IgnoreDataMember]
			public DateTime RecordCreateTimestamp { get; set; }

			[DataMember(Name = "RecordCreateTimestamp", IsRequired = true)]
			public string RecordCreateTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordCreateTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordCreateTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordUpdateTimestamp { get; set; }

			[DataMember(Name = "RecordUpdateTimestamp", IsRequired = true)]
			public string RecordUpdateTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordUpdateTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordUpdateTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordEffectiveTimestamp { get; set; }

			[DataMember(Name = "RecordEffectiveTimestamp", IsRequired = true)]
			public string RecordEffectiveTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordEffectiveTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordEffectiveTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[IgnoreDataMember]
			public DateTime RecordTerminationTimestamp { get; set; }

			[DataMember(Name = "RecordTerminationTimestamp", IsRequired = true)]
			public string RecordTerminationTimestampStr
			{
				get
				{
					return DateTimeHelper.ToDateTimeString(RecordTerminationTimestamp);
				}
				set
				{
					if (!String.IsNullOrEmpty(value))
					{
						RecordTerminationTimestamp = DateTimeHelper.ToDateTime(value);
					}
				}
			}

			[DataMember]
			public String RecordCreatedBy { get; set; }

			[DataMember]
			public String RecordUpdatedBy { get; set; }

			[DataMember]
			public String ChangeReasonMemo { get; set; }

			[DataMember(IsRequired = true)]
			public bool CurrentRecordIndicator { get; set; }

			[DataMember(IsRequired = true)]
			public long ChangeVersionID { get; set; }

			[DataMember(IsRequired = true)]
			public String PostalCodeProperty { get; set; }

			[DataMember(IsRequired = true)]
			public PostalCodeSourceQualifier PostalCodeSourceQualifier { get; set; }

			[DataMember]
			public PostalCodeUnitedStatesPostalServiceTypeCode PostalCodeUnitedStatesPostalServiceTypeCode { get; set; }

			[DataMember]
			public String PostalCodeCityName { get; set; }

			[DataMember]
			public PostalCodeUnitedStatesPostalServiceCityTypeCode PostalCodeUnitedStatesPostalServiceCityTypeCode { get; set; }

			[DataMember]
			public String PostalCodeCountyName { get; set; }

			[DataMember]
			public String CountyFederalInformationProcessingStandardCode { get; set; }

			[DataMember]
			public String PostalCodeStateName { get; set; }

			[DataMember]
			public StateCode PostalCodeStateCode { get; set; }

			[DataMember]
			public String StateFederalInformationProcessingStandardCode { get; set; }

			[DataMember]
			public String PostalCodeMetropolitanStatisticalAreaCode { get; set; }

			[DataMember]
			public String PostalCodeAreaCode { get; set; }

			[DataMember]
			public String TimezoneName { get; set; }

			[DataMember]
			public decimal? UniversalTimeCoordinatedOffset { get; set; }

			[DataMember]
			public bool? PostalCodeDaylightSavingsTimeIndicator { get; set; }

			[DataMember]
			public decimal? PostalCodeCoordinateLatitude { get; set; }

			[DataMember]
			public decimal? PostalCodeCoordinateLongitide { get; set; }


	}
}
