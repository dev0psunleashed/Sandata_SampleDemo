//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.06.28 at 11:05:46 PM EDT 
//


package com.sandata.lab.data.model.dl.model;

import com.google.gson.annotations.SerializedName;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Rate_Type_Name.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Rate_Type_Name">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;maxLength value="20"/>
 *     &lt;enumeration value="HOURLY"/>
 *     &lt;enumeration value="LIVE IN"/>
 *     &lt;enumeration value="MUTUAL"/>
 *     &lt;enumeration value="VISIT"/>
 *     &lt;enumeration value="HIGH TECH VISIT"/>
 *     &lt;enumeration value="THREE HOURS OR LESS"/>
 *     &lt;enumeration value="DIFFICULT TO SERVICE"/>
 *     &lt;enumeration value="CLUSTER"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "Rate_Type_Name")
@XmlEnum
public enum RateTypeName {

    @SerializedName("HOURLY")
    HOURLY("HOURLY"),
    @SerializedName("LIVE IN")
    LIVE_IN("LIVE IN"),
    @SerializedName("MUTUAL")
    MUTUAL("MUTUAL"),
    @SerializedName("VISIT")
    VISIT("VISIT"),
    @SerializedName("HIGH TECH VISIT")
    HIGH_TECH_VISIT("HIGH TECH VISIT"),
    @SerializedName("THREE HOURS OR LESS")
    THREE_HOURS_OR_LESS("THREE HOURS OR LESS"),
    @SerializedName("DIFFICULT TO SERVICE")
    DIFFICULT_TO_SERVICE("DIFFICULT TO SERVICE"),
    @SerializedName("CLUSTER")
    CLUSTER("CLUSTER");

    private final String value;

    RateTypeName(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static RateTypeName fromValue(String v) {
        for (RateTypeName c: RateTypeName.values()) {
            if (c.value.equalsIgnoreCase(v)) {
                return c;
            }
        }

        return valueOf(v);
    }

    public String toString() {
        return this.value;
    }
}
